Metadata-Version: 2.1
Name: py_serial_rs
Version: 0.1.6
Classifier: Programming Language :: Rust
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
License-File: LICENSE
Summary: Read and write data over the serial ports
Author: Jürgen Hahn
Author-email: mail.jhahn@googlemail.com
Requires-Python: >=3.8
Description-Content-Type: text/x-rst; charset=UTF-8
Project-URL: Source Code, https://github.com/jrhahn/py_serial_rs
Project-URL: Issues, https://github.com/jrhahn/py_serial_rs/issues
Project-URL: Documentation, https://py-serial-rs.readthedocs.io/en/latest/

.. py_serial_rs documentation master file, created by
   sphinx-quickstart on Sun May 21 10:31:33 2023.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

py_serial_rs
========================================

The goal of this package is to provide a fast and reliable interface to the serial ports.

Instead of implementing the logic in Python, this package builds around `serialport <https://docs.rs/serialport/latest/serialport/>`_ written in Rust. This package supports threading.


========================================
Installation
========================================
`PyO3 <https://pyo3.rs/v0.18.3/>`_ (with maturin) will build a pip package for you. For this, make
sure that you are able to build rust packages with `cargo`. Create a virtual environment
and install the required pip packages with

.. code-block:: bash

   pip install -r requirements.txt

The pip package can then easily be build with

.. code-block:: bash

   maturin build --release

Voilà, a pip package to be used in your code!


========================================
Demo Scripts
========================================
Demo scripts are located in `/python`:

* `demo.py` shows a simple direct communication via the serial connection
* `demo_threads.py` demonstrates how this package can be used with threads


========================================
Documentation
========================================
Link to the documentation: `https://py-serial-rs.readthedocs.io/ <https://py-serial-rs.readthedocs.io/>`_
