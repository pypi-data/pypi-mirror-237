# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_card.ipynb.

# %% auto 0
__all__ = ['suits', 'ranks', 'Card', 'foo']

# %% ../nbs/00_card.ipynb 2
from nbdev.showdoc import *
from tqdm.autonotebook import tqdm
from fastcore.test import *
from fastcore.utils import *

# %% ../nbs/00_card.ipynb 3
suits = ['C', 'D', 'H', 'S']
ranks = [None, "A"] + [str(x) for x in range(2, 11)] + ['J', 'Q', 'K']

# %% ../nbs/00_card.ipynb 5
suits

# %% ../nbs/00_card.ipynb 11
class Card:
    'A playing card, created by passing in "rank" from "ranks" and "suit" from "suits"'
    def __init__(self, 
                 suit:int, # An index into 'suits'
                 rank:int): # An index into 'ranks'
        
        self.suit = suit
        self.rank = rank
        
    def __str__(self): 
        return f"{ranks[self.rank]} {suits[self.suit]}"
    
    __repr__ = __str__
    

# %% ../nbs/00_card.ipynb 13
@patch
def __eq__(self:Card, a:Card): 
    return (self.suit, self.rank) == (a.suit, a.rank)

# %% ../nbs/00_card.ipynb 14
test_eq(Card(suit=1, rank = 3), Card(suit = 1, rank = 3))
test_ne(Card(suit=2, rank = 3), Card(suit = 1, rank = 3))
test_ne(Card(suit=1, rank = 2), Card(suit = 1, rank = 3))

# %% ../nbs/00_card.ipynb 15
@patch
def __lt__(self:Card, a:Card):
    return (self.suit, self.rank) < (a.suit, a.rank)

# %% ../nbs/00_card.ipynb 16
assert Card(suit=1, rank = 3) < Card(suit = 2, rank = 3)

# %% ../nbs/00_card.ipynb 17
@patch
def __gt__(self:Card, a:Card):
    return (self.suit, self.rank) > (a.suit, a.rank)

# %% ../nbs/00_card.ipynb 18
assert Card(suit=1, rank = 4) > Card(suit = 1, rank = 3)
assert not Card(suit=1, rank = 4) > Card(suit = 2, rank = 3)

# %% ../nbs/00_card.ipynb 19
def foo(): pass
