# This file was auto-generated by Fern from our API Definition.

import urllib.parse
from json.decoder import JSONDecodeError

from ...core.api_error import ApiError
from ...core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ...types.download_url_response import DownloadUrlResponse
from ...types.upload_url_response import UploadUrlResponse

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class RelationsClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._client_wrapper = client_wrapper

    def upload(self) -> UploadUrlResponse:
        """
        ### BalkanID Relations upload CSV Format

        In this section, we will explain the BalkanID Relations CSV format.

        **Sample CSV**

        | <u> **Identity ID** </u> | <u> **Username** </u> | **Identity email** | <u> **Identity name** </u> | <u> **App ID** </u> | <u> **App Name** </u> | **App Description** | **Relation type** | **Employee email** | **Employee name** | **Employee department** | **Employee job title** |
        | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |
        | id/U-ysy2l6niyJmThu_Z-9urozE8tQBAEmJhjZ4nVxphg | ses-smtp-user.20220203-154927 |     | ses-smtp-user.20220203-154927 | aws/01FX103897S15JVJAR17GS3SQT | Amazon Web Services |     | owns | sam@example.com |     |     |     |
        | id/xjyKMctjdu6l3iaJwo6OkvJ8BMtvFrmWEz4yIK5xrks | anrew.garfield |     | anrew.garfield | aws/01FX103897S15JVJAR17GS3SQC | Amazon Web Services |     |     |     |     |     |     |
        | id/YPvK3hg7UfMQTz5VdEb8HraIouOCr35BQxpYlVKrYdg | michael.keaton |     | michael.keaton | aws/01FX103897S15JVJAR17GS3SQC | Amazon Web Services |     |     |     |     |     |     |
        | email/0g3BUiakDZW63KtF3wajG85noCRZdlzVH9SKKVXMfT0 | james@example.com | james@example.com | James S | google/01H965ZRNQHAS2B8GKJA85X75C | Google |     |     |     |     |     |     |
        | email/0urU-a0COLlg3FIyI1pPAcmZM7d9zpmG8O2b3HAuirs | sam@example.com | sam@example.com | Sam L | google/01H965ZRNQHAS2B8GKJA85X75C | Google |     | is  | sam@example.com | Sam L | Engineering | Staff Engineer |
        | email/CUp7jz61_N5K2qctJNyKsSFy1pZSpDneEStYN89dImw | michael@example.com | michael@example.com | Michael K | google/01H965ZRNQHAS2B8GKJA85X75C | Google |     | is  | michael@example.com | Micheal K | Engineering | Head of Engineering |

        **NOTE**: Columns that are <u> underlined </u> are required always.

        **Column Definitions**

        |  Column Name   |   Column Description  |
        | --- | --- |
        | Identity ID | *Required*, unique Identity ID |
        | Username | *Required*, username of the identity |
        | Identity email | *Optional*, Email of the Identity |
        | Identity name | *Required*, Name of the identity |
        | App ID | *Required*, Unique ID of the application |
        | App Name | *Required*, name of the application |
        | App Description | *Optional* |
        | Relation type | *Optional*, Type of relationship, currently support "IS", "OWNS" |
        | Employee email | *Optional*, the email of the employee according to the balkanid tenant |
        | Employee name | *Optional*, Name of the employee |
        | Employee department | *Optional*, Department of the employee |
        | Employee job title | *Optional*, Title of the employee |

        ### Upload the CSV file via the pre-signed URL
        After retrieving the pre-signed URL in the previous step, all that remains is to upload the CSV in BalkanID Canonical CSV format to the pre-signed URL.
        Below is a summary of the request using `curl`:
        ```
        curl -X PUT <pre-signed url> --data-binary @./path/to/relations.csv
        ```
        The request URL is the pre-signed URL from previous step.

        The request method is `PUT`.

        Required request body is the CSV in [BalkanID Relations CSV format](#balkanid-relations-upload-csv-format).
        """
        _response = self._client_wrapper.httpx_client.request(
            "POST",
            urllib.parse.urljoin(
                f"{self._client_wrapper.get_base_url()}/", "api/rest/v0/relations_employees_identities/upload-url"
            ),
            headers=self._client_wrapper.get_headers(),
            timeout=60,
        )
        if 200 <= _response.status_code < 300:
            return pydantic.parse_obj_as(UploadUrlResponse, _response.json())  # type: ignore
        try:
            _response_json = _response.json()
        except JSONDecodeError:
            raise ApiError(status_code=_response.status_code, body=_response.text)
        raise ApiError(status_code=_response.status_code, body=_response_json)

    def download(self) -> DownloadUrlResponse:
        """
        ### BalkanID Relations download CSV Format

        In this section, we will explain the BalkanID Relations CSV format.

        **Sample CSV**

        | <u> **Identity ID** </u> | <u> **Username** </u> | **Identity email** | <u> **Identity name** </u> | <u> **App ID** </u> | <u> **App Name** </u> | **App Description** | **Relation type** | **Employee email** | **Employee name** | **Employee department** | **Employee job title** |
        | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |
        | id/U-ysy2l6niyJmThu_Z-9urozE8tQBAEmJhjZ4nVxphg | ses-smtp-user.20220203-154927 |     | ses-smtp-user.20220203-154927 | aws/01FX103897S15JVJAR17GS3SQT | Amazon Web Services |     | owns | sam@example.com |     |     |     |
        | id/xjyKMctjdu6l3iaJwo6OkvJ8BMtvFrmWEz4yIK5xrks | anrew.garfield |     | anrew.garfield | aws/01FX103897S15JVJAR17GS3SQC | Amazon Web Services |     |     |     |     |     |     |
        | id/YPvK3hg7UfMQTz5VdEb8HraIouOCr35BQxpYlVKrYdg | michael.keaton |     | michael.keaton | aws/01FX103897S15JVJAR17GS3SQC | Amazon Web Services |     |     |     |     |     |     |
        | email/0g3BUiakDZW63KtF3wajG85noCRZdlzVH9SKKVXMfT0 | james@example.com | james@example.com | James S | google/01H965ZRNQHAS2B8GKJA85X75C | Google |     |     |     |     |     |     |
        | email/0urU-a0COLlg3FIyI1pPAcmZM7d9zpmG8O2b3HAuirs | sam@example.com | sam@example.com | Sam L | google/01H965ZRNQHAS2B8GKJA85X75C | Google |     | is  | sam@example.com | Sam L | Engineering | Staff Engineer |
        | email/CUp7jz61_N5K2qctJNyKsSFy1pZSpDneEStYN89dImw | michael@example.com | michael@example.com | Michael K | google/01H965ZRNQHAS2B8GKJA85X75C | Google |     | is  | michael@example.com | Micheal K | Engineering | Head of Engineering |

        **NOTE**: Columns that are <u> underlined </u> are required always.

        **Column Definitions**

        |  Column Name   |   Column Description  |
        | --- | --- |
        | Identity ID | *Required*, unique Identity ID |
        | Username | *Required*, username of the identity |
        | Identity email | *Optional*, Email of the Identity |
        | Identity name | *Required*, Name of the identity |
        | App ID | *Required*, Unique ID of the application |
        | App Name | *Required*, name of the application |
        | App Description | *Optional* |
        | Relation type | *Optional*, Type of relationship, currently support "IS", "OWNS" |
        | Employee email | *Optional*, the email of the employee according to the balkanid tenant |
        | Employee name | *Optional*, Name of the employee |
        | Employee department | *Optional*, Department of the employee |
        | Employee job title | *Optional*, Title of the employee |

        ### Download the CSV file via the pre-signed URL
        After retrieving the pre-signed URL in the previous step, all that remains is to download the CSV in [BalkanID Relations CSV format](#balkanid-relations-download-csv-format) from the pre-signed URL.
        To use the polling URL, first send an HTTP request with the method `HEAD` to the `pollingUrl`.
        If the response status code is `404`, the file is not ready, and you should retry this polling request after a delay.
        If the response status code is `200`, the file is ready, and you may proceed to download the CSV from the received `url`.
        """
        _response = self._client_wrapper.httpx_client.request(
            "POST",
            urllib.parse.urljoin(
                f"{self._client_wrapper.get_base_url()}/", "api/rest/v0/relations_employees_identities/download-url"
            ),
            headers=self._client_wrapper.get_headers(),
            timeout=60,
        )
        if 200 <= _response.status_code < 300:
            return pydantic.parse_obj_as(DownloadUrlResponse, _response.json())  # type: ignore
        try:
            _response_json = _response.json()
        except JSONDecodeError:
            raise ApiError(status_code=_response.status_code, body=_response.text)
        raise ApiError(status_code=_response.status_code, body=_response_json)


class AsyncRelationsClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._client_wrapper = client_wrapper

    async def upload(self) -> UploadUrlResponse:
        """
        ### BalkanID Relations upload CSV Format

        In this section, we will explain the BalkanID Relations CSV format.

        **Sample CSV**

        | <u> **Identity ID** </u> | <u> **Username** </u> | **Identity email** | <u> **Identity name** </u> | <u> **App ID** </u> | <u> **App Name** </u> | **App Description** | **Relation type** | **Employee email** | **Employee name** | **Employee department** | **Employee job title** |
        | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |
        | id/U-ysy2l6niyJmThu_Z-9urozE8tQBAEmJhjZ4nVxphg | ses-smtp-user.20220203-154927 |     | ses-smtp-user.20220203-154927 | aws/01FX103897S15JVJAR17GS3SQT | Amazon Web Services |     | owns | sam@example.com |     |     |     |
        | id/xjyKMctjdu6l3iaJwo6OkvJ8BMtvFrmWEz4yIK5xrks | anrew.garfield |     | anrew.garfield | aws/01FX103897S15JVJAR17GS3SQC | Amazon Web Services |     |     |     |     |     |     |
        | id/YPvK3hg7UfMQTz5VdEb8HraIouOCr35BQxpYlVKrYdg | michael.keaton |     | michael.keaton | aws/01FX103897S15JVJAR17GS3SQC | Amazon Web Services |     |     |     |     |     |     |
        | email/0g3BUiakDZW63KtF3wajG85noCRZdlzVH9SKKVXMfT0 | james@example.com | james@example.com | James S | google/01H965ZRNQHAS2B8GKJA85X75C | Google |     |     |     |     |     |     |
        | email/0urU-a0COLlg3FIyI1pPAcmZM7d9zpmG8O2b3HAuirs | sam@example.com | sam@example.com | Sam L | google/01H965ZRNQHAS2B8GKJA85X75C | Google |     | is  | sam@example.com | Sam L | Engineering | Staff Engineer |
        | email/CUp7jz61_N5K2qctJNyKsSFy1pZSpDneEStYN89dImw | michael@example.com | michael@example.com | Michael K | google/01H965ZRNQHAS2B8GKJA85X75C | Google |     | is  | michael@example.com | Micheal K | Engineering | Head of Engineering |

        **NOTE**: Columns that are <u> underlined </u> are required always.

        **Column Definitions**

        |  Column Name   |   Column Description  |
        | --- | --- |
        | Identity ID | *Required*, unique Identity ID |
        | Username | *Required*, username of the identity |
        | Identity email | *Optional*, Email of the Identity |
        | Identity name | *Required*, Name of the identity |
        | App ID | *Required*, Unique ID of the application |
        | App Name | *Required*, name of the application |
        | App Description | *Optional* |
        | Relation type | *Optional*, Type of relationship, currently support "IS", "OWNS" |
        | Employee email | *Optional*, the email of the employee according to the balkanid tenant |
        | Employee name | *Optional*, Name of the employee |
        | Employee department | *Optional*, Department of the employee |
        | Employee job title | *Optional*, Title of the employee |

        ### Upload the CSV file via the pre-signed URL
        After retrieving the pre-signed URL in the previous step, all that remains is to upload the CSV in BalkanID Canonical CSV format to the pre-signed URL.
        Below is a summary of the request using `curl`:
        ```
        curl -X PUT <pre-signed url> --data-binary @./path/to/relations.csv
        ```
        The request URL is the pre-signed URL from previous step.

        The request method is `PUT`.

        Required request body is the CSV in [BalkanID Relations CSV format](#balkanid-relations-upload-csv-format).
        """
        _response = await self._client_wrapper.httpx_client.request(
            "POST",
            urllib.parse.urljoin(
                f"{self._client_wrapper.get_base_url()}/", "api/rest/v0/relations_employees_identities/upload-url"
            ),
            headers=self._client_wrapper.get_headers(),
            timeout=60,
        )
        if 200 <= _response.status_code < 300:
            return pydantic.parse_obj_as(UploadUrlResponse, _response.json())  # type: ignore
        try:
            _response_json = _response.json()
        except JSONDecodeError:
            raise ApiError(status_code=_response.status_code, body=_response.text)
        raise ApiError(status_code=_response.status_code, body=_response_json)

    async def download(self) -> DownloadUrlResponse:
        """
        ### BalkanID Relations download CSV Format

        In this section, we will explain the BalkanID Relations CSV format.

        **Sample CSV**

        | <u> **Identity ID** </u> | <u> **Username** </u> | **Identity email** | <u> **Identity name** </u> | <u> **App ID** </u> | <u> **App Name** </u> | **App Description** | **Relation type** | **Employee email** | **Employee name** | **Employee department** | **Employee job title** |
        | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |
        | id/U-ysy2l6niyJmThu_Z-9urozE8tQBAEmJhjZ4nVxphg | ses-smtp-user.20220203-154927 |     | ses-smtp-user.20220203-154927 | aws/01FX103897S15JVJAR17GS3SQT | Amazon Web Services |     | owns | sam@example.com |     |     |     |
        | id/xjyKMctjdu6l3iaJwo6OkvJ8BMtvFrmWEz4yIK5xrks | anrew.garfield |     | anrew.garfield | aws/01FX103897S15JVJAR17GS3SQC | Amazon Web Services |     |     |     |     |     |     |
        | id/YPvK3hg7UfMQTz5VdEb8HraIouOCr35BQxpYlVKrYdg | michael.keaton |     | michael.keaton | aws/01FX103897S15JVJAR17GS3SQC | Amazon Web Services |     |     |     |     |     |     |
        | email/0g3BUiakDZW63KtF3wajG85noCRZdlzVH9SKKVXMfT0 | james@example.com | james@example.com | James S | google/01H965ZRNQHAS2B8GKJA85X75C | Google |     |     |     |     |     |     |
        | email/0urU-a0COLlg3FIyI1pPAcmZM7d9zpmG8O2b3HAuirs | sam@example.com | sam@example.com | Sam L | google/01H965ZRNQHAS2B8GKJA85X75C | Google |     | is  | sam@example.com | Sam L | Engineering | Staff Engineer |
        | email/CUp7jz61_N5K2qctJNyKsSFy1pZSpDneEStYN89dImw | michael@example.com | michael@example.com | Michael K | google/01H965ZRNQHAS2B8GKJA85X75C | Google |     | is  | michael@example.com | Micheal K | Engineering | Head of Engineering |

        **NOTE**: Columns that are <u> underlined </u> are required always.

        **Column Definitions**

        |  Column Name   |   Column Description  |
        | --- | --- |
        | Identity ID | *Required*, unique Identity ID |
        | Username | *Required*, username of the identity |
        | Identity email | *Optional*, Email of the Identity |
        | Identity name | *Required*, Name of the identity |
        | App ID | *Required*, Unique ID of the application |
        | App Name | *Required*, name of the application |
        | App Description | *Optional* |
        | Relation type | *Optional*, Type of relationship, currently support "IS", "OWNS" |
        | Employee email | *Optional*, the email of the employee according to the balkanid tenant |
        | Employee name | *Optional*, Name of the employee |
        | Employee department | *Optional*, Department of the employee |
        | Employee job title | *Optional*, Title of the employee |

        ### Download the CSV file via the pre-signed URL
        After retrieving the pre-signed URL in the previous step, all that remains is to download the CSV in [BalkanID Relations CSV format](#balkanid-relations-download-csv-format) from the pre-signed URL.
        To use the polling URL, first send an HTTP request with the method `HEAD` to the `pollingUrl`.
        If the response status code is `404`, the file is not ready, and you should retry this polling request after a delay.
        If the response status code is `200`, the file is ready, and you may proceed to download the CSV from the received `url`.
        """
        _response = await self._client_wrapper.httpx_client.request(
            "POST",
            urllib.parse.urljoin(
                f"{self._client_wrapper.get_base_url()}/", "api/rest/v0/relations_employees_identities/download-url"
            ),
            headers=self._client_wrapper.get_headers(),
            timeout=60,
        )
        if 200 <= _response.status_code < 300:
            return pydantic.parse_obj_as(DownloadUrlResponse, _response.json())  # type: ignore
        try:
            _response_json = _response.json()
        except JSONDecodeError:
            raise ApiError(status_code=_response.status_code, body=_response.text)
        raise ApiError(status_code=_response.status_code, body=_response_json)
