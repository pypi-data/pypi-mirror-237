# This file was auto-generated by Fern from our API Definition.

import typing
import urllib.parse
from json.decoder import JSONDecodeError

from ...core.api_error import ApiError
from ...core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ...core.jsonable_encoder import jsonable_encoder
from ...types.download_url_response import DownloadUrlResponse
from ...types.upload_url_response import UploadUrlResponse

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class RequestsClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._client_wrapper = client_wrapper

    def upload(self) -> UploadUrlResponse:
        """
        ### BalkanID Access Requests upload CSV Format

        In this section, we will explain the BalkanID Access Requests CSV format.

        **Sample CSV 1**

        | <u> **requester** </u> | <u> **request_type** </u> | <u> **app** </u> | <u> **project** </u> | **reference** | **duration** |
        | --- | --- | --- | --- | --- | --- |
        | james@example.com | grant | James Q | james@example.com | Engineering | Software Engineer | Jason P | jason@balkan.id | aws | web-team | group | example | permanent | jira | EN-123456 |
        | mary@example.com | revoke | Mary K | mary@example.com | Engineering | Software Engineer | Jason P | jason@balkan.id | aws | core | group | example | permanent | jira | EN-123457 |

        **NOTE**: Columns that are <u> underlined </u> are required always.

        NOTE: In this sample we are using AWS just as an example.

        ### Sample CSV 2

        | <u> **requester** </u> | <u> **request_type** </u> | <u> **app** </u> | <u> **project** </u> | **reference** | **duration** |
        | --- | --- | --- | --- | --- | --- |
        | elaine@example.com | grant | github | balkanid | patrick@example.com | 24h |
        | jacob@example.com | grant | github | project | jason@example.com | 720h |

        NOTE: In this sample we are using Github just as example.

        **Column Definitions**

        | Field | Example | Comment |
        | --- | --- | --- |
        | requester | mike@example.test | Email of the request originator. Must be a user of the system |
        | request_type | add / remove | Supports provisioning & de-provisioning |
        | employee | John Doe | Name of the employee the access is requested for, if other than requester |
        | employee_email | john@example.test | Email of the employee the access is requested for, if other than requester |
        | department | Engineering | Department where there employee the access is requested for works |
        | title | Software Engineer II | Job title of the employee the access is requested for |
        | manager | Mike Bloom | Name of the manager |
        | manager_email | mike@example.test | Email of the manager |
        | app | github | App the access is requested for |
        | connection | admins | Name of the connection the access is requested for |
        | connection_type | group | Type of connection the access is requested for |
        | project | balkanid | Project / environment the access is requested for |
        | resource | deployment | Name of the resource the access is requested for |
        | resource_type | repository | Type of the resource the access is requested for |
        | privilege_name | pull, s3:GetObject, access | Alphanumeric name of the privilege / also referred to as fine grained permissions in some applications |
        | privilege_value | true/false, true | Alphanumeric with the extracted permission. Recommended: true / false. |
        | username | mbloom123 | preferred username |
        | reference | Software Engineer II OR chris@example.test | Reference entitlements: - either an employee email or - a job title |
        | duration | 60m, permanent | How long is the access needed (in seconds, minutes, hours, etc). Valid time units are “ns”, “us” (or “µs”), “ms”, “s”, “m”, “h”. If one needs for 1 hour, then it will 1h or 60m. |
        | source | Jira | Source system |
        | source_id | D-12345 | Source system ID |

        NOTE: Any other extra columns will be stored as metadata in the request object

        Additional Details about processing:

        * If the file contains same employee several times for the same source\_id or source\_id empty, we will merge into a single request

        **Required Columns**

        requester, request_type, app, project are always required.

        One of reference or connection & connection_type are always required.

        If you provide connection or connection\_type column, the other one connection\_type or connection is required.

        If you provide resource or resource\_type column, the other one resource\_type or resource is required.

        All other columns are optional.

        ### Upload the CSV file via the pre-signed URL
        After retrieving the pre-signed URL in the previous step, all that remains is to upload the CSV in BalkanID Canonical CSV format to the pre-signed URL.
        Below is a summary of the request using `curl`:
        ```
        curl -X PUT <pre-signed url> --data-binary @./path/to/requests.csv
        ```
        The request URL is the pre-signed URL from previous step.

        The request method is `PUT`.

        Required request body is the CSV in [BalkanID Access Requests CSV format](#balkanid-access-requests-upload-csv-format).
        """
        _response = self._client_wrapper.httpx_client.request(
            "POST",
            urllib.parse.urljoin(f"{self._client_wrapper.get_base_url()}/", "api/rest/v0/requests/upload-url"),
            headers=self._client_wrapper.get_headers(),
            timeout=60,
        )
        if 200 <= _response.status_code < 300:
            return pydantic.parse_obj_as(UploadUrlResponse, _response.json())  # type: ignore
        try:
            _response_json = _response.json()
        except JSONDecodeError:
            raise ApiError(status_code=_response.status_code, body=_response.text)
        raise ApiError(status_code=_response.status_code, body=_response_json)

    def download(self, *, include_completed: bool) -> DownloadUrlResponse:
        """
        ### BalkanID Access Requests download CSV Format

        In this section, we will explain the BalkanID Access Requests CSV format.

        **Sample CSV**

        | <u> Request ID </u>             | <u> Requester </u>           | <u> Username</u>  | <u> Work Email</u>       | Reference       | Duration | Expiration Date        | Provision Date | Source | Source ID                      | <u> Request Type</u>  |<u>  App </u>                         | Connection    | Connection Type | Resource | Resource Type | Privilege Name | Privilege Value |
        |------------------------|---------------------|----------|-----------------|-----------------|----------|------------------------|----------------|--------|--------------------------------|--------------|-----------------------------|---------------|-----------------|-----------|---------------|----------------|-----------------|
        | 01H9VNFTZD1T44TCSKGEBWNTZD | ayden@email.com | ayden    | james@email.com | sam@email.com  |          | 2023-09-22 18:30:00    |                |        |                                | grant        | github/01H965ZRNQHAS2B8GKJA85X75D | Core Engineering | team            |           |               |                |                 |
        | 01H9VNFTZD1T44TCSKGEBWNTZD | ayden@email.com | ayden    | james@email.com | sam@email.com  |          | 2023-09-22 18:30:00    |                |        |                                | grant        | github/01H965ZRNQHAS2B8GKJA85X75D | engineering-all | team            |           |               |                |                 |
        | 01H9VNFTZD1T44TCSKGEBWNTZD | ayden@email.com | ayden    | james@email.com | sam@email.com  |          | 2023-09-22 18:30:00    |                |        |                                | grant        | github/01H965ZRNQHAS2B8GKJA85X75D | Test team      | team            |           |               |                |                 |
        | 01H9TT26TBD20AW5NGB3X5MFTP | ayden@email.com | ayden    | james@email.com |                 |          |                        |                |        |                                | grant        | aws/01GG223987S15JVJAR17GS3SQT  | customers      | group           |           |               |                |                 |
        | 01H9TT26TBD20AW5NGB3X5MFTP | ayden@email.com | ayden    | james@email.com |                 |          |                        |                |        |                                | revoke       | aws/01GG223987S15JVJAR17GS3SQT  | support        | group           |           |               |                |                 |
        | 01H9T8PDBF8MZ9WTFYG2622Q91 | sam@email.com   | sam      | ayden@email.com | james@email.com | 68m0s    |                        |                |        |                                | revoke       | google                        |               |                 |           |               |                |                 |
        | 01H9TTPDBF8MZ9WTFYG2322H91 | sam@email.com   | sam      | james@email.com | ayden@email.com | 45m0s    |                        |                |        |                                | grant        | google                        |               |                 |           |               |                |                 |

        **NOTE**: Columns that are <u> underlined </u> are required always.

        **Column Definitions**

        | Column Name         | Column Description                                                                                                      |
        |---------------------|-------------------------------------------------------------------------------------------------------------------------|
        | Request ID          | *Required -* This is a unique request ID for each request generated by the BalkanID processing engine and serves as an identifier. |
        | Requester           | *Required -* Email of the request originator.                                                                         |
        | Username            | *Required -* Full name of the request originator.                                                                      |
        | Work Email          | *Required -* Email of the employee the access is requested for, if other than the requester.                        |
        | Reference           | *Optional,* Reference entitlements: contains employee email.                                                             |
        | Duration            | *Optional,* How long is the access needed (in seconds, minutes, hours, etc). Valid time units are “ns”, “us” (or “µs”), “ms”, “s”, “m”, “h”. If one needs it for 1 hour, then it will be 1h or 60m. |
        | Expiration Date     | *Optional,* Expiration Date of the access request.                                                                      |
        | Provision Date      | *Optional,* Provision Date of the access request.                                                                       |
        | Source              | *Optional,* Source system.                                                                                              |
        | Source ID           | *Optional,* Source system ID.                                                                                           |
        | Request Type        | *Required -* Contains whether the request is for "grant" (provisioning) or "revoke" (deprovisioning) of a resource. |
        | App                 | *Required -* App the access is requested for.                                                                         |
        | Connection          | *Optional, *Required if Connection Type is present* -* Name of the connection the access is requested for.         |
        | Connection Type     | *Optional, *Required if Connection is present* -* Type of connection the access is requested for.                  |
        | Resource            | *Optional, *Required if Resource Type is present* -* Name of the resource the access is requested for.                |
        | Resource Type       | *Optional, *Required if Resource is present* -* Type of the resource the access is requested for.                    |
        | Privilege Name      | *Optional, *Required if Privilege Value is present* -* Alphanumeric name of the privilege, also referred to as fine-grained permissions in some applications. |
        | Privilege Value     | *Optional, *Required if Privilege Name is present* -* Alphanumeric with the extracted permission, either "true" or "false". |

        ### Download the CSV file via the pre-signed URL
        After retrieving the pre-signed URL in the previous step, all that remains is to download the CSV in [BalkanID Access Requests CSV format](#balkanid-access-requests-download-csv-format) from the pre-signed URL.
        To use the polling URL, first send an HTTP request with the method `HEAD` to the `pollingUrl`.
        If the response status code is `404`, the file is not ready, and you should retry this polling request after a delay.
        If the response status code is `200`, the file is ready, and you may proceed to download the CSV from the received `url`.

        Parameters:
            - include_completed: bool. Include completed requests in the download.

        """
        _response = self._client_wrapper.httpx_client.request(
            "POST",
            urllib.parse.urljoin(f"{self._client_wrapper.get_base_url()}/", "api/rest/v0/requests/download-url"),
            json=jsonable_encoder({"includeCompleted": include_completed}),
            headers=self._client_wrapper.get_headers(),
            timeout=60,
        )
        if 200 <= _response.status_code < 300:
            return pydantic.parse_obj_as(DownloadUrlResponse, _response.json())  # type: ignore
        try:
            _response_json = _response.json()
        except JSONDecodeError:
            raise ApiError(status_code=_response.status_code, body=_response.text)
        raise ApiError(status_code=_response.status_code, body=_response_json)


class AsyncRequestsClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._client_wrapper = client_wrapper

    async def upload(self) -> UploadUrlResponse:
        """
        ### BalkanID Access Requests upload CSV Format

        In this section, we will explain the BalkanID Access Requests CSV format.

        **Sample CSV 1**

        | <u> **requester** </u> | <u> **request_type** </u> | <u> **app** </u> | <u> **project** </u> | **reference** | **duration** |
        | --- | --- | --- | --- | --- | --- |
        | james@example.com | grant | James Q | james@example.com | Engineering | Software Engineer | Jason P | jason@balkan.id | aws | web-team | group | example | permanent | jira | EN-123456 |
        | mary@example.com | revoke | Mary K | mary@example.com | Engineering | Software Engineer | Jason P | jason@balkan.id | aws | core | group | example | permanent | jira | EN-123457 |

        **NOTE**: Columns that are <u> underlined </u> are required always.

        NOTE: In this sample we are using AWS just as an example.

        ### Sample CSV 2

        | <u> **requester** </u> | <u> **request_type** </u> | <u> **app** </u> | <u> **project** </u> | **reference** | **duration** |
        | --- | --- | --- | --- | --- | --- |
        | elaine@example.com | grant | github | balkanid | patrick@example.com | 24h |
        | jacob@example.com | grant | github | project | jason@example.com | 720h |

        NOTE: In this sample we are using Github just as example.

        **Column Definitions**

        | Field | Example | Comment |
        | --- | --- | --- |
        | requester | mike@example.test | Email of the request originator. Must be a user of the system |
        | request_type | add / remove | Supports provisioning & de-provisioning |
        | employee | John Doe | Name of the employee the access is requested for, if other than requester |
        | employee_email | john@example.test | Email of the employee the access is requested for, if other than requester |
        | department | Engineering | Department where there employee the access is requested for works |
        | title | Software Engineer II | Job title of the employee the access is requested for |
        | manager | Mike Bloom | Name of the manager |
        | manager_email | mike@example.test | Email of the manager |
        | app | github | App the access is requested for |
        | connection | admins | Name of the connection the access is requested for |
        | connection_type | group | Type of connection the access is requested for |
        | project | balkanid | Project / environment the access is requested for |
        | resource | deployment | Name of the resource the access is requested for |
        | resource_type | repository | Type of the resource the access is requested for |
        | privilege_name | pull, s3:GetObject, access | Alphanumeric name of the privilege / also referred to as fine grained permissions in some applications |
        | privilege_value | true/false, true | Alphanumeric with the extracted permission. Recommended: true / false. |
        | username | mbloom123 | preferred username |
        | reference | Software Engineer II OR chris@example.test | Reference entitlements: - either an employee email or - a job title |
        | duration | 60m, permanent | How long is the access needed (in seconds, minutes, hours, etc). Valid time units are “ns”, “us” (or “µs”), “ms”, “s”, “m”, “h”. If one needs for 1 hour, then it will 1h or 60m. |
        | source | Jira | Source system |
        | source_id | D-12345 | Source system ID |

        NOTE: Any other extra columns will be stored as metadata in the request object

        Additional Details about processing:

        * If the file contains same employee several times for the same source\_id or source\_id empty, we will merge into a single request

        **Required Columns**

        requester, request_type, app, project are always required.

        One of reference or connection & connection_type are always required.

        If you provide connection or connection\_type column, the other one connection\_type or connection is required.

        If you provide resource or resource\_type column, the other one resource\_type or resource is required.

        All other columns are optional.

        ### Upload the CSV file via the pre-signed URL
        After retrieving the pre-signed URL in the previous step, all that remains is to upload the CSV in BalkanID Canonical CSV format to the pre-signed URL.
        Below is a summary of the request using `curl`:
        ```
        curl -X PUT <pre-signed url> --data-binary @./path/to/requests.csv
        ```
        The request URL is the pre-signed URL from previous step.

        The request method is `PUT`.

        Required request body is the CSV in [BalkanID Access Requests CSV format](#balkanid-access-requests-upload-csv-format).
        """
        _response = await self._client_wrapper.httpx_client.request(
            "POST",
            urllib.parse.urljoin(f"{self._client_wrapper.get_base_url()}/", "api/rest/v0/requests/upload-url"),
            headers=self._client_wrapper.get_headers(),
            timeout=60,
        )
        if 200 <= _response.status_code < 300:
            return pydantic.parse_obj_as(UploadUrlResponse, _response.json())  # type: ignore
        try:
            _response_json = _response.json()
        except JSONDecodeError:
            raise ApiError(status_code=_response.status_code, body=_response.text)
        raise ApiError(status_code=_response.status_code, body=_response_json)

    async def download(self, *, include_completed: bool) -> DownloadUrlResponse:
        """
        ### BalkanID Access Requests download CSV Format

        In this section, we will explain the BalkanID Access Requests CSV format.

        **Sample CSV**

        | <u> Request ID </u>             | <u> Requester </u>           | <u> Username</u>  | <u> Work Email</u>       | Reference       | Duration | Expiration Date        | Provision Date | Source | Source ID                      | <u> Request Type</u>  |<u>  App </u>                         | Connection    | Connection Type | Resource | Resource Type | Privilege Name | Privilege Value |
        |------------------------|---------------------|----------|-----------------|-----------------|----------|------------------------|----------------|--------|--------------------------------|--------------|-----------------------------|---------------|-----------------|-----------|---------------|----------------|-----------------|
        | 01H9VNFTZD1T44TCSKGEBWNTZD | ayden@email.com | ayden    | james@email.com | sam@email.com  |          | 2023-09-22 18:30:00    |                |        |                                | grant        | github/01H965ZRNQHAS2B8GKJA85X75D | Core Engineering | team            |           |               |                |                 |
        | 01H9VNFTZD1T44TCSKGEBWNTZD | ayden@email.com | ayden    | james@email.com | sam@email.com  |          | 2023-09-22 18:30:00    |                |        |                                | grant        | github/01H965ZRNQHAS2B8GKJA85X75D | engineering-all | team            |           |               |                |                 |
        | 01H9VNFTZD1T44TCSKGEBWNTZD | ayden@email.com | ayden    | james@email.com | sam@email.com  |          | 2023-09-22 18:30:00    |                |        |                                | grant        | github/01H965ZRNQHAS2B8GKJA85X75D | Test team      | team            |           |               |                |                 |
        | 01H9TT26TBD20AW5NGB3X5MFTP | ayden@email.com | ayden    | james@email.com |                 |          |                        |                |        |                                | grant        | aws/01GG223987S15JVJAR17GS3SQT  | customers      | group           |           |               |                |                 |
        | 01H9TT26TBD20AW5NGB3X5MFTP | ayden@email.com | ayden    | james@email.com |                 |          |                        |                |        |                                | revoke       | aws/01GG223987S15JVJAR17GS3SQT  | support        | group           |           |               |                |                 |
        | 01H9T8PDBF8MZ9WTFYG2622Q91 | sam@email.com   | sam      | ayden@email.com | james@email.com | 68m0s    |                        |                |        |                                | revoke       | google                        |               |                 |           |               |                |                 |
        | 01H9TTPDBF8MZ9WTFYG2322H91 | sam@email.com   | sam      | james@email.com | ayden@email.com | 45m0s    |                        |                |        |                                | grant        | google                        |               |                 |           |               |                |                 |

        **NOTE**: Columns that are <u> underlined </u> are required always.

        **Column Definitions**

        | Column Name         | Column Description                                                                                                      |
        |---------------------|-------------------------------------------------------------------------------------------------------------------------|
        | Request ID          | *Required -* This is a unique request ID for each request generated by the BalkanID processing engine and serves as an identifier. |
        | Requester           | *Required -* Email of the request originator.                                                                         |
        | Username            | *Required -* Full name of the request originator.                                                                      |
        | Work Email          | *Required -* Email of the employee the access is requested for, if other than the requester.                        |
        | Reference           | *Optional,* Reference entitlements: contains employee email.                                                             |
        | Duration            | *Optional,* How long is the access needed (in seconds, minutes, hours, etc). Valid time units are “ns”, “us” (or “µs”), “ms”, “s”, “m”, “h”. If one needs it for 1 hour, then it will be 1h or 60m. |
        | Expiration Date     | *Optional,* Expiration Date of the access request.                                                                      |
        | Provision Date      | *Optional,* Provision Date of the access request.                                                                       |
        | Source              | *Optional,* Source system.                                                                                              |
        | Source ID           | *Optional,* Source system ID.                                                                                           |
        | Request Type        | *Required -* Contains whether the request is for "grant" (provisioning) or "revoke" (deprovisioning) of a resource. |
        | App                 | *Required -* App the access is requested for.                                                                         |
        | Connection          | *Optional, *Required if Connection Type is present* -* Name of the connection the access is requested for.         |
        | Connection Type     | *Optional, *Required if Connection is present* -* Type of connection the access is requested for.                  |
        | Resource            | *Optional, *Required if Resource Type is present* -* Name of the resource the access is requested for.                |
        | Resource Type       | *Optional, *Required if Resource is present* -* Type of the resource the access is requested for.                    |
        | Privilege Name      | *Optional, *Required if Privilege Value is present* -* Alphanumeric name of the privilege, also referred to as fine-grained permissions in some applications. |
        | Privilege Value     | *Optional, *Required if Privilege Name is present* -* Alphanumeric with the extracted permission, either "true" or "false". |

        ### Download the CSV file via the pre-signed URL
        After retrieving the pre-signed URL in the previous step, all that remains is to download the CSV in [BalkanID Access Requests CSV format](#balkanid-access-requests-download-csv-format) from the pre-signed URL.
        To use the polling URL, first send an HTTP request with the method `HEAD` to the `pollingUrl`.
        If the response status code is `404`, the file is not ready, and you should retry this polling request after a delay.
        If the response status code is `200`, the file is ready, and you may proceed to download the CSV from the received `url`.

        Parameters:
            - include_completed: bool. Include completed requests in the download.

        """
        _response = await self._client_wrapper.httpx_client.request(
            "POST",
            urllib.parse.urljoin(f"{self._client_wrapper.get_base_url()}/", "api/rest/v0/requests/download-url"),
            json=jsonable_encoder({"includeCompleted": include_completed}),
            headers=self._client_wrapper.get_headers(),
            timeout=60,
        )
        if 200 <= _response.status_code < 300:
            return pydantic.parse_obj_as(DownloadUrlResponse, _response.json())  # type: ignore
        try:
            _response_json = _response.json()
        except JSONDecodeError:
            raise ApiError(status_code=_response.status_code, body=_response.text)
        raise ApiError(status_code=_response.status_code, body=_response_json)
