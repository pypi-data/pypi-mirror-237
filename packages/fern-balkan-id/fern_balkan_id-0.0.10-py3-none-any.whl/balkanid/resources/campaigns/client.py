# This file was auto-generated by Fern from our API Definition.

import typing
import urllib.parse
from json.decoder import JSONDecodeError

from ...core.api_error import ApiError
from ...core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ...core.jsonable_encoder import jsonable_encoder
from ...types.download_url_response import DownloadUrlResponse
from ...types.upload_url_response import UploadUrlResponse

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class CampaignsClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._client_wrapper = client_wrapper

    def upload(self) -> UploadUrlResponse:
        """
        ### BalkanID Campaigns upload CSV Format

        In this section, we will explain the BalkanID Campaigns CSV format.

        **Sample CSV**

        | <u>Name  </u>       | Description         | <u>Start Date  <u/>                 | <u>End Date </u>                    | <u>Is Draft</u> |
        | ------------ | ------------------- | ---------------------------- | ---------------------------- | -------- |
        | CSV campaign 1 | This is campaign 1 | 2023-12-03T09:00:00-05:00    | 2023-12-04T18:00:00-05:00    | TRUE     |
        | CSV campaign 2 | This is campaign 2 | 2023-12-03T09:00:00+05:30    | 2023-12-04T18:00:00+05:30    | TRUE     |

        **NOTE**: Columns that are <u> underlined </u> are required always.

        **Column Definitions**

        | Column name    | Column Description                               |
        | ---------------| -------------------------------------------------|
        | Name           | *Required* - Name of the campaign                  |
        | Description    | *Optional* - Description of the campaign         |
        | Start Date     | *Required* - Date and time of starting the campaign with timezone |
        | End Date       | *Required* - Date and time of ending the campaign with timezone   |
        | Is Draft       | *Required* - Whether the campaign is a draft or not |


        ### Upload the CSV file via the pre-signed URL
        After retrieving the pre-signed URL in the previous step, all that remains is to upload the CSV in BalkanID Canonical CSV format to the pre-signed URL.
        Below is a summary of the request using `curl`:
        ```
        curl -X PUT <pre-signed url> --data-binary @./path/to/campaigns.csv
        ```
        The request URL is the pre-signed URL from previous step.

        The request method is `PUT`.

        Required request body is the CSV in [BalkanID Campaigns CSV format](#balkanid-campaigns-upload-csv-format).
        """
        _response = self._client_wrapper.httpx_client.request(
            "POST",
            urllib.parse.urljoin(f"{self._client_wrapper.get_base_url()}/", "api/rest/v0/campaigns/upload-url"),
            headers=self._client_wrapper.get_headers(),
            timeout=60,
        )
        if 200 <= _response.status_code < 300:
            return pydantic.parse_obj_as(UploadUrlResponse, _response.json())  # type: ignore
        try:
            _response_json = _response.json()
        except JSONDecodeError:
            raise ApiError(status_code=_response.status_code, body=_response.text)
        raise ApiError(status_code=_response.status_code, body=_response_json)

    def download(self, *, include_completed: bool, include_draft: bool) -> DownloadUrlResponse:
        """
        ### BalkanID Campaigns download CSV Format

        In this section, we will explain the BalkanID Campaigns CSV format.

        **Sample CSV**

        | <u> ID </u>                   | <u> Name </u>                 | Description                  | <u> Status </u>   | <u> Start Date </u> | <u> End Date </u>   | <u> Percentage Completed </u> |
        | ----------------------------- | --------------------- | ---------------------------- | --------- | ---------- | ---------- | -------------------- |
        | 01HA02WD9PGPJA5FV4CNGYGGNM   | Test campaign 3       | Some random campaign         | draft     | 2023-09-06 | 2023-09-20 | 0.00                 |
        | 01HA02TFB8JBSF2BWBJBWVP696   | Test Campaign 2       | This is a campaign description | completed | 2023-09-06 | 2023-09-22 | 100.00               |
        | 01HA02R3KH676CD9XHZAY8SCDZ   | Test campaign          | This is a test campaign      | pending   | 2023-09-07 | 2023-09-26 | 35.24                |

        **NOTE**: Columns that are <u> underlined </u> are required always.

        **Column Definitions**

        | Column name      | Column Description                               |
        | -----------------| -------------------------------------------------|
        | ID               | *Required* - This is a unique campaign ID for each campaign generated by the BalkanID processing engine and serves as an identifier for each campaign |
        | Name             | *Required* - This is the name of the campaign       |
        | Description      | *Optional* - This is the description of the campaign |
        | Status           | *Required* - The can be pending, draft, etc. depending on the status |
        | Start Date       | *Required* - The start date of the campaign - The date is in the YYYY-MM-DD format |
        | End Date         | *Required* - The end date of the campaign - The date is in the YYYY-MM-DD format |
        | Percentage Completed | *Required* - Percentage of reviews completed which belongs to that campaign |

        ### Download the CSV file via the pre-signed URL
        After retrieving the pre-signed URL in the previous step, all that remains is to download the CSV in [BalkanID Campaigns CSV format](#balkanid-campaigns-download-csv-format) from the pre-signed URL.
        To use the polling URL, first send an HTTP request with the method `HEAD` to the `pollingUrl`.
        If the response status code is `404`, the file is not ready, and you should retry this polling request after a delay.
        If the response status code is `200`, the file is ready, and you may proceed to download the CSV from the received `url`.

        Parameters:
            - include_completed: bool. Include completed campaigns in the download.

            - include_draft: bool. Include draft campaigns in the download.

        """
        _response = self._client_wrapper.httpx_client.request(
            "POST",
            urllib.parse.urljoin(f"{self._client_wrapper.get_base_url()}/", "api/rest/v0/campaigns/download-url"),
            json=jsonable_encoder({"includeCompleted": include_completed, "includeDraft": include_draft}),
            headers=self._client_wrapper.get_headers(),
            timeout=60,
        )
        if 200 <= _response.status_code < 300:
            return pydantic.parse_obj_as(DownloadUrlResponse, _response.json())  # type: ignore
        try:
            _response_json = _response.json()
        except JSONDecodeError:
            raise ApiError(status_code=_response.status_code, body=_response.text)
        raise ApiError(status_code=_response.status_code, body=_response_json)


class AsyncCampaignsClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._client_wrapper = client_wrapper

    async def upload(self) -> UploadUrlResponse:
        """
        ### BalkanID Campaigns upload CSV Format

        In this section, we will explain the BalkanID Campaigns CSV format.

        **Sample CSV**

        | <u>Name  </u>       | Description         | <u>Start Date  <u/>                 | <u>End Date </u>                    | <u>Is Draft</u> |
        | ------------ | ------------------- | ---------------------------- | ---------------------------- | -------- |
        | CSV campaign 1 | This is campaign 1 | 2023-12-03T09:00:00-05:00    | 2023-12-04T18:00:00-05:00    | TRUE     |
        | CSV campaign 2 | This is campaign 2 | 2023-12-03T09:00:00+05:30    | 2023-12-04T18:00:00+05:30    | TRUE     |

        **NOTE**: Columns that are <u> underlined </u> are required always.

        **Column Definitions**

        | Column name    | Column Description                               |
        | ---------------| -------------------------------------------------|
        | Name           | *Required* - Name of the campaign                  |
        | Description    | *Optional* - Description of the campaign         |
        | Start Date     | *Required* - Date and time of starting the campaign with timezone |
        | End Date       | *Required* - Date and time of ending the campaign with timezone   |
        | Is Draft       | *Required* - Whether the campaign is a draft or not |


        ### Upload the CSV file via the pre-signed URL
        After retrieving the pre-signed URL in the previous step, all that remains is to upload the CSV in BalkanID Canonical CSV format to the pre-signed URL.
        Below is a summary of the request using `curl`:
        ```
        curl -X PUT <pre-signed url> --data-binary @./path/to/campaigns.csv
        ```
        The request URL is the pre-signed URL from previous step.

        The request method is `PUT`.

        Required request body is the CSV in [BalkanID Campaigns CSV format](#balkanid-campaigns-upload-csv-format).
        """
        _response = await self._client_wrapper.httpx_client.request(
            "POST",
            urllib.parse.urljoin(f"{self._client_wrapper.get_base_url()}/", "api/rest/v0/campaigns/upload-url"),
            headers=self._client_wrapper.get_headers(),
            timeout=60,
        )
        if 200 <= _response.status_code < 300:
            return pydantic.parse_obj_as(UploadUrlResponse, _response.json())  # type: ignore
        try:
            _response_json = _response.json()
        except JSONDecodeError:
            raise ApiError(status_code=_response.status_code, body=_response.text)
        raise ApiError(status_code=_response.status_code, body=_response_json)

    async def download(self, *, include_completed: bool, include_draft: bool) -> DownloadUrlResponse:
        """
        ### BalkanID Campaigns download CSV Format

        In this section, we will explain the BalkanID Campaigns CSV format.

        **Sample CSV**

        | <u> ID </u>                   | <u> Name </u>                 | Description                  | <u> Status </u>   | <u> Start Date </u> | <u> End Date </u>   | <u> Percentage Completed </u> |
        | ----------------------------- | --------------------- | ---------------------------- | --------- | ---------- | ---------- | -------------------- |
        | 01HA02WD9PGPJA5FV4CNGYGGNM   | Test campaign 3       | Some random campaign         | draft     | 2023-09-06 | 2023-09-20 | 0.00                 |
        | 01HA02TFB8JBSF2BWBJBWVP696   | Test Campaign 2       | This is a campaign description | completed | 2023-09-06 | 2023-09-22 | 100.00               |
        | 01HA02R3KH676CD9XHZAY8SCDZ   | Test campaign          | This is a test campaign      | pending   | 2023-09-07 | 2023-09-26 | 35.24                |

        **NOTE**: Columns that are <u> underlined </u> are required always.

        **Column Definitions**

        | Column name      | Column Description                               |
        | -----------------| -------------------------------------------------|
        | ID               | *Required* - This is a unique campaign ID for each campaign generated by the BalkanID processing engine and serves as an identifier for each campaign |
        | Name             | *Required* - This is the name of the campaign       |
        | Description      | *Optional* - This is the description of the campaign |
        | Status           | *Required* - The can be pending, draft, etc. depending on the status |
        | Start Date       | *Required* - The start date of the campaign - The date is in the YYYY-MM-DD format |
        | End Date         | *Required* - The end date of the campaign - The date is in the YYYY-MM-DD format |
        | Percentage Completed | *Required* - Percentage of reviews completed which belongs to that campaign |

        ### Download the CSV file via the pre-signed URL
        After retrieving the pre-signed URL in the previous step, all that remains is to download the CSV in [BalkanID Campaigns CSV format](#balkanid-campaigns-download-csv-format) from the pre-signed URL.
        To use the polling URL, first send an HTTP request with the method `HEAD` to the `pollingUrl`.
        If the response status code is `404`, the file is not ready, and you should retry this polling request after a delay.
        If the response status code is `200`, the file is ready, and you may proceed to download the CSV from the received `url`.

        Parameters:
            - include_completed: bool. Include completed campaigns in the download.

            - include_draft: bool. Include draft campaigns in the download.

        """
        _response = await self._client_wrapper.httpx_client.request(
            "POST",
            urllib.parse.urljoin(f"{self._client_wrapper.get_base_url()}/", "api/rest/v0/campaigns/download-url"),
            json=jsonable_encoder({"includeCompleted": include_completed, "includeDraft": include_draft}),
            headers=self._client_wrapper.get_headers(),
            timeout=60,
        )
        if 200 <= _response.status_code < 300:
            return pydantic.parse_obj_as(DownloadUrlResponse, _response.json())  # type: ignore
        try:
            _response_json = _response.json()
        except JSONDecodeError:
            raise ApiError(status_code=_response.status_code, body=_response.text)
        raise ApiError(status_code=_response.status_code, body=_response_json)
