# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .metrics_result_team_id import MetricsResultTeamId
from .timeseries_metric_point import TimeseriesMetricPoint


class MetricsResult(pydantic.BaseModel):
    team_id: MetricsResultTeamId
    number_of_connected_sources: typing.Optional[int]
    number_of_users: typing.Optional[int]
    number_of_errored_connected_sources: typing.Optional[int]
    number_of_connected_sources_by_week: typing.Optional[typing.List[TimeseriesMetricPoint]]
    number_of_ordered_tests: typing.Optional[int]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
