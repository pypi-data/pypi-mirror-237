[project]
name = "spectro_inlets_quantification"
authors = [
    {name = "Spectro Inlets", email = "software@spectroinlets.com"},
]
description = "The ECMS quantification package"
requires-python = ">=3.7"
keywords = ["ECMS", "quantification", "data treatment"]
license = {file = "DUAL_LICENSE"}
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Chemistry",
]
dependencies = [
    # please don't increase these version numbers without a reason.
    "numpy>=1.24.3",
    "scipy>=1.10.1",
    "matplotlib>=3.7.1",
    "pandas>=2.0.2",
    "attrs>=23.1.0",
    "PyYAML>=6.0.1",
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/SpectroInlets/spectro_inlets_quantification"
"Bug Tracker" = "https://github.com/SpectroInlets/spectro_inlets_quantification/issues"

[project.optional-dependencies]
rest = ["docutils>=0.3", "pack ==1.1, ==1.3"]

###########################
# Packaging configuration #
###########################

[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "spectro_inlets_quantification.__version__"}
# readme = {file = ["README.md"], content-type = "text/markdown"}

[tool.setuptools.package-data]
spectro_inlets_quantification = ["data/*/*.yml"]

##################################
# Development tool configuration #
##################################

[tool.coverage.report]
exclude_lines = [
    "def .*?_demo\\(.*?\\) -> None:",
    "def .*?_demo\\(.*?\\):",
    "if __name__ == .__main__.:"
]

[tool.ruff]
line-length = 100
# The documentation for the checks, and the full list of error code categories, is available here:
# https://beta.ruff.rs/docs/rules/
select = [
    # The broad sets
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "W",  # pycodestyle warnings
    # The plugins
    "A",  # builtins
    "C",  # flake8-comprehensions
    "C4",  # comprehensions
    "D",  # pydocstyle
    "I",  # isort
    "ISC",  # implicit string concatenation
    "INP",  # no pep420 (name space packages)
    "S",  #  bandit
    "T10",  # debugger
    "YTT", # 2020
    # "B",  # flake8-bugbear
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
strict = true
strict_optional = false

[tool.black]
line-length = 100
