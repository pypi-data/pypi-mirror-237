"use strict";(self.webpackChunkgrist_widget=self.webpackChunkgrist_widget||[]).push([[292],{292:(e,t,n)=>{n.r(t),n.d(t,{default:()=>p});var o=n(47),i=n(854);const s=[];class r extends Worker{constructor(e,t){super(e,t);const{grist:n}=window;n?d(this,n):s.push(this)}}window.Worker=r;const a={content:{metadata:{language_info:{codemirror_mode:{name:"python",version:3},file_extension:".py",mimetype:"text/x-python",name:"python",nbconvert_exporter:"python",pygments_lexer:"ipython3",version:"3.11"},kernelspec:{name:"python",display_name:"Python (Pyodide)",language:"python"}},nbformat_minor:4,nbformat:4,cells:[{cell_type:"code",source:"",metadata:{},execution_count:null,outputs:[]}]},format:"json"};let l=null;async function c(e){return new Promise((t=>setTimeout(t,e)))}function d(e,t){o.expose({grist:{...t,getTable:e=>o.proxy(t.getTable(e)),getCurrentRecord:()=>l}},e)}const p={id:"grist-widget:plugin",description:"Custom Grist widget for a JupyterLite notebook",autoStart:!0,requires:[i.IFileBrowserCommands],activate:e=>{(async function(e){for(;!e.shell.currentWidget;)await c(100);const t=e.shell;t.collapseLeft(),t._titleHandler.parent.setHidden(!0),t._leftHandler.sideBar.setHidden(!0);for(let e=0;e<1e3;e++){if(!t.leftCollapsed){t.collapseLeft(),t._leftHandler.sideBar.setHidden(!0);break}await c(10)}})(e).catch((e=>console.error(e)));const t=document.createElement("script");t.src="https://docs.getgrist.com/grist-plugin-api.js",t.id="grist-plugin-api",t.addEventListener("load",(async()=>{const t=window.grist;e.serviceManager.contents.fileChanged.connect((async(e,n)=>{var o;if("save"===n.type&&"notebook.ipynb"===(null===(o=n.newValue)||void 0===o?void 0:o.path)){const e={...n.newValue,content:{...n.newValue.content,cells:n.newValue.content.cells.map((e=>({...e,outputs:"outputs"in e?[]:void 0})))}};t.setOption("notebook",e)}})),t.onRecord((e=>{l=e})),t.ready();const n=await t.getOption("notebook")||a;await e.serviceManager.contents.save("notebook.ipynb",n),await e.commands.execute("filebrowser:open-path",{path:"notebook.ipynb"}),console.log("JupyterLab extension grist-widget is activated!");const o=await async function(e){for(var t,n,o;;){const i=e.shell.currentWidget,s=null===(o=null===(n=null===(t=null==i?void 0:i.context)||void 0===t?void 0:t.sessionContext)||void 0===n?void 0:n.session)||void 0===o?void 0:o.kernel;if(s)return s;await c(100)}}(e);o.requestExecute({code:"\nasync def __bootstrap_grist():\n    from pyodide.http import pyfetch  # noqa\n    import io\n    import tarfile\n    \n    response = await pyfetch('/files/package.tar.gz')\n    bytes_file = io.BytesIO(await response.bytes())\n    with tarfile.open(fileobj=bytes_file) as tar:\n        tar.extractall()\n    \n    import grist.browser  # noqa\n    return grist.browser.grist\n\ngrist = await __bootstrap_grist()\n"});for(const e of s)d(e,t);await e.commands.execute("notebook:run-all-cells")})),document.head.appendChild(t)}}}}]);