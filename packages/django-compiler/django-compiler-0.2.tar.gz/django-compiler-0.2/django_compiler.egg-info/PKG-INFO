Metadata-Version: 2.1
Name: django-compiler
Version: 0.2
Summary: A Django app for compiling Python files
Home-page: https://github.com/S-Amine/django-compiler
Author: S-Amine
License: MIT
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 4.1
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE

# Django Compiler

**django-compiler** is a Django package that provides a custom management command to compile Python files within a directory while allowing you to exclude specific directories from the compilation process.

## Features

- Easily compile Python files in your Django project.
- Exclude specific directories from compilation.
- Simple and user-friendly command-line interface.

## Installation
You can install **django-compiler** via pip:

```bash
pip install django-compiler
```
add `django_compiler` to your `INSTALLED_APPS`:

```python
# settings.py
INSTALLED_APPS = [
    # ...
    'django_compiler',
    # ...
]
```

## Usage

After installing the package, you can use the provided `compile` management command to compile Python files within your Django project. Here's how to use it:

```bash
python manage.py compile
```

## Options

`--exclude-dirs`: Specify one or more directories to exclude from the compilation. Use space-separated directory names. For example:

```bash
python manage.py compile --exclude-dirs dir1 dir2
```

This command will compile Python files within your Django project while excluding the specified directories.

## Contributing

If you'd like to contribute to this project, please follow these guidelines:

- Fork the repository.
- Create a new branch for your feature or bug fix.
- Make your changes and ensure they are well-tested.
- Create a pull request to merge your changes into the main repository.

## License

[MIT](https://choosealicense.com/licenses/mit/)
