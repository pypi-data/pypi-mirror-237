# Generated by ariadne-codegen on 2023-10-28 17:06
# Source: churros/queries.gql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class Group(BaseModel):
    group: "GroupGroup"


class GroupGroup(BaseModel):
    uid: str
    name: str
    picture_file: str = Field(alias="pictureFile")
    email: str
    description: str
    self_joinable: bool = Field(alias="selfJoinable")
    website: str
    color: str
    student_association: Optional["GroupGroupStudentAssociation"] = Field(
        alias="studentAssociation"
    )
    parent: Optional["GroupGroupParent"]
    members: List["GroupGroupMembers"]


class GroupGroupStudentAssociation(BaseModel):
    name: str
    uid: Optional[str]
    school: "GroupGroupStudentAssociationSchool"


class GroupGroupStudentAssociationSchool(BaseModel):
    uid: str
    name: str


class GroupGroupParent(BaseModel):
    uid: str
    name: str


class GroupGroupMembers(BaseModel):
    title: str
    president: bool
    vice_president: bool = Field(alias="vicePresident")
    treasurer: bool
    secretary: bool
    member: "GroupGroupMembersMember"


class GroupGroupMembersMember(BaseModel):
    uid: str
    full_name: str = Field(alias="fullName")
    email: str


Group.model_rebuild()
GroupGroup.model_rebuild()
GroupGroupStudentAssociation.model_rebuild()
GroupGroupStudentAssociationSchool.model_rebuild()
GroupGroupParent.model_rebuild()
GroupGroupMembers.model_rebuild()
GroupGroupMembersMember.model_rebuild()
