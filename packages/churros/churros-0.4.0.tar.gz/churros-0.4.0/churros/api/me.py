# Generated by ariadne-codegen on 2023-10-28 17:06
# Source: churros/queries.gql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class Me(BaseModel):
    me: "MeMe"


class MeMe(BaseModel):
    id: str
    uid: str
    email: str
    other_emails: List[str] = Field(alias="otherEmails")
    first_name: str = Field(alias="firstName")
    last_name: str = Field(alias="lastName")
    full_name: str = Field(alias="fullName")
    major: "MeMeMajor"
    minor: Optional["MeMeMinor"]
    graduation_year: int = Field(alias="graduationYear")
    year_tier: int = Field(alias="yearTier")
    apprentice: bool
    address: str
    birthday: Optional[Any]
    description: str
    nickname: str
    phone: str
    picture_file: str = Field(alias="pictureFile")
    links: List["MeMeLinks"]
    godparent: Optional["MeMeGodparent"]
    ceded_image_rights_to_t_vn7: bool = Field(alias="cededImageRightsToTVn7")


class MeMeMajor(BaseModel):
    id: str
    uid: str
    name: str
    short_name: str = Field(alias="shortName")
    schools: List["MeMeMajorSchools"]


class MeMeMajorSchools(BaseModel):
    id: str
    uid: str
    name: str


class MeMeMinor(BaseModel):
    id: str
    uid: str
    name: str
    short_name: str = Field(alias="shortName")
    majors: List["MeMeMinorMajors"]


class MeMeMinorMajors(BaseModel):
    id: str


class MeMeLinks(BaseModel):
    computed_value: str = Field(alias="computedValue")
    name: str


class MeMeGodparent(BaseModel):
    id: str
    uid: str
    first_name: str = Field(alias="firstName")
    last_name: str = Field(alias="lastName")
    nickname: str
    full_name: str = Field(alias="fullName")


Me.model_rebuild()
MeMe.model_rebuild()
MeMeMajor.model_rebuild()
MeMeMajorSchools.model_rebuild()
MeMeMinor.model_rebuild()
MeMeMinorMajors.model_rebuild()
MeMeLinks.model_rebuild()
MeMeGodparent.model_rebuild()
