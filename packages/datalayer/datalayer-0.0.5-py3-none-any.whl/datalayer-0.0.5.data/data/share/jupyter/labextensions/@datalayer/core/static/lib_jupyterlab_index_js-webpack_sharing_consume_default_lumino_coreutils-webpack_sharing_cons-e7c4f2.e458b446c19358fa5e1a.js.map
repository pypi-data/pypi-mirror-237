{"version":3,"file":"lib_jupyterlab_index_js-webpack_sharing_consume_default_lumino_coreutils-webpack_sharing_cons-e7c4f2.e458b446c19358fa5e1a.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AAC+H;AAC7B;AAClG,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F;AACA,gDAAgD,wBAAwB,GAAG,oBAAoB,wBAAwB,GAAG,0BAA0B,oBAAoB,GAAG,uCAAuC,gBAAgB,GAAG,SAAS,iFAAiF,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,OAAO,KAAK,UAAU,+BAA+B,wBAAwB,GAAG,oBAAoB,wBAAwB,GAAG,0BAA0B,oBAAoB,GAAG,uCAAuC,gBAAgB,GAAG,qBAAqB;AACxnB;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;ACPvC;AAC+H;AAC7B;AACW;AAC7G,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F,0BAA0B,qFAAiC;AAC3D;AACA,mDAAmD,kEAAkE;AACrH;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT+C;AAC1C;AACoB;AACZ;AAC+B;AAC5C;AACU;AACC;AACX;AACvC;AACA,YAAY,kBAAkB;AAC9B,YAAY,cAAc,EAAE,0DAAQ;AACpC;AACA,kCAAkC,+CAAQ;AAC1C,IAAI,gDAAS;AACb,QAAQ,+DAAU;AAClB;AACA;AACA,SAAS;AACT;AACA,4FAA4F,OAAO;AACnG,SAAS;AACT,KAAK;AACL,YAAY,sDAAI,CAAC,uDAAS,IAAI,UAAU,sDAAI,CAAC,qDAAa,IAAI,UAAU,sDAAI,CAAC,qDAAU,IAAI,UAAU,uDAAK,CAAC,qDAAG,IAAI,WAAW,sDAAI,CAAC,qDAAG,IAAI,UAAU,uDAAK,CAAC,8DAAY,IAAI,sCAAsC,sDAAI,CAAC,mEAAiB,IAAI,2FAA2F,sDAAI,CAAC,8DAAc,IAAI,eAAe,oBAAoB,oBAAoB,cAAc,0BAA0B,GAAG,sDAAI,CAAC,mEAAiB,IAAI,sFAAsF,sDAAI,CAAC,8DAAyB,IAAI,eAAe,oBAAoB,oBAAoB,cAAc,qBAAqB,IAAI,GAAG,GAAG,uDAAK,CAAC,qDAAG,IAAI,oDAAoD,sDAAI,CAAC,4DAAa,IAAI,kCAAkC,mBAAmB,sDAAI,CAAC,uDAAQ,IAAI,kBAAkB,IAAI,IAAI,GAAG,GAAG,GAAG;AACn3B;AACA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;;;ACzBsB;AACS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kDAAkD;AACzD;AACA,qBAAqB,+EAA6B;AAClD,uBAAuB,8DAAW;AAClC;AACA;AACA;AACA,yBAAyB,8EAA4B;AACrD;AACA;AACA,kBAAkB,+EAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gFAA8B;AAChD;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClC0D;AAC4B;AACvB;AACd;AACmC;AAC7C;AACI;AACZ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAe;AAC9B,eAAe,yEAAgB,EAAE,2DAAS,EAAE,oEAAe;AAC3D;AACA;AACA,uBAAuB,WAAW;AAClC,KAAK;AACL;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA,0BAA0B,+DAAa;AACvC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oCAAoC,oDAAe;AACnD,mCAAmC,gEAAc,GAAG,SAAS;AAC7D;AACA,oCAAoC,wGAAI;AACxC;AACA;AACA;AACA,SAAS;AACT;AACA,0BAA0B,mBAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA,aAAa;AACb;AACA,6DAA6D,UAAU;AACvE,aAAa;AACb;AACA,QAAQ,oDAAU;AAClB;AACA;AACA,SAAS;AACT;AACA,kFAAkF,OAAO;AACzF,SAAS;AACT,yCAAyC,WAAW;AACpD;AACA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;;AC1F0B;AACG;AACd;AAC9B,8BAA8B,6DAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAA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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,sCAAsC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACtGsF;AACtB;AACA;AAChE;AACA,YAAY,sDAAI,CAAC,uDAAS,IAAI,UAAU,uDAAK,CAAC,4DAAU,IAAI,WAAW,sDAAI,CAAC,sEAAoB,IAAI,UAAU,sDAAI,CAAC,kEAAgB,IAAI,oBAAoB,GAAG,GAAG,sDAAI,CAAC,uEAAqB,IAAI,UAAU,uDAAK,CAAC,8DAAY,IAAI,mCAAmC,sDAAI,CAAC,mEAAiB,IAAI,MAAM,8DAAQ,iEAAiE,GAAG,sDAAI,CAAC,mEAAiB,IAAI,kBAAkB,8DAAY,wBAAwB,IAAI,GAAG,IAAI,GAAG;AAC5c;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;ACN0B;AACZ;AACc;AAClD;AACA,YAAY,sDAAI,CAAC,qDAAG,IAAI,UAAU,sDAAI,CAAC,4DAAU,IAAI,UAAU,sDAAI,CAAC,sEAAoB,IAAI,UAAU,sDAAI,CAAC,kEAAgB,IAAI,sBAAsB,GAAG,GAAG,GAAG;AAC9J;AACA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;;;;;;ACN8D;AAC1C;AACQ;AACF;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,uBAAuB;AACvB,sBAAsB;AACtB;AACA;AACA,YAAY,yBAAyB;AACrC,YAAY,uDAAK,CAAC,uDAAS,IAAI,WAAW,sDAAI,CAAC,qDAAG,IAAI,UAAU,sDAAI,CAAC,qDAAO,IAAI,MAAM,oBAAoB,wBAAwB,GAAG;AACrI,wBAAwB,sDAAI,CAAC,uDAAS,IAAI,UAAU,sDAAI,CAAC,qDAAG,IAAI,UAAU,sDAAI,CAAC,qDAAK,IAAI,gDAAgD,GAAG,GAAG;AAC9I,aAAa,IAAI;AACjB;AACA;AACA,YAAY,kBAAkB;AAC9B,oDAAoD,+CAAQ;AAC5D,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL,YAAY,uDAAK,CAAC,uDAAS,IAAI,WAAW,sDAAI,CAAC,4DAAU,IAAI,UAAU,sDAAI,CAAC,sEAAoB,IAAI,UAAU,sDAAI,CAAC,kEAAgB,IAAI,+BAA+B,GAAG,GAAG;AAC5K;AACA;AACA,2BAA2B,sDAAI,yBAAyB,gDAAgD;AACxG,iBAAiB,IAAI;AACrB;AACA,iEAAe,gBAAgB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;AC1CsD;AAC1C;AACY;AACY;AACpE;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,iBAAiB;AACjB,sBAAsB;AACtB,kBAAkB;AAClB,sBAAsB;AACtB,uBAAuB;AACvB,0BAA0B;AAC1B;AACA;AACA,YAAY,kBAAkB;AAC9B,kDAAkD,+CAAQ;AAC1D,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,uDAAK,CAAC,uDAAS,IAAI,WAAW,sDAAI,CAAC,4DAAU,IAAI,UAAU,sDAAI,CAAC,sEAAoB,IAAI,UAAU,sDAAI,CAAC,kEAAgB,IAAI,qBAAqB,GAAG,GAAG;AAClK,gBAAgB,uDAAK,CAAC,iEAAe,IAAI,WAAW,sDAAI,CAAC,6DAAW,IAAI,gEAAgE,GAAG,sDAAI,CAAC,gEAAc,IAAI,6FAA6F,GAAG,sDAAI,CAAC,2DAAS,IAAI;AACpR;AACA;AACA;AACA,uDAAuD,sDAAI,CAAC,qDAAI,IAAI,oBAAoB;AACxF,iCAAiC;AACjC;AACA;AACA;AACA;AACA,+CAA+C,sDAAI,CAAC,qDAAI,IAAI,qBAAqB;AACjF;AACA,iCAAiC;AACjC;AACA;AACA;AACA,uDAAuD,sDAAI,CAAC,qDAAK,IAAI,yBAAyB;AAC9F,iCAAiC;AACjC;AACA;AACA;AACA;AACA,+CAA+C,sDAAI,CAAC,qDAAU,IAAI,wCAAwC,sDAAI,CAAC,qDAAK,IAAI,wCAAwC,IAAI;AACpK;AACA,iCAAiC;AACjC,+BAA+B,IAAI,IAAI;AACvC;AACA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;;ACvD2E;AAClG,YAAgG;;AAEhG;;AAEA;AACA;;AAEA,aAAa,0GAAG,CAAC,sFAAO;;;;AAIxB,iEAAe,6FAAc,MAAM","sources":["webpack://@datalayer/core/./style/base.css","webpack://@datalayer/core/./style/index.css","webpack://@datalayer/core/./lib/Datalayer.js","webpack://@datalayer/core/./lib/jupyterlab/handler.js","webpack://@datalayer/core/./lib/jupyterlab/index.js","webpack://@datalayer/core/./lib/jupyterlab/widget.js","webpack://@datalayer/core/./lib/state/zustand.js","webpack://@datalayer/core/./lib/tabs/AboutTab.js","webpack://@datalayer/core/./lib/tabs/JupyterLabTab.js","webpack://@datalayer/core/./lib/tabs/jupyterlab/Drives.js","webpack://@datalayer/core/./lib/tabs/jupyterlab/FileTypes.js","webpack://@datalayer/core/./lib/tabs/jupyterlab/IPyWidgets.js","webpack://@datalayer/core/./lib/tabs/jupyterlab/Models.js","webpack://@datalayer/core/./lib/tabs/jupyterlab/Plugins.js","webpack://@datalayer/core/./lib/tabs/jupyterlab/PluginsNetwork.js","webpack://@datalayer/core/./lib/tabs/jupyterlab/Server.js","webpack://@datalayer/core/./lib/tabs/jupyterlab/Settings.js","webpack://@datalayer/core/./lib/tabs/jupyterlab/WidgetExtensions.js","webpack://@datalayer/core/./lib/tabs/jupyterlab/Widgets.js","webpack://@datalayer/core/./style/index.css?1492"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\n  overflow-y: visible;\\n}\\n\\n.dla-Container {\\n  overflow-y: visible;\\n}\\n\\n.jp-Launcher-content {\\n    display: grid;\\n}\\n\\n.jp-Launcher-section:nth-child(5) {\\n    order: -1;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/base.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,SAAS;AACb\",\"sourcesContent\":[\"body {\\n  overflow-y: visible;\\n}\\n\\n.dla-Container {\\n  overflow-y: visible;\\n}\\n\\n.jp-Launcher-content {\\n    display: grid;\\n}\\n\\n.jp-Launcher-section:nth-child(5) {\\n    order: -1;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../../node_modules/css-loader/dist/cjs.js!./base.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport { ThemeProvider, BaseStyles, Box, } from '@primer/react';\nimport { UnderlineNav } from '@primer/react/drafts';\nimport { DatalayerGreenPaddingIcon, JupyterLabIcon } from '@datalayer/icons-react';\nimport AboutTab from './tabs/AboutTab';\nimport JupyterLabTab from './tabs/JupyterLabTab';\nimport { requestAPI } from './jupyterlab/handler';\nimport useStore from './state/zustand';\nconst Datalayer = (props) => {\n    const { jupyterFrontend } = props;\n    const { tab, setTab } = useStore();\n    const intTab = Math.floor(tab);\n    const [version, setVersion] = useState('');\n    useEffect(() => {\n        requestAPI('config')\n            .then(data => {\n            setVersion(data.version);\n        })\n            .catch(reason => {\n            console.error(`Error while accessing the jupyter server datalayer extension.\\n${reason}`);\n        });\n    });\n    return (_jsx(_Fragment, { children: _jsx(ThemeProvider, { children: _jsx(BaseStyles, { children: _jsxs(Box, { children: [_jsx(Box, { children: _jsxs(UnderlineNav, { \"aria-label\": \"datalayer\", children: [_jsx(UnderlineNav.Item, { \"aria-label\": \"jupyterlab\", \"aria-current\": intTab === 0 ? \"page\" : undefined, icon: () => _jsx(JupyterLabIcon, { colored: true }), onSelect: e => { e.preventDefault(); setTab(0.0); }, children: \"JupyterLab\" }), _jsx(UnderlineNav.Item, { \"aria-label\": \"about\", \"aria-current\": intTab === 1 ? \"page\" : undefined, icon: () => _jsx(DatalayerGreenPaddingIcon, { colored: true }), onSelect: e => { e.preventDefault(); setTab(1.0); }, children: \"About\" })] }) }), _jsxs(Box, { m: 3, children: [intTab === 0 && jupyterFrontend && _jsx(JupyterLabTab, { jupyterFrontend: jupyterFrontend }), intTab === 1 && _jsx(AboutTab, { version: version })] })] }) }) }) }));\n};\nexport default Datalayer;\n","import { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI(endPoint = '', init = {}) {\n    // Make request to Jupyter API\n    const settings = ServerConnection.makeSettings();\n    const requestUrl = URLExt.join(settings.baseUrl, 'datalayer', // API Namespace\n    endPoint);\n    let response;\n    try {\n        response = await ServerConnection.makeRequest(requestUrl, init, settings);\n    }\n    catch (error) {\n        throw new ServerConnection.NetworkError(error);\n    }\n    let data = await response.text();\n    if (data.length > 0) {\n        try {\n            data = JSON.parse(data);\n        }\n        catch (error) {\n            console.log('Not a JSON response body.', response);\n        }\n    }\n    if (!response.ok) {\n        throw new ServerConnection.ResponseError(response, data.message || data);\n    }\n    return data;\n}\n","import { ILayoutRestorer } from '@jupyterlab/application';\nimport { MainAreaWidget, ICommandPalette, WidgetTracker } from '@jupyterlab/apputils';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport icon from '@datalayer/icons-react/data1/DatalayerGreenPaddingIconJupyterLab';\nimport { requestAPI } from './handler';\nimport { DatalayerWidget } from './widget';\nimport '../../style/index.css';\n/**\n * The command IDs used by the plugin.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.create = 'datalayer:create-datalayer-widget';\n})(CommandIDs || (CommandIDs = {}));\nexport const PLUGIN_ID = '@datalayer/core:plugin';\nlet tracker;\n/**\n * Initialization data for the @datalayer/core extension.\n */\nconst plugin = {\n    id: PLUGIN_ID,\n    autoStart: true,\n    requires: [ICommandPalette],\n    optional: [ISettingRegistry, ILauncher, ILayoutRestorer],\n    deactivate: (app, palette, settingRegistry, launcher, restorer) => {\n        tracker.forEach(widget => widget.dispose());\n        console.log(`${PLUGIN_ID} is deactivated`);\n    },\n    activate: (app, palette, settingRegistry, launcher, restorer) => {\n        const { commands } = app;\n        const command = CommandIDs.create;\n        if (!tracker) {\n            tracker = new WidgetTracker({\n                namespace: 'datalayer',\n            });\n        }\n        if (restorer) {\n            void restorer.restore(tracker, {\n                command,\n                name: () => 'datalayer',\n            });\n        }\n        commands.addCommand(command, {\n            caption: 'Show Datalayer',\n            label: 'Datalayer',\n            icon,\n            execute: () => {\n                const content = new DatalayerWidget(app);\n                const widget = new MainAreaWidget({ content });\n                widget.title.label = 'Datalayer';\n                widget.title.icon = icon;\n                app.shell.add(widget, 'main');\n                tracker.add(widget);\n            }\n        });\n        const category = 'Datalayer';\n        palette.addItem({ command, category });\n        const settingsUpdated = (settings) => {\n            const showInLauncher = settings.get('showInLauncher').composite;\n            if (launcher && showInLauncher) {\n                launcher.add({\n                    command,\n                    category,\n                    rank: 1.1,\n                });\n            }\n        };\n        if (settingRegistry) {\n            settingRegistry\n                .load(plugin.id)\n                .then(settings => {\n                console.log(`${PLUGIN_ID} settings loaded:`, settings.composite);\n                settingsUpdated(settings);\n                settings.changed.connect(settingsUpdated);\n            })\n                .catch(reason => {\n                console.error(`Failed to load settings for ${PLUGIN_ID}`, reason);\n            });\n        }\n        requestAPI('config')\n            .then(data => {\n            console.log('Received config', data);\n        })\n            .catch(reason => {\n            console.error(`Error while accessing the jupyter server extension.\\n${reason}`);\n        });\n        console.log(`JupyterLab plugin ${PLUGIN_ID} is activated.`);\n    }\n};\nexport default plugin;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { ReactWidget } from '@jupyterlab/apputils';\nimport Datalayer from '../Datalayer';\nexport class DatalayerWidget extends ReactWidget {\n    _app;\n    constructor(app) {\n        super();\n        this._app = app;\n        this.addClass('dla-Container');\n    }\n    render() {\n        return _jsx(Datalayer, { jupyterFrontend: this._app });\n    }\n}\n","import { create } from 'zustand';\nexport const useStore = create((set, get) => ({\n    tab: 0.0,\n    getIntTab: () => Math.floor(get().tab),\n    setTab: (tab) => set((state) => ({ tab })),\n}));\nexport default useStore;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Pagehead, Label, Text, Link, Box } from '@primer/react';\nimport { ECharlesIcon } from '@datalayer/icons-react/eggs';\nconst AboutTab = (props) => {\n    const { version } = props;\n    const [egg, setEgg] = useState(false);\n    return (_jsxs(_Fragment, { children: [_jsxs(Pagehead, { as: \"h2\", children: [\"\\u039E Datalayer\", _jsx(Label, { sx: { marginLeft: 1 }, children: version })] }), _jsx(Box, { children: _jsx(Text, { children: \"Datalayer provides features to other Datalayer packages. It also contains base application classes and configuration inherited by other projects.\" }) }), _jsx(Box, { mt: 3, style: { height: 350 }, children: !egg ?\n                    _jsx(\"img\", { src: \"https://assets.datalayer.tech/releases/datalayer-0.2.0-omalley.png\", onClick: e => setEgg(true) })\n                    :\n                        _jsx(ECharlesIcon, { size: 300, onClick: e => setEgg(false) }) }), _jsx(Box, { children: _jsx(Link, { href: \"https://datalayer.tech/docs/releases/0.2.0-omalley\", target: \"_blank\", children: _jsx(Text, { as: \"h4\", children: \"Datalayer 0.2.0 O'Malley Release\" }) }) }), _jsx(Box, { children: _jsx(Link, { href: \"https://github.com/datalayer/datalayer\", target: \"_blank\", children: _jsx(Text, { as: \"h4\", children: \"Source code\" }) }) })] }));\n};\nexport default AboutTab;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { NetworkIcon, WidgetsIcon, PlusIcon, IpyWidgetsIcon, ShuffleIcon, SettingsIcon, FileIcon, HardDriveIcon, JupyterServerIcon } from '@datalayer/icons-react';\nimport { Box, NavList } from '@primer/react';\nimport Plugins from './jupyterlab/Plugins';\nimport FileTypes from './jupyterlab/FileTypes';\nimport Drives from './jupyterlab/Drives';\nimport Models from './jupyterlab/Models';\nimport Widgets from './jupyterlab/Widgets';\nimport WidgetExtensions from './jupyterlab/WidgetExtensions';\nimport Settings from './jupyterlab/Settings';\nimport IPyWidgets from './jupyterlab/IPyWidgets';\nimport Server from './jupyterlab/Server';\nimport useStore from '../state/zustand';\nconst JupyterLabTab = (props) => {\n    const { jupyterFrontend } = props;\n    const { tab, setTab } = useStore();\n    return (_jsx(_Fragment, { children: _jsxs(Box, { sx: { display: 'flex' }, children: [_jsx(Box, { children: _jsxs(NavList, { sx: {\n                            '> *': {\n                                paddingTop: '0px'\n                            }\n                        }, children: [_jsxs(NavList.Item, { \"aria-current\": tab === 0.0 ? 'page' : undefined, onClick: e => setTab(0.0), children: [_jsx(NavList.LeadingVisual, { children: _jsx(NetworkIcon, {}) }), \"Plugins\"] }), _jsxs(NavList.Item, { \"aria-current\": tab === 0.1 ? 'page' : undefined, onClick: e => setTab(0.1), children: [_jsx(NavList.LeadingVisual, { children: _jsx(FileIcon, {}) }), \"File Types\"] }), _jsxs(NavList.Item, { \"aria-current\": tab === 0.2 ? 'page' : undefined, onClick: e => setTab(0.2), children: [_jsx(NavList.LeadingVisual, { children: _jsx(ShuffleIcon, {}) }), \"Models\"] }), _jsxs(NavList.Item, { \"aria-current\": tab === 0.3 ? 'page' : undefined, onClick: e => setTab(0.3), children: [_jsx(NavList.LeadingVisual, { children: _jsx(HardDriveIcon, { colored: true }) }), \"Drives\"] }), _jsxs(NavList.Item, { \"aria-current\": tab === 0.4 ? 'page' : undefined, onClick: e => setTab(0.4), children: [_jsx(NavList.LeadingVisual, { children: _jsx(WidgetsIcon, {}) }), \"Widgets\"] }), _jsxs(NavList.Item, { \"aria-current\": tab === 0.5 ? 'page' : undefined, onClick: e => setTab(0.5), children: [_jsx(NavList.LeadingVisual, { children: _jsx(PlusIcon, {}) }), \"Widget Extensions\"] }), _jsxs(NavList.Item, { \"aria-current\": tab === 0.6 ? 'page' : undefined, onClick: e => setTab(0.6), children: [_jsx(NavList.LeadingVisual, { children: _jsx(IpyWidgetsIcon, {}) }), \"IPyWidgets\"] }), _jsxs(NavList.Item, { \"aria-current\": tab === 0.7 ? 'page' : undefined, onClick: e => setTab(0.7), children: [_jsx(NavList.LeadingVisual, { children: _jsx(SettingsIcon, {}) }), \"Settings\"] }), _jsxs(NavList.Item, { \"aria-current\": tab === 0.8 ? 'page' : undefined, onClick: e => setTab(0.8), children: [_jsx(NavList.LeadingVisual, { children: _jsx(JupyterServerIcon, {}) }), \"Server\"] })] }) }), _jsxs(Box, { ml: 3, sx: { width: '100%' }, children: [(tab === 0.0) && _jsx(Plugins, { jupyterFrontend: jupyterFrontend }), (tab === 0.1) && _jsx(FileTypes, { jupyterFrontend: jupyterFrontend }), (tab === 0.2) && _jsx(Models, { jupyterFrontend: jupyterFrontend }), (tab === 0.3) && _jsx(Drives, { jupyterFrontend: jupyterFrontend }), (tab === 0.4) && _jsx(Widgets, { jupyterFrontend: jupyterFrontend }), (tab === 0.5) && _jsx(WidgetExtensions, { jupyterFrontend: jupyterFrontend }), (tab === 0.6) && _jsx(IPyWidgets, { jupyterFrontend: jupyterFrontend }), (tab === 0.7) && _jsx(Settings, { jupyterFrontend: jupyterFrontend }), (tab === 0.8) && _jsx(Server, { jupyterFrontend: jupyterFrontend })] })] }) }));\n};\nexport default JupyterLabTab;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport { Label, Text } from '@primer/react';\nimport { Table, DataTable, PageHeader } from '@primer/react/drafts';\nconst Drives = (props) => {\n    const { jupyterFrontend } = props;\n    const [_, setDefaultDrive] = useState();\n    const [drives, setDrives] = useState();\n    useEffect(() => {\n        if (jupyterFrontend) {\n            const defaultDrive = jupyterFrontend.serviceManager.contents[\"_defaultDrive\"];\n            setDefaultDrive({\n                id: -1,\n                ...defaultDrive,\n            });\n            const drives = Array.from(jupyterFrontend.serviceManager.contents[\"_additionalDrives\"].values());\n            setDrives(drives.map((drive, id) => {\n                return {\n                    id,\n                    ...drive,\n                };\n            }));\n        }\n    }, [jupyterFrontend]);\n    return (_jsxs(_Fragment, { children: [_jsx(PageHeader, { children: _jsx(PageHeader.TitleArea, { children: _jsx(PageHeader.Title, { children: \"Drives\" }) }) }), drives &&\n                _jsxs(Table.Container, { children: [_jsx(Table.Title, { as: \"h2\", id: \"repositories\", children: \"Drives\" }), _jsx(Table.Subtitle, { as: \"p\", id: \"repositories-subtitle\", children: \"List of registered drives\" }), _jsx(DataTable, { \"aria-labelledby\": \"file-types\", \"aria-describedby\": \"file-types-subtitle\", data: drives, columns: [\n                                // @ts-ignore\n                                {\n                                    header: 'Name',\n                                    field: 'name',\n                                    renderCell: row => _jsx(Text, { children: row.name })\n                                },\n                                {\n                                    header: 'sharedModelFactory',\n                                    field: 'sharedModelFactory',\n                                    renderCell: row => _jsx(Label, { children: String(row.sharedModelFactory?.collaborative) })\n                                },\n                            ] })] })] }));\n};\nexport default Drives;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport { LabelGroup, Label, Text, Box } from '@primer/react';\nimport { Table, DataTable, PageHeader } from '@primer/react/drafts';\nclass FileType {\n    _fileType;\n    constructor(fileType) {\n        this._fileType = fileType;\n    }\n    get id() { return this._fileType.name; }\n    get name() { return this._fileType.name; }\n    get displayName() { return this._fileType.displayName; }\n    get fileFormat() { return this._fileType.fileFormat; }\n    get icon() { return this._fileType.icon; }\n    get extensions() { return this._fileType.extensions; }\n    get contentType() { return this._fileType.contentType(); }\n    get mimeTypes() { return this._fileType.mimeTypes(); }\n    get pattern() { return this._fileType.pattern(); }\n    get iconClass() { return this._fileType.iconClass(); }\n    get iconLabel() { return this._fileType.iconLabel(); }\n}\nconst FileTypes = (props) => {\n    const { jupyterFrontend } = props;\n    const [fileTypes, setFileTypes] = useState();\n    useEffect(() => {\n        if (jupyterFrontend) {\n            const fileTypes = Array.from(jupyterFrontend.docRegistry.fileTypes());\n            const jupyterlabFileTypes = fileTypes.map(fileType => new FileType(fileType));\n            setFileTypes(jupyterlabFileTypes);\n        }\n    }, [jupyterFrontend]);\n    return (_jsxs(_Fragment, { children: [_jsx(PageHeader, { children: _jsx(PageHeader.TitleArea, { children: _jsx(PageHeader.Title, { children: \"File Types\" }) }) }), fileTypes &&\n                _jsxs(Table.Container, { children: [_jsx(Table.Title, { as: \"h2\", id: \"file-types\", children: \"File types\" }), _jsx(Table.Subtitle, { as: \"p\", id: \"file-types-subtitle\", children: \"List of registered file types.\" }), _jsx(DataTable, { \"aria-labelledby\": \"file-types\", \"aria-describedby\": \"file-types-subtitle\", data: fileTypes, columns: [\n                                // @ts-ignore\n                                {\n                                    header: 'Icon',\n                                    field: 'icon',\n                                    renderCell: row => {\n                                        return row.icon ?\n                                            _jsx(Box, { sx: { width: 16, height: 16 }, children: _jsx(row.icon.react, {}) })\n                                            :\n                                                _jsx(_Fragment, {});\n                                    }\n                                },\n                                {\n                                    header: 'Name',\n                                    field: 'name',\n                                    renderCell: row => {\n                                        return row.name;\n                                    }\n                                },\n                                {\n                                    header: 'Display Name',\n                                    field: 'displayName',\n                                    renderCell: row => {\n                                        return _jsx(Text, { children: String(row.displayName) });\n                                    }\n                                },\n                                {\n                                    header: 'Extensions',\n                                    field: 'extensions',\n                                    renderCell: row => {\n                                        return (_jsx(LabelGroup, { children: row.extensions.map((extension) => _jsx(Label, { children: extension })) }));\n                                    }\n                                },\n                                {\n                                    header: 'File Format',\n                                    field: 'fileFormat',\n                                    renderCell: row => {\n                                        return _jsx(Label, { variant: \"primary\", children: String(row.fileFormat) });\n                                    }\n                                },\n                            ] })] })] }));\n};\nexport default FileTypes;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Box } from '@primer/react';\nimport { PageHeader } from '@primer/react/drafts';\nconst IPyWidgets = (props) => {\n    return (_jsx(Box, { children: _jsx(PageHeader, { children: _jsx(PageHeader.TitleArea, { children: _jsx(PageHeader.Title, { children: \"IPyWidgets\" }) }) }) }));\n};\nexport default IPyWidgets;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport { Label, Text } from '@primer/react';\nimport { Table, DataTable, PageHeader } from '@primer/react/drafts';\nclass ModelFactory {\n    _modelFactory;\n    constructor(modelFactory) {\n        this._modelFactory = modelFactory;\n    }\n    get id() { return this._modelFactory.name; }\n    get name() { return this._modelFactory.name; }\n    get contentType() { return this._modelFactory.contentType; }\n    get collaborative() { return this._modelFactory.collaborative; }\n    get isDisposed() { return this._modelFactory.isDisposed; }\n    get fileFormat() { return this._modelFactory.fileFormat; }\n}\nconst Models = (props) => {\n    const { jupyterFrontend } = props;\n    const [modelFactories, setModelFactories] = useState();\n    useEffect(() => {\n        if (jupyterFrontend) {\n            const modelFactories = Array.from(jupyterFrontend.docRegistry.modelFactories());\n            const jupyterlabModelFactories = modelFactories.map(modelFactory => new ModelFactory(modelFactory));\n            setModelFactories(jupyterlabModelFactories);\n        }\n    }, [jupyterFrontend]);\n    return (_jsxs(_Fragment, { children: [_jsx(PageHeader, { children: _jsx(PageHeader.TitleArea, { children: _jsx(PageHeader.Title, { children: \"Models\" }) }) }), modelFactories &&\n                _jsxs(Table.Container, { children: [_jsx(Table.Title, { as: \"h2\", id: \"model-factories\", children: \"Model Factories\" }), _jsx(Table.Subtitle, { as: \"p\", id: \"model-factories-subtitle\", children: \"List of registered model factories.\" }), _jsx(DataTable, { \"aria-labelledby\": \"model-factories\", \"aria-describedby\": \"model-factories-subtitle\", data: modelFactories, columns: [\n                                {\n                                    header: 'Name',\n                                    field: 'name',\n                                    renderCell: row => _jsx(Text, { children: row.name })\n                                },\n                                {\n                                    header: 'Content Type',\n                                    field: 'contentType',\n                                    renderCell: row => _jsx(Label, { children: row.contentType })\n                                },\n                                {\n                                    header: 'Collaborative',\n                                    field: 'collaborative',\n                                    renderCell: row => _jsx(Text, { children: String(row.collaborative) })\n                                },\n                                {\n                                    header: 'File Format',\n                                    field: 'fileFormat',\n                                    renderCell: row => {\n                                        return _jsx(Label, { variant: \"primary\", children: String(row.fileFormat) });\n                                    }\n                                },\n                            ] })] })] }));\n};\nexport default Models;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport { PageHeader } from '@primer/react/drafts';\nimport * as echarts from 'echarts/core';\nimport { GraphChart } from 'echarts/charts';\nimport { GridComponent, TooltipComponent, TitleComponent, LegendComponent } from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport ReactEChartsCore from 'echarts-for-react/lib/core';\nimport { PluginsNetwork } from './PluginsNetwork';\necharts.use([\n    CanvasRenderer,\n    GraphChart,\n    GridComponent,\n    LegendComponent,\n    TitleComponent,\n    TooltipComponent,\n]);\nconst Plugins = (props) => {\n    const { jupyterFrontend } = props;\n    const [option, setOption] = useState(undefined);\n    useEffect(() => {\n        const plugins = jupyterFrontend['_plugins'];\n        const pluginsModel = new PluginsNetwork({ plugins });\n        const option = {\n            showLoading: true,\n            tooltip: {},\n            legend: [\n                {\n                    orient: 'vertical',\n                    //          type: 'scroll',\n                    x: 'left',\n                    right: 10,\n                    data: pluginsModel.categories.map(function (category) {\n                        return category.name;\n                    }),\n                }\n            ],\n            animationDurationUpdate: 1500,\n            animationEasingUpdate: 'quinticInOut',\n            series: [\n                {\n                    name: 'JupyterLab Plugins',\n                    type: 'graph',\n                    layout: 'circular',\n                    center: ['30%', '45%'],\n                    circular: {\n                        rotateLabel: true,\n                    },\n                    data: pluginsModel.nodes,\n                    links: pluginsModel.edges,\n                    categories: pluginsModel.categories,\n                    roam: true,\n                    label: {\n                        position: 'right',\n                        formatter: '{b}'\n                    },\n                    lineStyle: {\n                        color: 'source',\n                        curveness: 0.3,\n                    }\n                }\n            ]\n        };\n        setOption(option);\n    }, [jupyterFrontend]);\n    return (_jsxs(_Fragment, { children: [_jsx(PageHeader, { children: _jsx(PageHeader.TitleArea, { children: _jsx(PageHeader.Title, { children: \"Plugins\" }) }) }), option &&\n                _jsx(ReactEChartsCore, { echarts: echarts, option: option, style: { height: 'calc(100vh - 200px)' }, notMerge: true, lazyUpdate: true })] }));\n};\nexport default Plugins;\n","export class PluginsNetwork {\n    constructor(options) {\n        this._plugins = options.plugins;\n        this.update();\n    }\n    _asCategory(name) {\n        const splits = name.split(':');\n        return splits.length > 1 ? splits[0] : name;\n    }\n    _addNode(name) {\n        const category = this._asCategory(name);\n        this._nodes.set(name, {\n            \"id\": name,\n            \"name\": name,\n            \"category\": category,\n        });\n        this._addCategory(category);\n    }\n    ;\n    _addEdge(source, target) {\n        this._edges.push({\n            \"source\": source,\n            \"target\": target,\n        });\n    }\n    ;\n    _addCategory(category) {\n        this._categories.set(category, {\n            \"name\": category\n        });\n    }\n    ;\n    update() {\n        const { plugins, filter, requires, optional } = this;\n        plugins.forEach((value, key) => {\n            const match = (name) => filter === '' || !!name.toLowerCase().match(filter.toLowerCase());\n            let label = key;\n            if (value.provides) {\n                label = value.provides.name;\n            }\n            if (match(label)) {\n                this._addNode(label);\n            }\n            if (requires) {\n                (value.requires ?? []).forEach((p) => {\n                    if (!match(p.name) && !match(label)) {\n                        return;\n                    }\n                    this._addNode(p.name);\n                    this._addNode(label);\n                    this._addEdge(label, p.name);\n                });\n            }\n            if (optional) {\n                (value.optional ?? []).forEach((p) => {\n                    if (!match(p.name) && !match(label)) {\n                        return;\n                    }\n                    this._addNode(p.name);\n                    this._addNode(label);\n                    this._addEdge(label, p.name);\n                });\n            }\n        });\n    }\n    get plugins() {\n        return this._plugins;\n    }\n    get filter() {\n        return this._filter;\n    }\n    set filter(filter) {\n        this._filter = filter;\n    }\n    get requires() {\n        return this._requires;\n    }\n    set requires(requires) {\n        this._requires = requires;\n    }\n    get optional() {\n        return this._optional;\n    }\n    set optional(optional) {\n        this._optional = optional;\n    }\n    get nodes() {\n        return Array.from(this._nodes.values()).sort((a, b) => a.id.localeCompare(b.id));\n    }\n    get edges() {\n        return this._edges;\n    }\n    get categories() {\n        return Array.from(this._categories.values()).sort((a, b) => a.name.localeCompare(b.name));\n    }\n    _plugins;\n    _nodes = new Map();\n    _edges = new Array();\n    _categories = new Map();\n    _filter = '';\n    _requires = true;\n    _optional = true;\n}\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { PageHeader, UnderlineNav } from '@primer/react/drafts';\nimport { PlusIcon, SettingsIcon } from '@datalayer/icons-react';\nconst Server = (props) => {\n    return (_jsx(_Fragment, { children: _jsxs(PageHeader, { children: [_jsx(PageHeader.TitleArea, { children: _jsx(PageHeader.Title, { children: \"Server\" }) }), _jsx(PageHeader.Navigation, { children: _jsxs(UnderlineNav, { \"aria-label\": \"Server\", children: [_jsx(UnderlineNav.Item, { icon: PlusIcon, counter: \"12\", \"aria-current\": \"page\", children: \"Extensions\" }), _jsx(UnderlineNav.Item, { counter: 3, icon: SettingsIcon, children: \"Settings\" })] }) })] }) }));\n};\nexport default Server;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Box } from '@primer/react';\nimport { PageHeader } from '@primer/react/drafts';\nconst Settings = (props) => {\n    return (_jsx(Box, { children: _jsx(PageHeader, { children: _jsx(PageHeader.TitleArea, { children: _jsx(PageHeader.Title, { children: \"Settings\" }) }) }) }));\n};\nexport default Settings;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport { Box, Heading, Label } from '@primer/react';\nimport { PageHeader } from '@primer/react/drafts';\nclass WidgetExtensionWithId {\n    _widgetName;\n    _extension;\n    constructor(widgetName, extension) {\n        this._widgetName = widgetName;\n        this._extension = extension;\n    }\n    get id() { return this.widgetName; }\n    get widgetName() { return this._widgetName; }\n    get extension() { return this._extension; }\n}\nconst WidgetExtensionTable = (props) => {\n    const { widgetName, extensions } = props;\n    return (_jsxs(_Fragment, { children: [_jsx(Box, { children: _jsx(Heading, { sx: { fontSize: 2, mb: 2 }, children: widgetName }) }), extensions.map(extension => {\n                return (_jsx(_Fragment, { children: _jsx(Box, { children: _jsx(Label, { children: extension.extension.constructor.name }) }) }));\n            })] }));\n};\nconst WidgetExtensions = (props) => {\n    const { jupyterFrontend } = props;\n    const [widgetExtensions, setWidgetExtensions] = useState();\n    useEffect(() => {\n        if (jupyterFrontend) {\n            const widgetExtensions = jupyterFrontend.docRegistry._extenders;\n            const w = new Map();\n            Object.keys(widgetExtensions).forEach(widgetName => {\n                const extensions = widgetExtensions[widgetName];\n                const e = extensions.map((e) => new WidgetExtensionWithId(widgetName, e));\n                w.set(widgetName, e);\n            });\n            setWidgetExtensions(w);\n        }\n    }, [jupyterFrontend]);\n    return (_jsxs(_Fragment, { children: [_jsx(PageHeader, { children: _jsx(PageHeader.TitleArea, { children: _jsx(PageHeader.Title, { children: \"Widget Extensions\" }) }) }), widgetExtensions &&\n                Array.from(widgetExtensions.entries()).map(entry => {\n                    const [widgetName, extensions] = entry;\n                    return _jsx(WidgetExtensionTable, { widgetName: widgetName, extensions: extensions });\n                })] }));\n};\nexport default WidgetExtensions;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport { Text, LabelGroup, Label } from '@primer/react';\nimport { Table, DataTable, PageHeader } from '@primer/react/drafts';\nclass JupyterLabWidgetFactory {\n    _widgetFactory;\n    constructor(widgetFactory) {\n        this._widgetFactory = widgetFactory;\n    }\n    get id() { return this._widgetFactory.name; }\n    get name() { return this._widgetFactory.name; }\n    get modelName() { return this._widgetFactory.modelName; }\n    get label() { return this._widgetFactory.label; }\n    get fileTypes() { return this._widgetFactory.fileTypes; }\n    get isDisposed() { return this._widgetFactory.isDisposed; }\n    get widgetCreated() { return this._widgetFactory.widgetCreated; }\n}\nconst Widgets = (props) => {\n    const { jupyterFrontend } = props;\n    const [widgetFactories, setWidgetFactories] = useState();\n    useEffect(() => {\n        if (jupyterFrontend) {\n            const widgetFactories = Array.from(jupyterFrontend.docRegistry.widgetFactories());\n            const jupyterlabFileTypes = widgetFactories.map(widgetFactory => new JupyterLabWidgetFactory(widgetFactory));\n            setWidgetFactories(jupyterlabFileTypes);\n        }\n    }, [jupyterFrontend]);\n    return (_jsxs(_Fragment, { children: [_jsx(PageHeader, { children: _jsx(PageHeader.TitleArea, { children: _jsx(PageHeader.Title, { children: \"Widgets\" }) }) }), widgetFactories &&\n                _jsxs(Table.Container, { children: [_jsx(Table.Title, { as: \"h2\", id: \"widget-factories\", children: \"Widget Factories\" }), _jsx(Table.Subtitle, { as: \"p\", id: \"widget-factories-subtitle\", children: \"List of registered widgets factories.\" }), _jsx(DataTable, { \"aria-labelledby\": \"file-types\", \"aria-describedby\": \"file-types-subtitle\", data: widgetFactories, columns: [\n                                {\n                                    header: 'Name',\n                                    field: 'name',\n                                    renderCell: row => _jsx(Text, { children: row.name })\n                                },\n                                {\n                                    header: 'Label',\n                                    field: 'label',\n                                    renderCell: row => {\n                                        return _jsx(Text, { children: row.label });\n                                    }\n                                },\n                                {\n                                    header: 'Model Name',\n                                    field: 'modelName',\n                                    renderCell: row => _jsx(Label, { children: row.modelName })\n                                },\n                                {\n                                    header: 'File Types',\n                                    field: 'fileTypes',\n                                    renderCell: row => {\n                                        return _jsx(LabelGroup, { children: row.fileTypes.map(fileType => _jsx(Label, { variant: \"primary\", children: fileType })) });\n                                    }\n                                },\n                            ] })] })] }));\n};\nexport default Widgets;\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}