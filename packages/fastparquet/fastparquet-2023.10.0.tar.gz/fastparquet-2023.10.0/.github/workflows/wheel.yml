name: PyPi wheels

on: [push, pull_request]


jobs:
  buildLinxaarch:
    if: startsWith(github.ref, 'refs/tags/20')
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        architecture: ['x64']
        include:
          # https://cibuildwheel.readthedocs.io/en/stable/options/#build-skip
          - os: ubuntu-22.04
            linux_archs: "aarch64"
            skip: "pp* *-musllinux_aarch64"

    name: Python ${{ matrix.os }}
    env:
      CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
      CIBW_BEFORE_ALL: "pip install numpy cython"
      CIBW_SKIP: ${{ matrix.skip }}
      CIBW_ARCHS_LINUX: ${{ matrix.linux_archs }}
      CIBW_TEST_SKIP: "*"

    steps:
      - uses: actions/checkout
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python
        with:
          python-version: "3.11"

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action
        with:
          platforms: all

      - name: Add msbuild to PATH
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild

      - name: delvewheel install
        if: runner.os == 'Windows'
        run: |
          python -m pip install delvewheel cython

      - name: Build wheels
        uses: joerick/cibuildwheel@v2.16.2

      - uses: actions/upload-artifact
        with:
          path: ./wheelhouse/*.whl
          name: wheels

  buildLinx686:
    if: startsWith(github.ref, 'refs/tags/20') 
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        architecture: ['x64']
        include:
          # https://cibuildwheel.readthedocs.io/en/stable/options/#build-skip
          - os: ubuntu-22.04
            linux_archs: "i686"
            skip: "pp*"

    name: Python ${{ matrix.os }}
    env:
      CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
      CIBW_BEFORE_ALL: "pip install numpy cython"
      CIBW_SKIP: ${{ matrix.skip }}
      CIBW_ARCHS_LINUX: ${{ matrix.linux_archs }}
      CIBW_TEST_SKIP: "*"

    steps:
      - uses: actions/checkout
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python
        with:
          python-version: "3.11"

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action
        with:
          platforms: all

      - name: Add msbuild to PATH
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild

      - name: delvewheel install
        if: runner.os == 'Windows'
        run: |
          python -m pip install delvewheel cython

      - name: Build wheels
        uses: joerick/cibuildwheel@v2.16.2

      - uses: actions/upload-artifact
        with:
          path: ./wheelhouse/*.whl
          name: wheels

  buildLinx86x64:
    if: startsWith(github.ref, 'refs/tags/20') 
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        architecture: ['x64']
        include:
          # https://cibuildwheel.readthedocs.io/en/stable/options/#build-skip
          - os: ubuntu-22.04
            linux_archs: "x86_64"
            skip: "pp*"

    name: Python ${{ matrix.os }}
    env:
      CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
      CIBW_BEFORE_ALL: "pip install numpy cython"
      CIBW_SKIP: ${{ matrix.skip }}
      CIBW_ARCHS_LINUX: ${{ matrix.linux_archs }}
      CIBW_TEST_SKIP: "*"

    steps:
      - uses: actions/checkout
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python
        with:
          python-version: "3.11"

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action
        with:
          platforms: all

      - name: Add msbuild to PATH
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild

      - name: delvewheel install
        if: runner.os == 'Windows'
        run: |
          python -m pip install delvewheel cython

      - name: Build wheels
        uses: joerick/cibuildwheel@v2.16.2

      - uses: actions/upload-artifac
        with:
          path: ./wheelhouse/*.whl
          name: wheels

  buildWin:
    if: startsWith(github.ref, 'refs/tags/20') 
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        architecture: ['x64']
        include:
          # https://cibuildwheel.readthedocs.io/en/stable/options/#build-skip
          - os: windows-2019
            skip: "*2*win* *win32 pp*"

    name: Python ${{ matrix.os }}
    env:
      CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
      CIBW_BEFORE_ALL: "pip install numpy cython"
      CIBW_SKIP: ${{ matrix.skip }}
      CIBW_ARCHS_LINUX: ${{ matrix.linux_archs }}
      CIBW_TEST_SKIP: "*"
      CIBW_BEFORE_TEST: "git status"

    steps:
        - uses: actions/checkout
          with:
            fetch-depth: 0

        - name: Setup Python
          uses: actions/setup-python
          with:
            python-version: "3.11"

        - name: Set up QEMU
          if: runner.os == 'Linux'
          uses: docker/setup-qemu-action
          with:
            platforms: all

        - name: Add msbuild to PATH
          if: runner.os == 'Windows'
          uses: microsoft/setup-msbuild

        - name: delvewheel install
          if: runner.os == 'Windows'
          run: |
            python -m pip install delvewheel cython

        - name: Build wheels
          uses: joerick/cibuildwheel@v2.16.2

        - uses: actions/upload-artifact
          with:
            path: ./wheelhouse/*.whl
            name: wheels

  buildMAC:
    if: startsWith(github.ref, 'refs/tags/20') 
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        architecture: ["universal2",  "arm64"]

    name: Python ${{ matrix.os }}
    env:
      CIBW_BEFORE_ALL: "pip install numpy cython"
      CIBW_SKIP: ${{ matrix.skip }}
      CIBW_ARCHS_MACOS: ${{ matrix.architecture }}
      CIBW_TEST_SKIP: "*"

    steps:
      - uses: actions/checkout
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python
        with:
          python-version: "3.11"

      - name: Build wheels
        uses: joerick/cibuildwheel@v2.16.2

      - uses: actions/upload-artifact
        with:
          path: ./wheelhouse/*.whl
          name: wheels
