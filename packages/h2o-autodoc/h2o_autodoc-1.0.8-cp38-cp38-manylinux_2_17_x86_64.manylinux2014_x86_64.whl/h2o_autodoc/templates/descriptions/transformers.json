{
    "BulkInteractionsTransformer": "the Interactions Transformer adds, divides, multiplies, and subtracts two numeric columns in the data to create a new feature.",
    "CatOriginalTransformer": "the Categorical Original Transformer applies an identity transformation that leaves categorical features as they are. This transformer works with models that can handle non-numeric feature values.",
    "CatTransformer": "the Categorical Transformer sorts a categorical column in lexicographical order and uses the order index created as a new feature. This transformer works with models that can handle categorical features.",
    "CVCatNumEncodeTransformer": "the Cross Validation Categorical to Numeric Encoding Transformer calculates an aggregation of a numeric column for each value in a categorical column (ex: calculate the mean Temperature for each City) and uses this aggregation as a new feature.",
    "CVCatNumEncodeF": "the Cross Validation Categorical to Numeric Encoding Transformer calculates an aggregation of a numeric column for each value in a categorical column (ex: calculate the mean Temperature for each City) and uses this aggregation as a new feature.",
    "CVCatNumEncodeDT": "the Cross Validation Categorical to Numeric Encoding Transformer calculates an aggregation of a numeric column for each value in a categorical column (ex: calculate the mean Temperature for each City) and uses this aggregation as a new feature.",
    "CVTargetEncodeTransformer": "the Cross Validation Target Encoding Transformer calculates the mean of the response column for each value in a categorical column and uses this as a new feature. Cross Validation is used to calculate mean response to prevent overfitting.",
    "CVTargetEncodeDT": "the Cross Validation Target Encoding Transformer calculates the mean of the response column for each value in a categorical column and uses this as a new feature. Cross Validation is used to calculate mean response to prevent overfitting.",
    "ClusterDistTransformer": "the Cluster Distance Transformer clusters selected numeric columns and uses the distance to a specific cluster as a new feature.",
    "ClusterIdTransformer": "the Cluster ID Transformer clusters selected numeric columns and uses the centroid assignment as a new feature.",
    "ClusterTETransformer": "the Cluster Target Encoding Transformer clusters selected numeric columns and calculates the mean of the response column for each cluster. The mean of the response is used as a new feature. Cross Validation is used to calculate mean response to prevent overfitting.",
    "DatesTransformer": "the Date Transformer retrieves any date or time values, including: Year, Quarter, Month, Day, Day of Year, Week, Weekday, Hour, Minute, Second.",
    "EwmaLagsTransformer": "the Exponentially Weighted Moving Average (EWMA) Transformer calculates the exponentially weighted moving average of target or feature lags.",
    "FrequentTransformer": "the Frequent Transformer calculates the frequency for each value in categorical column(s) and uses this as a new feature. This count can be either the raw count or the normalized count.",
    "InteractionsSimpleTransformer": "the Interactions Simple Transformer adds, divides, multiplies, and subtracts two numeric columns in the data to create a new feature. This transformation randomly selects pairs of features to transform.",
    "InteractionsTransformer": "the Interactions Transformer adds, divides, multiplies, and subtracts two numeric columns in the data to create a new feature. This transformation uses a smart search to identify which feature pairs to transform. Only interactions that improve the baseline model score are kept.",
    "InteractionsTransformer": "the Interactions Transformer adds, divides, multiplies, and subtracts two numeric columns in the data to create a new feature.",
    "IsHolidayTransformer": "the Is Holiday Transformer determines if a date column is a holiday. A boolean column indicating if the date is a holiday is added as a new feature. Creates a separate feature for holidays in the United States, United Kingdom, Germany, Mexico, and the European Central Bank. Other countries available in the python Holiday package can be added via the configuration file.",
    "LagsAggregatesTransformer": "the Lags Aggregates Transformer calculates aggregations of target/feature lags like mean(lag7, lag14, lag21) with support for mean, min, max, median, sum, skew, kurtosis, std. The aggregation is used as a new feature.",
    "LagsInteractionTransformer": "the Lags Interaction Transformer creates target/feature lags and calculates interactions between the lags (lag2 - lag1, for instance). The interaction is used as a new feature.",
    "LagsTransformer": "the Lags Transformer creates target/feature lags, possibly over groups. Each lag is used as a new feature. Lag transformers may apply to categorical (strings) features or binary/multiclass string valued targets after they have been internally numerically encoded.",
    "LexiLabelEncoderTransformer": "the Lexi Label Encoder sorts a categorical column in lexicographical order and uses the order index created as a new feature.",
    "LinearLagsRegressionTransformer": "the Linear Lags Regression Transformer trains a linear model on the target/feature lags to predict the current target/feature value.  The linear model prediction is used as a new feature.",
    "NeuralNetFeaturesTransformer": "the Neural Net Features Transformer trains a neural network on selected columns and uses the encoded columns in the lower dimensional space as new features.",
    "NumCatTETransformer": "the Numeric Categorical Target Encoding Transformer calculates the mean of the response column for several selected columns. If one of the selected columns is numeric, it is first converted to categorical by binning. The mean of the response column is used as a new feature. Cross Validation is used to calculate mean response to prevent overfitting.",
    "NumToCatTETransformer": "the Numeric to Categorical Target Encoding Transformer converts numeric columns to categoricals by binning and then calculates the mean of the response column for each group. The mean of the response for the bin is used as a new feature. Cross Validation is used to calculate mean response to prevent overfitting.",
    "NumToCatWoETransformer": "the Numeric to Categorical Weight of Evidence Transformer converts a numeric column to categorical by binning and then calculates Weight of Evidence for each bin. The Weight of Evidence is used as a new feature. Weight of Evidence measures the “strength” of a grouping for separating good and bad risk and is calculated by taking the log of the ratio of distributions for a binary response column.",
    "NumToCatWoEMonotonicTransformer": "the Numeric to Categorical Weight of Evidence Monotonic Transformer converts a numeric column to categorical by binning and then calculates Weight of Evidence for each bin. The monotonic constraint ensures the bins of values are monotonically related to the Weight of Evidence value. The Weight of Evidence is used as a new feature. Weight of Evidence measures the “strength” of a grouping for separating good and bad risk and is calculated by taking the log of the ratio of distributions for a binary response column.",
    "OHETransformer": "the One-hot Encoding transformer converts a categorical column to a series of boolean features by performing one-hot encoding. The boolean features are used as new features.",
    "OneHotEncodingTransformer": "the One-hot Encoding transformer converts a categorical column to a series of boolean features by performing one-hot encoding. The boolean features are used as new features.",
    "OriginalTransformer": "the Original Transformer applies an identity transformation to a numeric column.",
    "SortedLETransformer": "the Sorted Label Encoding Transformer sorts a categorical column by the response column and uses the order index created as a new feature.",
    "StrFeatureTransformer": "the String Feature Transformer calculates the string length, ratio of uppercase characters, ratio of special characters, or count of spaces on a selected text column and uses these string metrics as a new feature.",
    "TextBiGRUTransformer": "the Text Bidirectional GRU Transformer trains a bi-directional GRU TensorFlow model on word embeddings created from a text feature to predict the response column.  The GRU prediction is used as a new a feature.  Cross Validation is used when training the GRU model to prevent overfitting.",
    "TextCharCNNTransformer": "the Text Character CNN Transformer trains a CNN TensorFlow model on character embeddings created from a text feature to predict the response column.  The CNN prediction is used as a new a feature.  Cross Validation is used when training the CNN model to prevent overfitting.",
    "TextClustDistTransformer": "the Text Cluster Distance Transformer clusters a TF-IDF matrix created from a text feature and uses the distance to a specific cluster as a new feature.",
    "TextClustTETransformer": "the Text Cluster Target Encoding Transformer clusters a TF-IDF matrix created from a text feature. The mean of the response is calculated for each cluster and this is used as a new feature. Cross Validation is used to calculate mean response to prevent overfitting..",
    "TextCNNTransformer": "the Text CNN Transformer trains a CNN TensorFlow model on word embeddings created from a text feature to predict the response column. The CNN prediction is used as a new a feature. Cross Validation is used when training the CNN model to prevent overfitting.",
    "TextLinModelTransformer": "the Text Linear Model Transformer trains a linear model on a TF-IDF matrix created from a text feature to predict the response column. The linear model prediction is used as a new feature. Cross Validation is used when training the linear model to prevent overfitting.",
    "TextTransformer": "the Text Transformer tokenizes a text column and creates a TFIDF matrix (term frequency-inverse document frequency) or count (count of the word) matrix. This may be followed by dimensionality reduction using truncated SVD. Selected components of the TF-IDF/Count matrix are used as new features.",
    "TruncSVDNumTransformer": "the Truncated SVD Transformer trains a Truncated SVD model on selected numeric columns and uses the components of the truncated SVD matrix as new features.",
    "WeightOfEvidenceTransformer": "the Weight of Evidence Transformer calculates Weight of Evidence for each value in categorical column(s). The Weight of Evidence is used as a new feature. Weight of Evidence measures the “strength” of a grouping for separating good and bad risk and is calculated by taking the log of the ratio of distributions for a binary response column.",
    "DateTimeOriginalTransformer": "the Date Time Original Transformer retrieves date and time values such as year, quarter, month, day, day of the year, week, weekday, hour, minute, and second values.",
    "DateOriginalTransformer": "the Date Original Transformer retrieves date values such as year, quarter, month, day, day of the year, week, and weekday values."
}
