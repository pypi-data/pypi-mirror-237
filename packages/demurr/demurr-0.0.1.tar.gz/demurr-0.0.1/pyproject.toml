[project]
name = "demurr"
requires-python = ">=3.10"
authors = [{ "name" = "Avery Warddhana", "email" = "them+pypi@nullablevo.id.au" }]
keywords = ["demangling", "msvc"]
classifiers = ["Topic :: Software Development :: Compilers"]
repository = "https://github.com/nullableVoidPtr/demurr"
readme = "README.md"
dynamic = ["version", "description"]

[build-system]
requires = ["py-build-cmake~=0.1.8", "pybind11", "pybind11-stubgen"]
build-backend = "py_build_cmake.build"

[tool.py-build-cmake.module]
directory = "python-src"

[tool.py-build-cmake.sdist]
include = ["CMakeLists.txt", "cmake/*.cmake", "src/**/*.cpp", "src/include/**/*.h", "src/third_party/"]
exclude = []

[tool.py-build-cmake.cmake]
minimum_version = "3.17"
build_type = "Release"
source_path = "." # Containing CMakeLists.txt
options = { "WITH_PY_STUBS:BOOL" = "On" }
args = ["-Wdev"]
build_args = ["-j"]
build_tool_args = []
install_args = ["--verbose"]
install_components = ["python_modules"]
env = {}

[tool.py-build-cmake.linux.cmake] # Linux-specific options
generator = "Ninja Multi-Config"
config = ["Debug", "Release"]
options = { "CMAKE_DEBUG_POSTFIX" = "_d" }
env = { "CMAKE_PREFIX_PATH" = "${HOME}/.local" }

[tool.py-build-cmake.mac.cmake] # macOS-specific options
generator = "Ninja Multi-Config"
config = ["Debug", "Release"]
options = { "CMAKE_DEBUG_POSTFIX" = "_d" }

[tool.py-build-cmake.windows.cmake] # Windows-specific options
config = ["RelWithDebInfo", "Release"]
[tool.py-build-cmake.windows.cmake.options]
CMAKE_CXX_FLAGS_RELWITHDEBINFO = "/Zi /Ob0 /Od /RTC1 /wd4244 /wd4267"
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO = "/INCREMENTAL:NO /OPT:REF /DEBUG:FULL"
CMAKE_RELWITHDEBINFO_POSTFIX = "_d"

[tool.py-build-cmake.stubgen]
args = ["-v"]

[tool.cibuildwheel]
skip = ["*-win32", "*-manylinux_i686"]