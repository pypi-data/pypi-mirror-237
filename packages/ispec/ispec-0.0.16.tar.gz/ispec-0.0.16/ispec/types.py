# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_types.ipynb.

# %% auto 0
__all__ = ['AttrLvl', 'AttrSpec', 'ArgsTuple', 'AttrSrcs', 'AttrSrcsQ', 'AttrPrefQ', 'isargvalnil', 'isdefarg']

# %% ../nbs/00_types.ipynb 4
from inspect import Parameter
from typing import Any, Type, List, Dict, Tuple, Union,  Optional, TypeAlias
from atyp import AnyQ

# %% ../nbs/00_types.ipynb 6
AttrLvl: TypeAlias = Union[int, Type]
AttrSpec: TypeAlias = Union[List[str], Tuple[str], Dict[str, AnyQ]]
ArgsTuple: TypeAlias = Tuple[Tuple[str, Any], ...]

# %% ../nbs/00_types.ipynb 7
AttrSrcs: TypeAlias = Tuple['AttrSrc', ...]
AttrSrcsQ: TypeAlias = Optional[AttrSrcs]
AttrPrefQ: TypeAlias = Optional[Union['AttrPref', AttrSrcs]]

# %% ../nbs/00_types.ipynb 9
from chck import (
    isp, iscls, isint, isstr, islist, isdict, istuple, 
    islistordict, isiter, isset, isallstr, isdunder, isself, ispself, ispcls,
    isempty, ispempty, iskwonly, ispkwonly, iskwotype
)

# %% ../nbs/00_types.ipynb 10
def isargvalnil(v: Any) -> bool:
    '''Checks if `v` of an argument is `Parameter.empty`, `Parameter.KEYWORD_ONLY`, or `dataclasses.KW_ONLY`.'''
    return (iskwotype(v) or isempty(v) or iskwonly(v))

# %% ../nbs/00_types.ipynb 11
def isdefarg(p: Union[Any, Tuple[str, Any], Parameter]) -> bool:
    '''Checks if `p` is a default argument.'''
    if isp(p): 
        return not isargvalnil(p.default)
    elif istuple(p) and len(p) == 2:
        arg, val = p
        return not isargvalnil(val)
    return not isargvalnil(p)    
