# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RPugfoc0uJntdQIjK-3BmfvevFEcZJje
"""

import numpy as np
import pandas as pd
def CCC(x,y):
  df=pd.DataFrame({'X':x, 'Y':y})
  df['rank_X']=df['X'].rank()
  df['rank_Y']=df['Y'].rank()
  df=df.sort_values(by='rank_X')
  df.head()
  ### li= No.of j, such that y(j)>=y(i).
  new_column_name = 'li'
  new_column_data = []  # Empty list to store new values
  for i in range(0,len(df)):
    l=sum(1 for value in df['Y'] if value >=df.iloc[i,1] )
    new_column_data.append(l)
  df[new_column_name] = new_column_data
  ### Introducting ri...ri= No.of j, such that y(j)<=y(i).
  new_column_name = 'ri'
  new_column_data = []  # Empty list to store new values
  for i in range(0,len(df)):
    l=sum(1 for value in df['Y'] if value <=df.iloc[i,1] )
    new_column_data.append(l)
  df[new_column_name] = new_column_data
  diff=df['ri'].diff().abs().sum()
  coeff=1-((len(df)*diff)/(2*(df['li']*(len(df)-df['li'])).sum()))
  n=len(x)
  z_i=0
  z=((n**0.5)*(coeff-z_i))/((2/5)**0.5)
  from scipy.stats import norm
  cdf_values = norm.cdf(z, loc=0, scale=1)
  p_value=1-cdf_values
  return coeff, p_value