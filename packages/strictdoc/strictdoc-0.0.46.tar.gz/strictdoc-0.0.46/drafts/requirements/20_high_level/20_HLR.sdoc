[DOCUMENT]
TITLE: [L2] Requirements Tool specification
REQ_PREFIX: SDOC-SSS-

[SECTION]
UID: SECTION-RTS-Requirements-management
TITLE: Requirements management

[REQUIREMENT]
UID: SDOC-SSS-4
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-20
TITLE: Requirements CRUD
STATEMENT: >>>
The Requirements Tool shall support the CRUD operations:

- Creating a requirement.
- Reading (viewing) a requirement.
- Updating a requirement.
- Deleting a requirement.
<<<

[REQUIREMENT]
UID: SDOC-SSS-61
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: ZEP-10
- TYPE: Parent
  VALUE: ZEP-14
TITLE: Minimal requirement field set
STATEMENT: >>>
The Requirements Tool shall support at least the following requirement field set:

- UID
- STATUS
- LINKS (references to other requirements)
- TITLE
- STATEMENT
- RATIONALE
- COMMENT.
<<<

[REQUIREMENT]
UID: SDOC-SSS-62
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: ZEP-3
- TYPE: Parent
  VALUE: SDOC-RMC-23
TITLE: Custom fields
STATEMENT: >>>
The requirements tool shall support configuring a requirement item with an arbitrary set of fields.

NOTE: Examples of typical fields include: UID, Title, Statement, Rationale, Comment. Other fields that are used very often are: Status, Tags, Criticality level, Priority, etc.
<<<
RATIONALE: >>>
The tool shall not constrain a user in which fields they are able to use for their projects.
<<<

[REQUIREMENT]
UID: SDOC-SSS-64
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-21
- TYPE: Parent
  VALUE: ZEP-13
TITLE: Structuring requirements in documents

[REQUIREMENT]
UID: SDOC-SSS-5
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-1
TITLE: Move document nodes within document
STATEMENT: >>>
The Requirements Tool shall allow moving nodes (sections, requirements) within the containing document.
<<<

[REQUIREMENT]
UID: SDOC-SSS-70
STATUS: Active
TITLE: Move nodes between documents
STATEMENT: >>>
The Requirements Tool shall allow moving nodes (sections, requirements) between documents.
<<<

[REQUIREMENT]
UID: SDOC-SSS-6
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: ZEP-8
- TYPE: Parent
  VALUE: SDOC-RMC-1
TITLE: Auto-provision of Requirement UIDs
STATEMENT: >>>
The Requirements Tool shall provide controls for automatic generation of requirements UIDs.
<<<
RATIONALE: >>>
When a document is large, it becomes harder to manage the assignment of the new requirements identifiers by manually exploring which requirement UID has not been assigned yet. The provision of automatically generated UIDs is a convenience feature that improves the user experience significantly.
<<<

[REQUIREMENT]
UID: SDOC-SSS-7
REFS:
- TYPE: Parent
  VALUE: ZEP-4
TITLE: Link requirements together

[REQUIREMENT]
UID: SDOC-SSS-8
STATUS: Backlog
REFS:
- TYPE: Parent
  VALUE: ZEP-5
TITLE: Multiple link roles
STATEMENT: >>>
The Requirements Tool shall support the link roles.

Example of roles for a child-to-parent link: "verifies", "implements", "satisfies", etc.
<<<
RATIONALE: >>>
Different industries maintain custom conventions for naming the relations between requirements and other nodes such as tests or other artefacts.
<<<

[REQUIREMENT]
UID: SDOC-SSS-71
STATUS: Backlog
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-57
TITLE: Reverse parent links
STATEMENT: >>>
The Requirements Tool shall support the Reverse Parent relationship.
<<<

[REQUIREMENT]
UID: SDOC-SSS-47
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-7
TITLE: Prevent cycles between nodes
STATEMENT: >>>
The Requirements Tool shall provide a validation mechanism that prevents requirement links from forming cycles.
<<<

[REQUIREMENT]
UID: SDOC-SSS-57
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-37
TITLE: Requirement syntax validation (e.g. EARS)

[/SECTION]

[SECTION]
UID: SECTION-RTS-Documentation-management
TITLE: Documentation management

[REQUIREMENT]
UID: SDOC-SSS-3
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-22
TITLE: Documents CRUD

[REQUIREMENT]
UID: SDOC-SSS-51
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-21
TITLE: Documents with nested sections/chapters structure

[REQUIREMENT]
UID: SDOC-SSS-52
REFS:
- TYPE: Parent
  VALUE: ZEP-1
TITLE: Assembling documents from fragments

[REQUIREMENT]
UID: SDOC-SSS-53
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-33
- TYPE: Parent
  VALUE: SDOC-RMC-35
TITLE: Document meta information (UID, version, authors, signatures, etc)

[REQUIREMENT]
UID: SDOC-SSS-63
REFS:
- TYPE: Parent
  VALUE: ZEP-9
TITLE: Text formatting capabilities

[/SECTION]

[SECTION]
UID: SECTION-SSSS-Performance
TITLE: Performance

[REQUIREMENT]
UID: SDOC-SSS-13
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-32
TITLE: Handling at least 10000+ requirements
STATEMENT: >>>
The Requirements Tool shall support requirement trees with at least 10000 requirements.
<<<

[REQUIREMENT]
UID: SDOC-SSS-14
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-31
TITLE: Handling documentation packages of at least 100 documents
STATEMENT: >>>
The Requirements Tool shall be able to handle documentation packages of at least 100 documents without significant performance degradation.
<<<

[/SECTION]

[SECTION]
UID: SECTION-SSSS-Existing-workflows
TITLE: Existing workflows

[REQUIREMENT]
UID: SDOC-SSS-73
STATUS: Active
TITLE: Excel-like viewing and editing of requirements
STATEMENT: >>>
The Requirements Tool shall provide an Excel-like user interface for viewing and editing requirements.

NOTE: This interface does not have to be the only or a default interface.
<<<
RATIONALE: >>>
As recognized by the parent requirement, some requirements-based workflows are naturally easier when the requirements content is presented in a form of a table, as opposed to a document with a nested chapter structure.
<<<

[REQUIREMENT]
UID: SDOC-SSS-56
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-1
TITLE: 1000-feet view
STATEMENT: >>>
The Requirements Tool shall provide a "1000-feet view" kind of requirements visualization.
<<<
RATIONALE: >>>
Compared to the other visualizations, such a visualization helps to "see the forest for the trees". Seeing requirements and their sections all at once helps to visualize groups of requirements and better understand the relationships between them.
<<<

[REQUIREMENT]
UID: SDOC-SSS-28
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-3
- TYPE: Parent
  VALUE: SDOC-RMC-39
TITLE: Traceability matrices
STATEMENT: >>>
The Requirements Tool shall support generation of traceability matrices.
<<<

[REQUIREMENT]
UID: SDOC-SSS-48
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-39
- TYPE: Parent
  VALUE: SDOC-RMC-57
TITLE: Compliance matrices
STATEMENT: >>>
The Requirements Tool shall allow generating a Compliance Matrix document.
<<<

[REQUIREMENT]
UID: SDOC-SSS-29
TITLE: Requirements coverage

[REQUIREMENT]
UID: SDOC-SSS-49
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-39
- TYPE: Parent
  VALUE: SDOC-RMC-41
TITLE: Progress report
STATEMENT: >>>
The Requirements Tool shall allow generating a Progress Report document.

NOTE: A progress report document shall include at least the following Key Performance Indicators.

Project-level KPIs:

- Total number of requirements
- Total number of requirements without parent (excluding top-level and derived)
- Total number of TBD/TBC
- Total number of requirements without rationale
- Tags breakdown

Document-level KPIs: the same but per document.
<<<

[/SECTION]

[SECTION]
UID: SECTION-SSSS-Implementation-suggestions
TITLE: Implementation suggestions

[REQUIREMENT]
UID: SDOC-SSS-30
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-10
- TYPE: Parent
  VALUE: SDOC-RMC-11
TITLE: Static HTML export
STATEMENT: >>>
The Requirements Tool shall support generation of documentation to static HTML.
<<<
RATIONALE: >>>
A static HTML export capability enables:

- Viewing requirements in browsers without any additional software.
- Exchanging HTML content as zip between users.
- Publishing HTML content via static website hosting providers (GitHub and GitLab Pages, Read the Docs, Heroku, etc.).
<<<

[REQUIREMENT]
UID: SDOC-SSS-31
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-36
- TYPE: Parent
  VALUE: SDOC-RMC-14
TITLE: Web interface
STATEMENT: >>>
The Requirements Tool shall provide a web interface.
<<<

[REQUIREMENT]
UID: SDOC-SSS-32
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-11
- TYPE: Parent
  VALUE: SDOC-RMC-49
TITLE: Command-line interface
STATEMENT: >>>
The Requirements Tool shall provide a command line interface (CLI).
<<<

[REQUIREMENT]
UID: SDOC-SSS-68
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-47
TITLE: Web API interface
STATEMENT: >>>
The Requirements Tool shall provide an API interface.
<<<

[REQUIREMENT]
UID: SDOC-SSS-33
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-33
- TYPE: Parent
  VALUE: SDOC-RMC-34
- TYPE: Parent
  VALUE: SDOC-RMC-17
- TYPE: Parent
  VALUE: SDOC-RMC-56
TITLE: Version control (Git)
STATEMENT: >>>
The Requirements Tool shall support the software version control systems (e.g., Git).
<<<
RATIONALE: >>>
- Git allows precise tracking of the changes to the documentation.
- Requirements/documentation content can be release-tagged.
- The "Time machine" function: ability to review the older state of the documentation/requirements tree.
<<<

[REQUIREMENT]
UID: SDOC-SSS-67
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-45
TITLE: Support major operating systems
STATEMENT: >>>
The Requirements Tool shall support at least the following operating systems:

- Linux
- Windows
- macOS.
<<<

[REQUIREMENT]
UID: SDOC-SSS-69
STATUS: Active
TITLE: Conservative languages for implementation
STATEMENT: >>>
The Requirements Tool shall be implemented using the popular programming languages.

NOTE: Examples of the most popular programming languages:

- Java
- C++
- Python
- JavaScript
<<<
RATIONALE: >>>
Choosing a less popular programming language can limit the long-term maintainability of the tool.
<<<
COMMENT: >>>
Examples of less popular programming languages, with all due respect to their powerful features: Haskell, F#, Ada, etc.
<<<

[REQUIREMENT]
UID: SDOC-SSS-34
STATUS: Draft
TITLE: Multiple repositories

[/SECTION]

[SECTION]
UID: SECTION-RTS-Text-based-requirements-language
TITLE: Text-based requirements language (optional)

[FREETEXT]
Note: Not all requirements tools must be text-based. But when they are, the
following requirements apply.
[/FREETEXT]

[REQUIREMENT]
UID: SDOC-SSS-55
STATUS: Active
TITLE: Strict type-safe grammar
STATEMENT: >>>
The Requirements Tool shall provide type safety for its text language.
<<<

[REQUIREMENT]
UID: SDOC-SSS-54
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: ZEP-2
- TYPE: Parent
  VALUE: SDOC-RMC-10
TITLE: Machine-readable format
STATEMENT: >>>
The Requirement Tool's text language shall be machine-readable.
<<<

[/SECTION]

[SECTION]
UID: SECTION-RTS-Requirements-and-source-code
TITLE: Requirements and source code

[REQUIREMENT]
UID: SDOC-SSS-72
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-2
TITLE: Traceability between requirements and source code
STATEMENT: >>>
The Requirements Tool shall support bi-directional tracing between requirements content and implementation source code.

NOTE: The Requirements Tool does not necessarily have to implement the complete tracing process. It may delegate parts of the traceability task to other tools, e.g., Doxygen, Lobster.
<<<

[/SECTION]

[SECTION]
UID: SECTION-RTS-Requirements-exchange-formats-export-import
TITLE: Requirements exchange formats (export/import)

[REQUIREMENT]
UID: SDOC-SSS-58
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-13
- TYPE: Parent
  VALUE: ZEP-6
- TYPE: Parent
  VALUE: SDOC-RMC-10
TITLE: ReqIF export/import
STATEMENT: >>>
The Requirements Tool shall support exporting/importing requirements content from/to ReqIF format.
<<<
RATIONALE: >>>
ReqIF is a standard for exchanging requirements. There is currently no other standard of a higher maturity.
<<<

[REQUIREMENT]
UID: SDOC-SSS-59
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-13
- TYPE: Parent
  VALUE: ZEP-7
TITLE: CSV export/import
STATEMENT: >>>
The Requirements Tool shall support exporting/importing requirements content from/to CSV.
<<<

[REQUIREMENT]
UID: SDOC-SSS-60
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-13
TITLE: Excel export/import
STATEMENT: >>>
The Requirements Tool shall support exporting/importing requirements content from/to Excel.
<<<

[/SECTION]

[SECTION]
UID: SECTION-RTS-Requirements-collaboration
TITLE: Requirements collaboration

[REQUIREMENT]
UID: SDOC-SSS-65
STATUS: Draft
TITLE: Support user accounts

[REQUIREMENT]
UID: SDOC-SSS-66
STATUS: Draft
TITLE: Send notifications about updated requirements

[/SECTION]

[SECTION]
UID: SECTION-SSSS-Development-process
TITLE: Development process

[REQUIREMENT]
UID: SDOC-SSS-50
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-52
- TYPE: Parent
  VALUE: ZEP-15
- TYPE: Parent
  VALUE: SDOC-RMC-24
TITLE: Self-hosted requirements
STATEMENT: >>>
The Requirements Tool's requirements shall be developed and stored using the Requirements Tool itself.
<<<

[/SECTION]

[SECTION]
UID: SECTION-SSSS-Licensing-and-distribution
TITLE: Licensing and distribution

[REQUIREMENT]
UID: SDOC-SSS-38
STATUS: Active
REFS:
- TYPE: Parent
  VALUE: SDOC-RMC-51
TITLE: Open source
STATEMENT: >>>
The Requirements Tool's source code shall be publicly available, e.g., hosted on a code hosting platform such as GitHub or GitLab.
<<<

[REQUIREMENT]
UID: SDOC-SSS-39
STATUS: Active
TITLE: Only open source dependencies
STATEMENT: >>>
The Requirement Tool's source code shall be based on open source software components.
<<<

[REQUIREMENT]
UID: SDOC-SSS-40
TITLE: Free

[/SECTION]
