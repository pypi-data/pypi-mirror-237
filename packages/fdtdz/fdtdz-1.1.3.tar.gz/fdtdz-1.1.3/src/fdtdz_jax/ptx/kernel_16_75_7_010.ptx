//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[192]
)
{
	.reg .pred 	%p<408>;
	.reg .f32 	%f<513>;
	.reg .b32 	%r<1796>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<484>;


	mov.b64 	%rd30, _ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd30;
	ld.param.v2.u32 	{%r650, %r651}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r652, %r653}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r654, %r655}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r656, %r657}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r658, %r659}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r660, %r661}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r662, %r663}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	ld.param.v2.u32 	{%r664, %r665}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+56];
	ld.param.v2.u32 	{%r666, %r667}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+64];
	ld.param.v2.u32 	{%r668, %r669}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+72];
	ld.param.v2.u32 	{%r670, %r671}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+80];
	ld.param.v2.u32 	{%r672, %r673}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+88];
	ld.param.v2.u32 	{%r674, %r675}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+96];
	mov.u32 	%r31, %tid.y;
	mov.u32 	%r32, %tid.z;
	mov.u32 	%r33, %ctaid.y;
	mov.u32 	%r34, %ctaid.z;
	mov.u32 	%r676, 32;
	sub.s32 	%r35, %r676, %r657;
	mov.u32 	%r36, %tid.x;
	setp.le.s32 	%p28, %r35, %r36;
	add.s32 	%r677, %r663, -1;
	add.s32 	%r678, %r661, %r655;
	add.s32 	%r679, %r678, %r656;
	add.s32 	%r680, %r679, 1;
	mad.lo.s32 	%r681, %r677, %r662, %r680;
	mul.lo.s32 	%r682, %r650, %r652;
	shl.b32 	%r37, %r682, 1;
	shl.b32 	%r38, %r682, 2;
	div.s32 	%r683, %r681, %r38;
	add.s32 	%r684, %r683, 1;
	mul.lo.s32 	%r685, %r684, %r656;
	mul.lo.s32 	%r686, %r651, %r653;
	shl.b32 	%r39, %r686, 1;
	div.s32 	%r687, %r685, %r39;
	add.s32 	%r688, %r687, 1;
	mul.lo.s32 	%r40, %r688, %r655;
	ld.param.u64 	%rd31, [%rd1+184];
	cvta.to.global.u64 	%rd2, %rd31;
	mad.lo.s32 	%r691, %r652, %r34, %r33;
	mad.lo.s32 	%r692, %r691, %r651, %r32;
	mad.lo.s32 	%r693, %r692, %r650, %r31;
	shl.b32 	%r41, %r693, 5;
	add.s32 	%r1596, %r41, %r36;
	mul.lo.s32 	%r694, %r686, %r682;
	shl.b32 	%r45, %r694, 5;
	mov.u32 	%r695, 8;
	sub.s32 	%r696, %r695, %r664;
	add.s32 	%r46, %r696, %r665;
	sub.s32 	%r697, %r695, %r666;
	add.s32 	%r47, %r697, %r667;
	sub.s32 	%r48, %r669, %r668;
	mul.lo.s32 	%r698, %r663, %r48;
	mul.lo.s32 	%r699, %r698, %r47;
	mul.lo.s32 	%r700, %r699, %r46;
	mul.lo.s32 	%r49, %r700, 3;
	setp.ge.s32 	%p29, %r1596, %r49;
	@%p29 bra 	$L__BB0_9;

	add.s32 	%r701, %r667, 8;
	sub.s32 	%r702, %r701, %r666;
	mul.lo.s32 	%r703, %r663, %r702;
	add.s32 	%r704, %r665, 8;
	sub.s32 	%r705, %r704, %r664;
	mul.lo.s32 	%r706, %r703, %r705;
	mul.lo.s32 	%r707, %r706, %r48;
	not.b32 	%r708, %r36;
	mad.lo.s32 	%r709, %r707, 3, %r708;
	sub.s32 	%r710, %r709, %r41;
	mul.lo.s32 	%r711, %r686, %r650;
	mul.lo.s32 	%r712, %r711, %r652;
	shl.b32 	%r713, %r712, 5;
	div.u32 	%r50, %r710, %r713;
	add.s32 	%r714, %r50, 1;
	and.b32  	%r1593, %r714, 3;
	setp.eq.s32 	%p30, %r1593, 0;
	mov.u32 	%r1594, %r1596;
	@%p30 bra 	$L__BB0_6;

	mov.u32 	%r1594, %r1596;

$L__BB0_5:
	.pragma "nounroll";
	mul.wide.s32 	%rd32, %r1594, 4;
	add.s64 	%rd33, %rd2, %rd32;
	mov.u32 	%r715, 0;
	st.global.u32 	[%rd33], %r715;
	add.s32 	%r1594, %r1594, %r45;
	add.s32 	%r1593, %r1593, -1;
	setp.ne.s32 	%p31, %r1593, 0;
	@%p31 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p32, %r50, 3;
	@%p32 bra 	$L__BB0_9;

	mul.wide.s32 	%rd36, %r45, 4;

$L__BB0_8:
	mul.wide.s32 	%rd34, %r1594, 4;
	add.s64 	%rd35, %rd2, %rd34;
	mov.u32 	%r716, 0;
	st.global.u32 	[%rd35], %r716;
	add.s64 	%rd37, %rd35, %rd36;
	st.global.u32 	[%rd37], %r716;
	add.s32 	%r717, %r1594, %r45;
	add.s32 	%r718, %r717, %r45;
	add.s64 	%rd38, %rd37, %rd36;
	st.global.u32 	[%rd38], %r716;
	add.s32 	%r719, %r718, %r45;
	add.s64 	%rd39, %rd38, %rd36;
	st.global.u32 	[%rd39], %r716;
	add.s32 	%r1594, %r719, %r45;
	setp.lt.s32 	%p33, %r1594, %r49;
	@%p33 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd40, [%rd1+104];
	cvta.to.global.u64 	%rd3, %rd40;
	sub.s32 	%r720, %r656, %r37;
	div.s32 	%r721, %r720, %r39;
	mul.lo.s32 	%r722, %r721, %r655;
	sub.s32 	%r723, %r722, %r37;
	sub.s32 	%r724, %r655, %r39;
	mul.lo.s32 	%r725, %r724, %r652;
	mul.lo.s32 	%r59, %r650, 384;
	add.s32 	%r726, %r59, %r59;
	add.s32 	%r727, %r726, 128;
	mul.lo.s32 	%r729, %r686, 768;
	mul.lo.s32 	%r730, %r725, %r727;
	mad.lo.s32 	%r60, %r729, %r723, %r730;
	bra.uni 	$L__BB0_10;

$L__BB0_597:
	mov.f32 	%f500, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f500;
  cvt.rn.f16.f32 high, %f500;
  mov.b32 %r1566, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd477, %r1596, 4;
	add.s64 	%rd478, %rd3, %rd477;
	st.global.u32 	[%rd478], %r1566;
	add.s32 	%r1596, %r1596, %r45;

$L__BB0_10:
	setp.lt.s32 	%p34, %r1596, %r60;
	@%p34 bra 	$L__BB0_597;

	ld.param.u64 	%rd41, [%rd1+144];
	cvta.to.global.u64 	%rd5, %rd41;
	ld.param.u64 	%rd42, [%rd1+112];
	cvta.to.global.u64 	%rd6, %rd42;
	ld.param.u64 	%rd43, [%rd1+152];
	cvta.to.global.u64 	%rd7, %rd43;
	mad.lo.s32 	%r1632, %r650, %r33, %r31;
	mul.lo.s32 	%r69, %r651, %r34;
	add.s32 	%r70, %r69, %r32;
	setp.ge.s32 	%p35, %r1632, %r655;
	@%p35 bra 	$L__BB0_65;

	mov.u32 	%r731, 31;
	sub.s32 	%r732, %r731, %r36;
	setp.gt.s32 	%p36, %r35, %r36;
	selp.b32 	%r733, %r36, %r732, %p36;
	shl.b32 	%r734, %r733, 2;
	mov.u32 	%r735, 2;
	sub.s32 	%r71, %r734, %r658;
	shl.b32 	%r736, %r657, 2;
	mov.u32 	%r737, 128;
	sub.s32 	%r72, %r737, %r736;
	sub.s32 	%r738, %r735, %r658;
	add.s32 	%r73, %r738, %r734;
	ld.param.f32 	%f83, [%rd1+136];
	rcp.rn.f32 	%f1, %f83;
	sub.s32 	%r74, %r665, %r664;
	sub.s32 	%r75, %r667, %r666;
	add.s32 	%r76, %r665, -1;
	add.s32 	%r77, %r667, -1;
	add.s32 	%r78, %r669, -1;
	mul.lo.s32 	%r739, %r656, %r655;
	shl.b32 	%r79, %r739, 6;
	add.s32 	%r80, %r655, -1;
	selp.f32 	%f2, 0f00000000, 0f3F800000, %p36;
	add.s32 	%r81, %r71, 1;
	add.s32 	%r82, %r73, 1;
	shl.b32 	%r83, %r36, 1;
	or.b32  	%r84, %r83, 1;
	shr.u32 	%r740, %r84, 31;
	add.s32 	%r741, %r84, %r740;
	shr.s32 	%r86, %r741, 1;
	and.b32  	%r742, %r741, -2;
	sub.s32 	%r743, %r84, %r742;
	add.s32 	%r85, %r743, %r79;
	rem.s32 	%r802, %r81, %r72;
	add.s32 	%r803, %r802, %r72;
	rem.s32 	%r804, %r803, %r72;
	rem.s32 	%r805, %r82, %r72;
	add.s32 	%r806, %r805, %r72;
	rem.s32 	%r807, %r806, %r72;
	mov.u32 	%r1597, %r1632;

$L__BB0_13:
	setp.ge.s32 	%p37, %r70, %r656;
	@%p37 bra 	$L__BB0_64;

	setp.ge.s32 	%p38, %r1597, %r670;
	setp.lt.s32 	%p39, %r1597, %r671;
	and.pred  	%p1, %p39, %p38;
	setp.lt.s32 	%p40, %r1597, %r665;
	setp.ge.s32 	%p41, %r1597, %r664;
	and.pred  	%p2, %p40, %p41;
	selp.b32 	%r744, %r1597, %r76, %p40;
	setp.lt.s32 	%p42, %r1597, %r664;
	selp.b32 	%r745, %r664, %r744, %p42;
	sub.s32 	%r746, %r745, %r664;
	add.s32 	%r88, %r80, %r1597;
	rem.s32 	%r747, %r71, %r72;
	add.s32 	%r748, %r747, %r72;
	rem.s32 	%r89, %r748, %r72;
	rem.s32 	%r749, %r73, %r72;
	add.s32 	%r750, %r749, %r72;
	rem.s32 	%r90, %r750, %r72;
	setp.lt.s32 	%p43, %r89, %r669;
	sub.s32 	%r91, %r89, %r668;
	setp.lt.s32 	%p44, %r89, %r668;
	selp.b32 	%r751, %r89, %r78, %p43;
	selp.b32 	%r752, %r668, %r751, %p44;
	sub.s32 	%r92, %r752, %r668;
	setp.lt.s32 	%p45, %r90, %r669;
	sub.s32 	%r93, %r90, %r668;
	setp.lt.s32 	%p46, %r90, %r668;
	selp.b32 	%r753, %r90, %r78, %p45;
	selp.b32 	%r754, %r668, %r753, %p46;
	sub.s32 	%r94, %r754, %r668;
	sub.s32 	%r755, %r1597, %r664;
	mul.lo.s32 	%r95, %r755, %r75;
	mul.lo.s32 	%r96, %r746, %r75;
	add.s32 	%r756, %r755, %r74;
	mul.lo.s32 	%r97, %r756, %r75;
	add.s32 	%r757, %r746, %r74;
	mul.lo.s32 	%r98, %r757, %r75;
	add.s32 	%r758, %r756, %r74;
	mul.lo.s32 	%r99, %r758, %r75;
	add.s32 	%r759, %r757, %r74;
	mul.lo.s32 	%r100, %r759, %r75;
	mov.u32 	%r1598, %r70;

$L__BB0_15:
	setp.ge.s32 	%p47, %r1598, %r672;
	and.pred  	%p48, %p1, %p47;
	setp.lt.s32 	%p49, %r1598, %r673;
	and.pred  	%p3, %p49, %p48;
	setp.ge.s32 	%p50, %r1598, %r666;
	and.pred  	%p51, %p2, %p50;
	setp.lt.s32 	%p52, %r1598, %r667;
	and.pred  	%p4, %p52, %p51;
	sub.s32 	%r102, %r1598, %r666;
	selp.b32 	%r760, %r1598, %r77, %p52;
	setp.lt.s32 	%p53, %r1598, %r666;
	selp.b32 	%r761, %r666, %r760, %p53;
	sub.s32 	%r103, %r761, %r666;
	mul.lo.s32 	%r104, %r1598, %r655;
	add.s32 	%r105, %r104, %r1597;
	shl.b32 	%r106, %r105, 6;
	setp.ge.s32 	%p54, %r89, %r674;
	and.pred  	%p55, %p3, %p54;
	setp.lt.s32 	%p56, %r89, %r675;
	and.pred  	%p57, %p56, %p55;
	setp.ge.s32 	%p58, %r89, %r668;
	and.pred  	%p59, %p4, %p58;
	and.pred  	%p5, %p43, %p59;
	setp.ge.s32 	%p61, %r90, %r668;
	and.pred  	%p62, %p4, %p61;
	and.pred  	%p6, %p45, %p62;
	mul.wide.s32 	%rd44, %r105, 4;
	add.s64 	%rd8, %rd7, %rd44;
	ld.global.f32 	%f84, [%rd8];
	fma.rn.f32 	%f3, %f84, 0f3F000000, %f1;
	and.pred  	%p7, %p36, %p57;
	not.pred 	%p65, %p7;
	mov.f32 	%f501, %f2;
	@%p65 bra 	$L__BB0_19;

	@%p5 bra 	$L__BB0_18;
	bra.uni 	$L__BB0_17;

$L__BB0_18:
	add.s32 	%r764, %r102, %r95;
	mad.lo.s32 	%r765, %r764, %r48, %r91;
	mul.wide.s32 	%rd47, %r765, 4;
	add.s64 	%rd48, %rd5, %rd47;
	ld.global.f32 	%f501, [%rd48];
	bra.uni 	$L__BB0_19;

$L__BB0_17:
	add.s32 	%r762, %r103, %r96;
	mad.lo.s32 	%r763, %r762, %r48, %r92;
	mul.wide.s32 	%rd45, %r763, 4;
	add.s64 	%rd46, %rd5, %rd45;
	ld.global.f32 	%f501, [%rd46];

$L__BB0_19:
	setp.lt.s32 	%p67, %r90, %r675;
	setp.ge.s32 	%p68, %r90, %r674;
	and.pred  	%p69, %p3, %p68;
	and.pred  	%p70, %p67, %p69;
	and.pred  	%p8, %p36, %p70;
	not.pred 	%p71, %p8;
	mov.f32 	%f502, %f2;
	@%p71 bra 	$L__BB0_23;

	@%p6 bra 	$L__BB0_22;
	bra.uni 	$L__BB0_21;

$L__BB0_22:
	add.s32 	%r768, %r102, %r95;
	mad.lo.s32 	%r769, %r768, %r48, %r93;
	mul.wide.s32 	%rd51, %r769, 4;
	add.s64 	%rd52, %rd5, %rd51;
	ld.global.f32 	%f502, [%rd52];
	bra.uni 	$L__BB0_23;

$L__BB0_21:
	add.s32 	%r766, %r103, %r96;
	mad.lo.s32 	%r767, %r766, %r48, %r94;
	mul.wide.s32 	%rd49, %r767, 4;
	add.s64 	%rd50, %rd5, %rd49;
	ld.global.f32 	%f502, [%rd50];

$L__BB0_23:
	div.rn.f32 	%f86, %f502, %f3;
	div.rn.f32 	%f85, %f501, %f3;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f85;
  cvt.rn.f16.f32 high, %f86;
  mov.b32 %r770, {low,high};}

	// end inline asm
	shl.b32 	%r107, %r105, 5;
	add.s32 	%r771, %r107, %r36;
	shl.b32 	%r772, %r771, 2;
	add.s32 	%r773, %r79, %r772;
	mul.wide.s32 	%rd53, %r773, 4;
	add.s64 	%rd54, %rd6, %rd53;
	st.global.u32 	[%rd54], %r770;
	add.s32 	%r108, %r656, %r1598;
	mad.lo.s32 	%r774, %r108, %r655, %r1597;
	mul.wide.s32 	%rd55, %r774, 4;
	add.s64 	%rd9, %rd7, %rd55;
	ld.global.f32 	%f87, [%rd9];
	fma.rn.f32 	%f10, %f87, 0f3F000000, %f1;
	mov.f32 	%f503, %f2;
	@%p65 bra 	$L__BB0_27;

	@%p5 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_25;

$L__BB0_26:
	add.s32 	%r777, %r102, %r97;
	mad.lo.s32 	%r778, %r777, %r48, %r91;
	mul.wide.s32 	%rd58, %r778, 4;
	add.s64 	%rd59, %rd5, %rd58;
	ld.global.f32 	%f503, [%rd59];
	bra.uni 	$L__BB0_27;

$L__BB0_25:
	add.s32 	%r775, %r103, %r98;
	mad.lo.s32 	%r776, %r775, %r48, %r92;
	mul.wide.s32 	%rd56, %r776, 4;
	add.s64 	%rd57, %rd5, %rd56;
	ld.global.f32 	%f503, [%rd57];

$L__BB0_27:
	mov.f32 	%f504, %f2;
	@%p71 bra 	$L__BB0_31;

	@%p6 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_29;

$L__BB0_30:
	add.s32 	%r781, %r102, %r97;
	mad.lo.s32 	%r782, %r781, %r48, %r93;
	mul.wide.s32 	%rd62, %r782, 4;
	add.s64 	%rd63, %rd5, %rd62;
	ld.global.f32 	%f504, [%rd63];
	bra.uni 	$L__BB0_31;

$L__BB0_29:
	add.s32 	%r779, %r103, %r98;
	mad.lo.s32 	%r780, %r779, %r48, %r94;
	mul.wide.s32 	%rd60, %r780, 4;
	add.s64 	%rd61, %rd5, %rd60;
	ld.global.f32 	%f504, [%rd61];

$L__BB0_31:
	div.rn.f32 	%f89, %f504, %f10;
	div.rn.f32 	%f88, %f503, %f10;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f88;
  cvt.rn.f16.f32 high, %f89;
  mov.b32 %r783, {low,high};}

	// end inline asm
	add.s32 	%r784, %r83, %r106;
	mul.wide.s32 	%rd64, %r784, 4;
	add.s64 	%rd65, %rd6, %rd64;
	st.global.u32 	[%rd65], %r783;
	add.s32 	%r785, %r108, %r656;
	mad.lo.s32 	%r786, %r785, %r655, %r1597;
	mul.wide.s32 	%rd66, %r786, 4;
	add.s64 	%rd10, %rd7, %rd66;
	ld.global.f32 	%f90, [%rd10];
	fma.rn.f32 	%f17, %f90, 0f3F000000, %f1;
	mov.f32 	%f505, %f2;
	@%p65 bra 	$L__BB0_35;

	@%p5 bra 	$L__BB0_34;
	bra.uni 	$L__BB0_33;

$L__BB0_34:
	add.s32 	%r789, %r102, %r99;
	mad.lo.s32 	%r790, %r789, %r48, %r91;
	mul.wide.s32 	%rd69, %r790, 4;
	add.s64 	%rd70, %rd5, %rd69;
	ld.global.f32 	%f505, [%rd70];
	bra.uni 	$L__BB0_35;

$L__BB0_33:
	add.s32 	%r787, %r103, %r100;
	mad.lo.s32 	%r788, %r787, %r48, %r92;
	mul.wide.s32 	%rd67, %r788, 4;
	add.s64 	%rd68, %rd5, %rd67;
	ld.global.f32 	%f505, [%rd68];

$L__BB0_35:
	mov.f32 	%f506, %f2;
	@%p71 bra 	$L__BB0_39;

	@%p6 bra 	$L__BB0_38;
	bra.uni 	$L__BB0_37;

$L__BB0_38:
	add.s32 	%r793, %r102, %r99;
	mad.lo.s32 	%r794, %r793, %r48, %r93;
	mul.wide.s32 	%rd73, %r794, 4;
	add.s64 	%rd74, %rd5, %rd73;
	ld.global.f32 	%f506, [%rd74];
	bra.uni 	$L__BB0_39;

$L__BB0_37:
	add.s32 	%r791, %r103, %r100;
	mad.lo.s32 	%r792, %r791, %r48, %r94;
	mul.wide.s32 	%rd71, %r792, 4;
	add.s64 	%rd72, %rd5, %rd71;
	ld.global.f32 	%f506, [%rd72];

$L__BB0_39:
	div.rn.f32 	%f92, %f506, %f17;
	div.rn.f32 	%f91, %f505, %f17;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f91;
  cvt.rn.f16.f32 high, %f92;
  mov.b32 %r795, {low,high};}

	// end inline asm
	rem.s32 	%r796, %r88, %r655;
	add.s32 	%r797, %r796, %r104;
	shl.b32 	%r109, %r797, 5;
	add.s32 	%r798, %r109, %r36;
	shl.b32 	%r799, %r798, 2;
	add.s32 	%r800, %r79, %r799;
	add.s32 	%r801, %r800, 2;
	mul.wide.s32 	%rd75, %r801, 4;
	add.s64 	%rd76, %rd6, %rd75;
	st.global.u32 	[%rd76], %r795;
	setp.ge.s32 	%p76, %r804, %r674;
	and.pred  	%p77, %p3, %p76;
	setp.lt.s32 	%p78, %r804, %r675;
	and.pred  	%p79, %p78, %p77;
	setp.ge.s32 	%p80, %r804, %r668;
	and.pred  	%p81, %p4, %p80;
	setp.lt.s32 	%p82, %r804, %r669;
	and.pred  	%p9, %p82, %p81;
	setp.ge.s32 	%p83, %r807, %r674;
	and.pred  	%p84, %p3, %p83;
	setp.lt.s32 	%p85, %r807, %r675;
	and.pred  	%p10, %p85, %p84;
	sub.s32 	%r110, %r804, %r668;
	setp.lt.s32 	%p86, %r804, %r668;
	selp.b32 	%r808, %r804, %r78, %p82;
	selp.b32 	%r809, %r668, %r808, %p86;
	sub.s32 	%r111, %r809, %r668;
	setp.ge.s32 	%p87, %r807, %r668;
	and.pred  	%p88, %p4, %p87;
	setp.lt.s32 	%p89, %r807, %r669;
	and.pred  	%p11, %p89, %p88;
	sub.s32 	%r112, %r807, %r668;
	setp.lt.s32 	%p90, %r807, %r668;
	selp.b32 	%r810, %r807, %r78, %p89;
	selp.b32 	%r811, %r668, %r810, %p90;
	sub.s32 	%r113, %r811, %r668;
	ld.global.f32 	%f93, [%rd8];
	fma.rn.f32 	%f24, %f93, 0f3F000000, %f1;
	and.pred  	%p12, %p36, %p79;
	not.pred 	%p92, %p12;
	mov.f32 	%f507, %f2;
	@%p92 bra 	$L__BB0_43;

	@%p9 bra 	$L__BB0_42;
	bra.uni 	$L__BB0_41;

$L__BB0_42:
	add.s32 	%r814, %r102, %r95;
	mad.lo.s32 	%r815, %r814, %r48, %r110;
	mul.wide.s32 	%rd79, %r815, 4;
	add.s64 	%rd80, %rd5, %rd79;
	ld.global.f32 	%f507, [%rd80];
	bra.uni 	$L__BB0_43;

$L__BB0_41:
	add.s32 	%r812, %r103, %r96;
	mad.lo.s32 	%r813, %r812, %r48, %r111;
	mul.wide.s32 	%rd77, %r813, 4;
	add.s64 	%rd78, %rd5, %rd77;
	ld.global.f32 	%f507, [%rd78];

$L__BB0_43:
	and.pred  	%p13, %p36, %p10;
	not.pred 	%p94, %p13;
	mov.f32 	%f508, %f2;
	@%p94 bra 	$L__BB0_47;

	@%p11 bra 	$L__BB0_46;
	bra.uni 	$L__BB0_45;

$L__BB0_46:
	add.s32 	%r818, %r102, %r95;
	mad.lo.s32 	%r819, %r818, %r48, %r112;
	mul.wide.s32 	%rd83, %r819, 4;
	add.s64 	%rd84, %rd5, %rd83;
	ld.global.f32 	%f508, [%rd84];
	bra.uni 	$L__BB0_47;

$L__BB0_45:
	add.s32 	%r816, %r103, %r96;
	mad.lo.s32 	%r817, %r816, %r48, %r113;
	mul.wide.s32 	%rd81, %r817, 4;
	add.s64 	%rd82, %rd5, %rd81;
	ld.global.f32 	%f508, [%rd82];

$L__BB0_47:
	div.rn.f32 	%f95, %f508, %f24;
	div.rn.f32 	%f94, %f507, %f24;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f94;
  cvt.rn.f16.f32 high, %f95;
  mov.b32 %r820, {low,high};}

	// end inline asm
	add.s32 	%r821, %r107, %r86;
	shl.b32 	%r822, %r821, 2;
	add.s32 	%r823, %r85, %r822;
	mul.wide.s32 	%rd85, %r823, 4;
	add.s64 	%rd86, %rd6, %rd85;
	st.global.u32 	[%rd86], %r820;
	ld.global.f32 	%f96, [%rd9];
	fma.rn.f32 	%f31, %f96, 0f3F000000, %f1;
	mov.f32 	%f509, %f2;
	@%p92 bra 	$L__BB0_51;

	@%p9 bra 	$L__BB0_50;
	bra.uni 	$L__BB0_49;

$L__BB0_50:
	add.s32 	%r826, %r102, %r97;
	mad.lo.s32 	%r827, %r826, %r48, %r110;
	mul.wide.s32 	%rd89, %r827, 4;
	add.s64 	%rd90, %rd5, %rd89;
	ld.global.f32 	%f509, [%rd90];
	bra.uni 	$L__BB0_51;

$L__BB0_49:
	add.s32 	%r824, %r103, %r98;
	mad.lo.s32 	%r825, %r824, %r48, %r111;
	mul.wide.s32 	%rd87, %r825, 4;
	add.s64 	%rd88, %rd5, %rd87;
	ld.global.f32 	%f509, [%rd88];

$L__BB0_51:
	mov.f32 	%f510, %f2;
	@%p94 bra 	$L__BB0_55;

	@%p11 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_53;

$L__BB0_54:
	add.s32 	%r830, %r102, %r97;
	mad.lo.s32 	%r831, %r830, %r48, %r112;
	mul.wide.s32 	%rd93, %r831, 4;
	add.s64 	%rd94, %rd5, %rd93;
	ld.global.f32 	%f510, [%rd94];
	bra.uni 	$L__BB0_55;

$L__BB0_53:
	add.s32 	%r828, %r103, %r98;
	mad.lo.s32 	%r829, %r828, %r48, %r113;
	mul.wide.s32 	%rd91, %r829, 4;
	add.s64 	%rd92, %rd5, %rd91;
	ld.global.f32 	%f510, [%rd92];

$L__BB0_55:
	div.rn.f32 	%f98, %f510, %f31;
	div.rn.f32 	%f97, %f509, %f31;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f97;
  cvt.rn.f16.f32 high, %f98;
  mov.b32 %r832, {low,high};}

	// end inline asm
	add.s32 	%r833, %r84, %r106;
	mul.wide.s32 	%rd95, %r833, 4;
	add.s64 	%rd96, %rd6, %rd95;
	st.global.u32 	[%rd96], %r832;
	ld.global.f32 	%f99, [%rd10];
	fma.rn.f32 	%f38, %f99, 0f3F000000, %f1;
	mov.f32 	%f511, %f2;
	@%p92 bra 	$L__BB0_59;

	@%p9 bra 	$L__BB0_58;
	bra.uni 	$L__BB0_57;

$L__BB0_58:
	add.s32 	%r836, %r102, %r99;
	mad.lo.s32 	%r837, %r836, %r48, %r110;
	mul.wide.s32 	%rd99, %r837, 4;
	add.s64 	%rd100, %rd5, %rd99;
	ld.global.f32 	%f511, [%rd100];
	bra.uni 	$L__BB0_59;

$L__BB0_57:
	add.s32 	%r834, %r103, %r100;
	mad.lo.s32 	%r835, %r834, %r48, %r111;
	mul.wide.s32 	%rd97, %r835, 4;
	add.s64 	%rd98, %rd5, %rd97;
	ld.global.f32 	%f511, [%rd98];

$L__BB0_59:
	mov.f32 	%f512, %f2;
	@%p94 bra 	$L__BB0_63;

	@%p11 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_61;

$L__BB0_62:
	add.s32 	%r840, %r102, %r99;
	mad.lo.s32 	%r841, %r840, %r48, %r112;
	mul.wide.s32 	%rd103, %r841, 4;
	add.s64 	%rd104, %rd5, %rd103;
	ld.global.f32 	%f512, [%rd104];
	bra.uni 	$L__BB0_63;

$L__BB0_61:
	add.s32 	%r838, %r103, %r100;
	mad.lo.s32 	%r839, %r838, %r48, %r113;
	mul.wide.s32 	%rd101, %r839, 4;
	add.s64 	%rd102, %rd5, %rd101;
	ld.global.f32 	%f512, [%rd102];

$L__BB0_63:
	div.rn.f32 	%f101, %f512, %f38;
	div.rn.f32 	%f100, %f511, %f38;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f100;
  cvt.rn.f16.f32 high, %f101;
  mov.b32 %r842, {low,high};}

	// end inline asm
	add.s32 	%r843, %r109, %r86;
	shl.b32 	%r844, %r843, 2;
	add.s32 	%r845, %r85, %r844;
	add.s32 	%r846, %r845, 2;
	mul.wide.s32 	%rd105, %r846, 4;
	add.s64 	%rd106, %rd6, %rd105;
	st.global.u32 	[%rd106], %r842;
	add.s32 	%r1598, %r1598, %r686;
	setp.lt.s32 	%p99, %r1598, %r656;
	@%p99 bra 	$L__BB0_15;

$L__BB0_64:
	add.s32 	%r1597, %r1597, %r682;
	setp.lt.s32 	%p100, %r1597, %r655;
	@%p100 bra 	$L__BB0_13;

$L__BB0_65:
	ld.param.u64 	%rd107, [%rd1+120];
	cvta.to.global.u64 	%rd11, %rd107;
	@%p35 bra 	$L__BB0_149;

	shl.b32 	%r116, %r70, 1;
	ld.param.f32 	%f102, [%rd1+136];
	rcp.rn.f32 	%f45, %f102;
	mov.u64 	%rd108, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd170, %rd108, 24;
	mov.u32 	%r1599, %r1632;

$L__BB0_67:
	setp.ge.s32 	%p102, %r116, %r656;
	@%p102 bra 	$L__BB0_148;

	mov.u32 	%r1600, %r116;

$L__BB0_69:
	setp.ne.s32 	%p103, %r36, 0;
	@%p103 bra 	$L__BB0_147;

	shr.u32 	%r848, %r1600, 31;
	add.s32 	%r849, %r1600, %r848;
	shr.s32 	%r850, %r849, 1;
	mad.lo.s32 	%r851, %r850, %r655, %r1599;
	shl.b32 	%r120, %r851, 5;
	add.s32 	%r121, %r1600, -2;
	mul.lo.s32 	%r122, %r121, %r655;
	add.s32 	%r852, %r656, %r121;
	mul.lo.s32 	%r123, %r852, %r655;
	add.s32 	%r853, %r852, %r656;
	mul.lo.s32 	%r124, %r853, %r655;
	add.s32 	%r125, %r122, %r655;
	add.s32 	%r126, %r1600, -1;
	add.s32 	%r854, %r656, %r126;
	mul.lo.s32 	%r127, %r854, %r655;
	add.s32 	%r855, %r854, %r656;
	mul.lo.s32 	%r128, %r855, %r655;
	add.s32 	%r856, %r656, %r1600;
	mul.lo.s32 	%r129, %r856, %r655;
	add.s32 	%r857, %r856, %r656;
	mul.lo.s32 	%r130, %r857, %r655;
	mul.lo.s32 	%r131, %r1600, %r655;
	add.s32 	%r132, %r131, %r655;
	add.s32 	%r133, %r1600, 1;
	add.s32 	%r858, %r656, %r133;
	mul.lo.s32 	%r134, %r858, %r655;
	add.s32 	%r859, %r858, %r656;
	mul.lo.s32 	%r135, %r859, %r655;
	add.s32 	%r136, %r132, %r655;
	add.s32 	%r137, %r1600, 2;
	add.s32 	%r860, %r656, %r137;
	mul.lo.s32 	%r138, %r860, %r655;
	add.s32 	%r861, %r860, %r656;
	mul.lo.s32 	%r139, %r861, %r655;
	mov.u32 	%r1603, 0;
	mov.u64 	%rd481, %rd108;

$L__BB0_71:
	ld.global.nc.u32 	%r862, [%rd481];
	cvt.rn.f64.s32 	%fd1, %r862;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r141, %r862, %r1599;
	setp.lt.s32 	%p104, %r141, %r655;
	or.b32  	%r863, %r121, %r141;
	setp.gt.s32 	%p105, %r863, -1;
	and.pred  	%p106, %p104, %p105;
	setp.lt.s32 	%p107, %r121, %r656;
	and.pred  	%p14, %p107, %p106;
	cvt.rn.f32.f64 	%f103, %fd3;
	add.f32 	%f104, %f103, 0f3E800000;
	abs.f32 	%f46, %f104;
	add.f32 	%f105, %f46, 0f40200000;
	setp.geu.f32 	%p108, %f105, 0f40000000;
	@%p108 bra 	$L__BB0_76;

	@%p14 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_73;

$L__BB0_74:
	add.s32 	%r866, %r122, %r141;
	mul.wide.s32 	%rd109, %r866, 4;
	add.s64 	%rd110, %rd7, %rd109;
	ld.global.f32 	%f109, [%rd110];
	mul.f32 	%f110, %f109, 0f3F000000;
	sub.f32 	%f111, %f45, %f110;
	add.f32 	%f112, %f45, %f110;
	div.rn.f32 	%f108, %f111, %f112;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f108;
  mov.b32 %r1602, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_75;

$L__BB0_73:
	mov.f32 	%f107, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f107;
  cvt.rn.f16.f32 high, %f107;
  mov.b32 %r1602, {low,high};}

	// end inline asm

$L__BB0_75:
	add.s32 	%r867, %r1603, %r120;
	mul.wide.s32 	%rd111, %r867, 4;
	add.s64 	%rd112, %rd11, %rd111;
	st.global.u32 	[%rd112], %r1602;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_76:
	cvt.rn.f32.f64 	%f113, %fd1;
	add.f32 	%f114, %f113, 0f3E800000;
	abs.f32 	%f47, %f114;
	add.f32 	%f48, %f47, 0f40000000;
	setp.geu.f32 	%p109, %f48, 0f40000000;
	@%p109 bra 	$L__BB0_81;

	@%p14 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_78;

$L__BB0_79:
	add.s32 	%r870, %r123, %r141;
	mul.wide.s32 	%rd113, %r870, 4;
	add.s64 	%rd114, %rd7, %rd113;
	ld.global.f32 	%f118, [%rd114];
	mul.f32 	%f119, %f118, 0f3F000000;
	sub.f32 	%f120, %f45, %f119;
	add.f32 	%f121, %f45, %f119;
	div.rn.f32 	%f117, %f120, %f121;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f117;
  mov.b32 %r1604, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_80;

$L__BB0_78:
	mov.f32 	%f116, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f116;
  cvt.rn.f16.f32 high, %f116;
  mov.b32 %r1604, {low,high};}

	// end inline asm

$L__BB0_80:
	add.s32 	%r871, %r1603, %r120;
	mul.wide.s32 	%rd115, %r871, 4;
	add.s64 	%rd116, %rd11, %rd115;
	st.global.u32 	[%rd116], %r1604;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_81:
	add.f32 	%f122, %f47, 0f40200000;
	setp.geu.f32 	%p110, %f122, 0f40000000;
	@%p110 bra 	$L__BB0_86;

	@%p14 bra 	$L__BB0_84;
	bra.uni 	$L__BB0_83;

$L__BB0_84:
	add.s32 	%r874, %r124, %r141;
	mul.wide.s32 	%rd117, %r874, 4;
	add.s64 	%rd118, %rd7, %rd117;
	ld.global.f32 	%f126, [%rd118];
	mul.f32 	%f127, %f126, 0f3F000000;
	sub.f32 	%f128, %f45, %f127;
	add.f32 	%f129, %f45, %f127;
	div.rn.f32 	%f125, %f128, %f129;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f125;
  mov.b32 %r1606, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_85;

$L__BB0_83:
	mov.f32 	%f124, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f124;
  cvt.rn.f16.f32 high, %f124;
  mov.b32 %r1606, {low,high};}

	// end inline asm

$L__BB0_85:
	add.s32 	%r875, %r1603, %r120;
	mul.wide.s32 	%rd119, %r875, 4;
	add.s64 	%rd120, %rd11, %rd119;
	st.global.u32 	[%rd120], %r1606;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_86:
	or.b32  	%r876, %r126, %r141;
	setp.gt.s32 	%p111, %r876, -1;
	and.pred  	%p113, %p104, %p111;
	setp.le.s32 	%p114, %r1600, %r656;
	and.pred  	%p15, %p114, %p113;
	add.f32 	%f49, %f46, 0f3FC00000;
	setp.geu.f32 	%p115, %f49, 0f40000000;
	@%p115 bra 	$L__BB0_91;

	@%p15 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_88;

$L__BB0_89:
	add.s32 	%r879, %r125, %r141;
	mul.wide.s32 	%rd121, %r879, 4;
	add.s64 	%rd122, %rd7, %rd121;
	ld.global.f32 	%f133, [%rd122];
	mul.f32 	%f134, %f133, 0f3F000000;
	sub.f32 	%f135, %f45, %f134;
	add.f32 	%f136, %f45, %f134;
	div.rn.f32 	%f132, %f135, %f136;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f132;
  mov.b32 %r1608, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_90;

$L__BB0_88:
	mov.f32 	%f131, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f131;
  cvt.rn.f16.f32 high, %f131;
  mov.b32 %r1608, {low,high};}

	// end inline asm

$L__BB0_90:
	add.s32 	%r880, %r1603, %r120;
	mul.wide.s32 	%rd123, %r880, 4;
	add.s64 	%rd124, %rd11, %rd123;
	st.global.u32 	[%rd124], %r1608;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_91:
	add.f32 	%f50, %f47, 0f3F800000;
	setp.geu.f32 	%p116, %f50, 0f40000000;
	@%p116 bra 	$L__BB0_96;

	@%p15 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_93;

$L__BB0_94:
	add.s32 	%r883, %r127, %r141;
	mul.wide.s32 	%rd125, %r883, 4;
	add.s64 	%rd126, %rd7, %rd125;
	ld.global.f32 	%f140, [%rd126];
	mul.f32 	%f141, %f140, 0f3F000000;
	sub.f32 	%f142, %f45, %f141;
	add.f32 	%f143, %f45, %f141;
	div.rn.f32 	%f139, %f142, %f143;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f139;
  mov.b32 %r1610, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_95;

$L__BB0_93:
	mov.f32 	%f138, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f138;
  cvt.rn.f16.f32 high, %f138;
  mov.b32 %r1610, {low,high};}

	// end inline asm

$L__BB0_95:
	add.s32 	%r884, %r1603, %r120;
	mul.wide.s32 	%rd127, %r884, 4;
	add.s64 	%rd128, %rd11, %rd127;
	st.global.u32 	[%rd128], %r1610;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_96:
	add.f32 	%f51, %f47, 0f3FC00000;
	setp.geu.f32 	%p117, %f51, 0f40000000;
	@%p117 bra 	$L__BB0_101;

	@%p15 bra 	$L__BB0_99;
	bra.uni 	$L__BB0_98;

$L__BB0_99:
	add.s32 	%r887, %r128, %r141;
	mul.wide.s32 	%rd129, %r887, 4;
	add.s64 	%rd130, %rd7, %rd129;
	ld.global.f32 	%f147, [%rd130];
	mul.f32 	%f148, %f147, 0f3F000000;
	sub.f32 	%f149, %f45, %f148;
	add.f32 	%f150, %f45, %f148;
	div.rn.f32 	%f146, %f149, %f150;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f146;
  mov.b32 %r1612, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_100;

$L__BB0_98:
	mov.f32 	%f145, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f145;
  cvt.rn.f16.f32 high, %f145;
  mov.b32 %r1612, {low,high};}

	// end inline asm

$L__BB0_100:
	add.s32 	%r888, %r1603, %r120;
	mul.wide.s32 	%rd131, %r888, 4;
	add.s64 	%rd132, %rd11, %rd131;
	st.global.u32 	[%rd132], %r1612;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_101:
	or.b32  	%r889, %r1600, %r141;
	setp.gt.s32 	%p118, %r889, -1;
	and.pred  	%p120, %p104, %p118;
	setp.lt.s32 	%p121, %r1600, %r656;
	and.pred  	%p16, %p121, %p120;
	add.f32 	%f52, %f46, 0f3F000000;
	setp.geu.f32 	%p122, %f52, 0f40000000;
	@%p122 bra 	$L__BB0_106;

	@%p16 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_103;

$L__BB0_104:
	add.s32 	%r892, %r131, %r141;
	mul.wide.s32 	%rd133, %r892, 4;
	add.s64 	%rd134, %rd7, %rd133;
	ld.global.f32 	%f154, [%rd134];
	mul.f32 	%f155, %f154, 0f3F000000;
	sub.f32 	%f156, %f45, %f155;
	add.f32 	%f157, %f45, %f155;
	div.rn.f32 	%f153, %f156, %f157;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f153;
  mov.b32 %r1614, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_105;

$L__BB0_103:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f152;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r1614, {low,high};}

	// end inline asm

$L__BB0_105:
	add.s32 	%r893, %r1603, %r120;
	mul.wide.s32 	%rd135, %r893, 4;
	add.s64 	%rd136, %rd11, %rd135;
	st.global.u32 	[%rd136], %r1614;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_106:
	add.f32 	%f158, %f47, 0f00000000;
	setp.geu.f32 	%p123, %f158, 0f40000000;
	@%p123 bra 	$L__BB0_111;

	@%p16 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_108;

$L__BB0_109:
	add.s32 	%r896, %r129, %r141;
	mul.wide.s32 	%rd137, %r896, 4;
	add.s64 	%rd138, %rd7, %rd137;
	ld.global.f32 	%f162, [%rd138];
	mul.f32 	%f163, %f162, 0f3F000000;
	sub.f32 	%f164, %f45, %f163;
	add.f32 	%f165, %f45, %f163;
	div.rn.f32 	%f161, %f164, %f165;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f161;
  mov.b32 %r1616, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_110;

$L__BB0_108:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f160;
  mov.b32 %r1616, {low,high};}

	// end inline asm

$L__BB0_110:
	add.s32 	%r897, %r1603, %r120;
	mul.wide.s32 	%rd139, %r897, 4;
	add.s64 	%rd140, %rd11, %rd139;
	st.global.u32 	[%rd140], %r1616;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_111:
	add.f32 	%f53, %f47, 0f3F000000;
	setp.geu.f32 	%p124, %f53, 0f40000000;
	@%p124 bra 	$L__BB0_116;

	@%p16 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_113;

$L__BB0_114:
	add.s32 	%r900, %r130, %r141;
	mul.wide.s32 	%rd141, %r900, 4;
	add.s64 	%rd142, %rd7, %rd141;
	ld.global.f32 	%f169, [%rd142];
	mul.f32 	%f170, %f169, 0f3F000000;
	sub.f32 	%f171, %f45, %f170;
	add.f32 	%f172, %f45, %f170;
	div.rn.f32 	%f168, %f171, %f172;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f168;
  mov.b32 %r1618, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_115;

$L__BB0_113:
	mov.f32 	%f167, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f167;
  cvt.rn.f16.f32 high, %f167;
  mov.b32 %r1618, {low,high};}

	// end inline asm

$L__BB0_115:
	add.s32 	%r901, %r1603, %r120;
	mul.wide.s32 	%rd143, %r901, 4;
	add.s64 	%rd144, %rd11, %rd143;
	st.global.u32 	[%rd144], %r1618;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_116:
	or.b32  	%r902, %r133, %r141;
	setp.gt.s32 	%p125, %r902, -1;
	and.pred  	%p127, %p104, %p125;
	setp.lt.s32 	%p128, %r133, %r656;
	and.pred  	%p17, %p128, %p127;
	@%p122 bra 	$L__BB0_121;

	@%p17 bra 	$L__BB0_119;
	bra.uni 	$L__BB0_118;

$L__BB0_119:
	add.s32 	%r905, %r132, %r141;
	mul.wide.s32 	%rd145, %r905, 4;
	add.s64 	%rd146, %rd7, %rd145;
	ld.global.f32 	%f176, [%rd146];
	mul.f32 	%f177, %f176, 0f3F000000;
	sub.f32 	%f178, %f45, %f177;
	add.f32 	%f179, %f45, %f177;
	div.rn.f32 	%f175, %f178, %f179;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f175;
  mov.b32 %r1620, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_120;

$L__BB0_118:
	mov.f32 	%f174, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f174;
  cvt.rn.f16.f32 high, %f174;
  mov.b32 %r1620, {low,high};}

	// end inline asm

$L__BB0_120:
	add.s32 	%r906, %r1603, %r120;
	mul.wide.s32 	%rd147, %r906, 4;
	add.s64 	%rd148, %rd11, %rd147;
	st.global.u32 	[%rd148], %r1620;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_121:
	@%p116 bra 	$L__BB0_126;

	@%p17 bra 	$L__BB0_124;
	bra.uni 	$L__BB0_123;

$L__BB0_124:
	add.s32 	%r909, %r134, %r141;
	mul.wide.s32 	%rd149, %r909, 4;
	add.s64 	%rd150, %rd7, %rd149;
	ld.global.f32 	%f183, [%rd150];
	mul.f32 	%f184, %f183, 0f3F000000;
	sub.f32 	%f185, %f45, %f184;
	add.f32 	%f186, %f45, %f184;
	div.rn.f32 	%f182, %f185, %f186;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f182;
  mov.b32 %r1622, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_125;

$L__BB0_123:
	mov.f32 	%f181, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f181;
  cvt.rn.f16.f32 high, %f181;
  mov.b32 %r1622, {low,high};}

	// end inline asm

$L__BB0_125:
	add.s32 	%r910, %r1603, %r120;
	mul.wide.s32 	%rd151, %r910, 4;
	add.s64 	%rd152, %rd11, %rd151;
	st.global.u32 	[%rd152], %r1622;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_126:
	@%p124 bra 	$L__BB0_131;

	@%p17 bra 	$L__BB0_129;
	bra.uni 	$L__BB0_128;

$L__BB0_129:
	add.s32 	%r913, %r135, %r141;
	mul.wide.s32 	%rd153, %r913, 4;
	add.s64 	%rd154, %rd7, %rd153;
	ld.global.f32 	%f190, [%rd154];
	mul.f32 	%f191, %f190, 0f3F000000;
	sub.f32 	%f192, %f45, %f191;
	add.f32 	%f193, %f45, %f191;
	div.rn.f32 	%f189, %f192, %f193;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f189;
  mov.b32 %r1624, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_130;

$L__BB0_128:
	mov.f32 	%f188, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f188;
  cvt.rn.f16.f32 high, %f188;
  mov.b32 %r1624, {low,high};}

	// end inline asm

$L__BB0_130:
	add.s32 	%r914, %r1603, %r120;
	mul.wide.s32 	%rd155, %r914, 4;
	add.s64 	%rd156, %rd11, %rd155;
	st.global.u32 	[%rd156], %r1624;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_131:
	or.b32  	%r915, %r137, %r141;
	setp.gt.s32 	%p132, %r915, -1;
	and.pred  	%p134, %p104, %p132;
	setp.lt.s32 	%p135, %r137, %r656;
	and.pred  	%p18, %p135, %p134;
	@%p115 bra 	$L__BB0_136;

	@%p18 bra 	$L__BB0_134;
	bra.uni 	$L__BB0_133;

$L__BB0_134:
	add.s32 	%r918, %r136, %r141;
	mul.wide.s32 	%rd157, %r918, 4;
	add.s64 	%rd158, %rd7, %rd157;
	ld.global.f32 	%f197, [%rd158];
	mul.f32 	%f198, %f197, 0f3F000000;
	sub.f32 	%f199, %f45, %f198;
	add.f32 	%f200, %f45, %f198;
	div.rn.f32 	%f196, %f199, %f200;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f196;
  mov.b32 %r1626, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_135;

$L__BB0_133:
	mov.f32 	%f195, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f195;
  cvt.rn.f16.f32 high, %f195;
  mov.b32 %r1626, {low,high};}

	// end inline asm

$L__BB0_135:
	add.s32 	%r919, %r1603, %r120;
	mul.wide.s32 	%rd159, %r919, 4;
	add.s64 	%rd160, %rd11, %rd159;
	st.global.u32 	[%rd160], %r1626;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_136:
	@%p109 bra 	$L__BB0_141;

	@%p18 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_138;

$L__BB0_139:
	add.s32 	%r922, %r138, %r141;
	mul.wide.s32 	%rd161, %r922, 4;
	add.s64 	%rd162, %rd7, %rd161;
	ld.global.f32 	%f204, [%rd162];
	mul.f32 	%f205, %f204, 0f3F000000;
	sub.f32 	%f206, %f45, %f205;
	add.f32 	%f207, %f45, %f205;
	div.rn.f32 	%f203, %f206, %f207;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f203;
  mov.b32 %r1628, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_140;

$L__BB0_138:
	mov.f32 	%f202, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f202;
  cvt.rn.f16.f32 high, %f202;
  mov.b32 %r1628, {low,high};}

	// end inline asm

$L__BB0_140:
	add.s32 	%r923, %r1603, %r120;
	mul.wide.s32 	%rd163, %r923, 4;
	add.s64 	%rd164, %rd11, %rd163;
	st.global.u32 	[%rd164], %r1628;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_141:
	@%p117 bra 	$L__BB0_146;

	@%p18 bra 	$L__BB0_144;
	bra.uni 	$L__BB0_143;

$L__BB0_144:
	add.s32 	%r926, %r139, %r141;
	mul.wide.s32 	%rd165, %r926, 4;
	add.s64 	%rd166, %rd7, %rd165;
	ld.global.f32 	%f211, [%rd166];
	mul.f32 	%f212, %f211, 0f3F000000;
	sub.f32 	%f213, %f45, %f212;
	add.f32 	%f214, %f45, %f212;
	div.rn.f32 	%f210, %f213, %f214;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f210;
  mov.b32 %r1630, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_145;

$L__BB0_143:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r1630, {low,high};}

	// end inline asm

$L__BB0_145:
	add.s32 	%r927, %r1603, %r120;
	mul.wide.s32 	%rd167, %r927, 4;
	add.s64 	%rd168, %rd11, %rd167;
	st.global.u32 	[%rd168], %r1630;
	add.s32 	%r1603, %r1603, 1;

$L__BB0_146:
	add.s64 	%rd481, %rd481, 4;
	setp.ne.s64 	%p139, %rd481, %rd170;
	@%p139 bra 	$L__BB0_71;

$L__BB0_147:
	add.s32 	%r1600, %r1600, %r39;
	setp.lt.s32 	%p140, %r1600, %r656;
	@%p140 bra 	$L__BB0_69;

$L__BB0_148:
	add.s32 	%r1599, %r1599, %r682;
	setp.lt.s32 	%p141, %r1599, %r655;
	@%p141 bra 	$L__BB0_67;

$L__BB0_149:
	setp.eq.s32 	%p142, %r659, 1;
	ld.param.u64 	%rd171, [%rd1+160];
	cvta.to.global.u64 	%rd14, %rd171;
	ld.param.u64 	%rd172, [%rd1+128];
	cvta.to.global.u64 	%rd15, %rd172;
	@%p142 bra 	$L__BB0_167;
	bra.uni 	$L__BB0_150;

$L__BB0_167:
	@%p35 bra 	$L__BB0_296;

	shl.b32 	%r245, %r70, 1;
	shr.u32 	%r975, %r660, 31;
	add.s32 	%r976, %r660, %r975;
	shr.u32 	%r977, %r976, 1;
	and.b32  	%r246, %r977, 1;
	mov.u64 	%rd192, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;

$L__BB0_169:
	setp.ge.s32 	%p152, %r245, %r656;
	@%p152 bra 	$L__BB0_295;

	mov.u32 	%r1638, %r245;

$L__BB0_171:
	setp.ne.s32 	%p153, %r36, 0;
	@%p153 bra 	$L__BB0_294;

	shr.u32 	%r979, %r1638, 31;
	add.s32 	%r980, %r1638, %r979;
	shr.s32 	%r981, %r980, 1;
	mad.lo.s32 	%r982, %r981, %r655, %r1632;
	shl.b32 	%r250, %r982, 5;
	add.s32 	%r251, %r1638, -2;
	mul.lo.s32 	%r252, %r251, %r655;
	add.s32 	%r983, %r656, %r251;
	mul.lo.s32 	%r253, %r983, %r655;
	add.s32 	%r254, %r252, %r655;
	add.s32 	%r255, %r1638, -1;
	add.s32 	%r984, %r656, %r255;
	mul.lo.s32 	%r256, %r984, %r655;
	add.s32 	%r985, %r656, %r1638;
	mul.lo.s32 	%r257, %r985, %r655;
	mul.lo.s32 	%r258, %r1638, %r655;
	add.s32 	%r259, %r258, %r655;
	add.s32 	%r260, %r1638, 1;
	add.s32 	%r986, %r656, %r260;
	mul.lo.s32 	%r261, %r986, %r655;
	add.s32 	%r262, %r259, %r655;
	add.s32 	%r263, %r1638, 2;
	add.s32 	%r987, %r656, %r263;
	mul.lo.s32 	%r264, %r987, %r655;
	mov.u32 	%r1642, 0;
	mov.u64 	%rd482, 24;
	mov.u64 	%rd483, %rd192;

$L__BB0_173:
	ld.global.nc.u32 	%r988, [%rd483];
	cvt.rn.f64.s32 	%fd2, %r988;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r266, %r988, %r1632;
	setp.lt.s32 	%p154, %r266, %r655;
	or.b32  	%r989, %r251, %r266;
	setp.gt.s32 	%p155, %r989, -1;
	and.pred  	%p156, %p154, %p155;
	setp.lt.s32 	%p157, %r251, %r656;
	and.pred  	%p19, %p157, %p156;
	cvt.rn.f32.f64 	%f231, %fd4;
	add.f32 	%f232, %f231, 0f3E800000;
	abs.f32 	%f54, %f232;
	add.f32 	%f233, %f54, 0f40200000;
	setp.geu.f32 	%p158, %f233, 0f40000000;
	@%p158 bra 	$L__BB0_185;

	@%p19 bra 	$L__BB0_176;
	bra.uni 	$L__BB0_175;

$L__BB0_176:
	setp.eq.s32 	%p159, %r246, 0;
	add.s32 	%r991, %r252, %r266;
	shl.b32 	%r992, %r991, 1;
	mul.wide.s32 	%rd193, %r992, 4;
	add.s64 	%rd194, %rd14, %rd193;
	ld.global.f32 	%f55, [%rd194];
	@%p159 bra 	$L__BB0_178;
	bra.uni 	$L__BB0_177;

$L__BB0_178:
	mov.f32 	%f239, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f239;
  mov.b32 %r1640, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_179;

$L__BB0_175:
	mov.f32 	%f235, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f235;
  cvt.rn.f16.f32 high, %f235;
  mov.b32 %r1640, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_179;

$L__BB0_177:
	mov.f32 	%f236, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f236;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r1640, {low,high};}

	// end inline asm

$L__BB0_179:
	add.s32 	%r271, %r1642, %r250;
	mul.wide.s32 	%rd195, %r271, 4;
	add.s64 	%rd196, %rd15, %rd195;
	st.global.u32 	[%rd196], %r1640;
	@%p19 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_180;

$L__BB0_181:
	setp.eq.s32 	%p160, %r246, 0;
	add.s32 	%r996, %r253, %r266;
	shl.b32 	%r997, %r996, 1;
	mul.wide.s32 	%rd197, %r997, 4;
	add.s64 	%rd198, %rd14, %rd197;
	ld.global.f32 	%f56, [%rd198];
	@%p160 bra 	$L__BB0_183;
	bra.uni 	$L__BB0_182;

$L__BB0_183:
	mov.f32 	%f245, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f56;
  cvt.rn.f16.f32 high, %f245;
  mov.b32 %r1641, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_184;

$L__BB0_180:
	mov.f32 	%f241, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f241;
  cvt.rn.f16.f32 high, %f241;
  mov.b32 %r1641, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_184;

$L__BB0_182:
	mov.f32 	%f242, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f242;
  cvt.rn.f16.f32 high, %f56;
  mov.b32 %r1641, {low,high};}

	// end inline asm

$L__BB0_184:
	add.s32 	%r1000, %r271, 1;
	mul.wide.s32 	%rd199, %r1000, 4;
	add.s64 	%rd200, %rd15, %rd199;
	st.global.u32 	[%rd200], %r1641;
	add.s32 	%r1642, %r1642, 2;

$L__BB0_185:
	cvt.rn.f32.f64 	%f246, %fd2;
	add.f32 	%f247, %f246, 0f3E800000;
	abs.f32 	%f57, %f247;
	add.f32 	%f58, %f57, 0f40000000;
	setp.geu.f32 	%p161, %f58, 0f40000000;
	@%p161 bra 	$L__BB0_197;

	@%p19 bra 	$L__BB0_188;
	bra.uni 	$L__BB0_187;

$L__BB0_188:
	setp.eq.s32 	%p162, %r246, 0;
	add.s32 	%r1002, %r252, %r266;
	shl.b32 	%r1003, %r1002, 1;
	or.b32  	%r1004, %r1003, 1;
	mul.wide.s32 	%rd201, %r1004, 4;
	add.s64 	%rd202, %rd14, %rd201;
	ld.global.f32 	%f59, [%rd202];
	@%p162 bra 	$L__BB0_190;
	bra.uni 	$L__BB0_189;

$L__BB0_190:
	mov.f32 	%f253, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f59;
  cvt.rn.f16.f32 high, %f253;
  mov.b32 %r1643, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_191;

$L__BB0_187:
	mov.f32 	%f249, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f249;
  cvt.rn.f16.f32 high, %f249;
  mov.b32 %r1643, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_191;

$L__BB0_189:
	mov.f32 	%f250, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f250;
  cvt.rn.f16.f32 high, %f59;
  mov.b32 %r1643, {low,high};}

	// end inline asm

$L__BB0_191:
	add.s32 	%r282, %r1642, %r250;
	mul.wide.s32 	%rd203, %r282, 4;
	add.s64 	%rd204, %rd15, %rd203;
	st.global.u32 	[%rd204], %r1643;
	@%p19 bra 	$L__BB0_193;
	bra.uni 	$L__BB0_192;

$L__BB0_193:
	setp.eq.s32 	%p163, %r246, 0;
	add.s32 	%r1008, %r253, %r266;
	shl.b32 	%r1009, %r1008, 1;
	or.b32  	%r1010, %r1009, 1;
	mul.wide.s32 	%rd205, %r1010, 4;
	add.s64 	%rd206, %rd14, %rd205;
	ld.global.f32 	%f60, [%rd206];
	@%p163 bra 	$L__BB0_195;
	bra.uni 	$L__BB0_194;

$L__BB0_195:
	mov.f32 	%f259, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f60;
  cvt.rn.f16.f32 high, %f259;
  mov.b32 %r1644, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_196;

$L__BB0_192:
	mov.f32 	%f255, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f255;
  cvt.rn.f16.f32 high, %f255;
  mov.b32 %r1644, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_196;

$L__BB0_194:
	mov.f32 	%f256, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f256;
  cvt.rn.f16.f32 high, %f60;
  mov.b32 %r1644, {low,high};}

	// end inline asm

$L__BB0_196:
	add.s32 	%r1013, %r282, 1;
	mul.wide.s32 	%rd207, %r1013, 4;
	add.s64 	%rd208, %rd15, %rd207;
	st.global.u32 	[%rd208], %r1644;
	add.s32 	%r1642, %r1642, 2;

$L__BB0_197:
	or.b32  	%r1014, %r255, %r266;
	setp.gt.s32 	%p164, %r1014, -1;
	and.pred  	%p166, %p154, %p164;
	setp.le.s32 	%p167, %r1638, %r656;
	and.pred  	%p20, %p167, %p166;
	add.f32 	%f61, %f54, 0f3FC00000;
	setp.geu.f32 	%p168, %f61, 0f40000000;
	@%p168 bra 	$L__BB0_209;

	@%p20 bra 	$L__BB0_200;
	bra.uni 	$L__BB0_199;

$L__BB0_200:
	setp.eq.s32 	%p169, %r246, 0;
	add.s32 	%r1016, %r254, %r266;
	shl.b32 	%r1017, %r1016, 1;
	mul.wide.s32 	%rd209, %r1017, 4;
	add.s64 	%rd210, %rd14, %rd209;
	ld.global.f32 	%f62, [%rd210];
	@%p169 bra 	$L__BB0_202;
	bra.uni 	$L__BB0_201;

$L__BB0_202:
	mov.f32 	%f265, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f62;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1646, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_203;

$L__BB0_199:
	mov.f32 	%f261, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f261;
  cvt.rn.f16.f32 high, %f261;
  mov.b32 %r1646, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_203;

$L__BB0_201:
	mov.f32 	%f262, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f262;
  cvt.rn.f16.f32 high, %f62;
  mov.b32 %r1646, {low,high};}

	// end inline asm

$L__BB0_203:
	add.s32 	%r293, %r1642, %r250;
	mul.wide.s32 	%rd211, %r293, 4;
	add.s64 	%rd212, %rd15, %rd211;
	st.global.u32 	[%rd212], %r1646;
	@%p20 bra 	$L__BB0_205;
	bra.uni 	$L__BB0_204;

$L__BB0_205:
	setp.eq.s32 	%p170, %r246, 0;
	add.s32 	%r1021, %r256, %r266;
	shl.b32 	%r1022, %r1021, 1;
	mul.wide.s32 	%rd213, %r1022, 4;
	add.s64 	%rd214, %rd14, %rd213;
	ld.global.f32 	%f63, [%rd214];
	@%p170 bra 	$L__BB0_207;
	bra.uni 	$L__BB0_206;

$L__BB0_207:
	mov.f32 	%f271, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f63;
  cvt.rn.f16.f32 high, %f271;
  mov.b32 %r1647, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_208;

$L__BB0_204:
	mov.f32 	%f267, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f267;
  cvt.rn.f16.f32 high, %f267;
  mov.b32 %r1647, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_208;

$L__BB0_206:
	mov.f32 	%f268, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f268;
  cvt.rn.f16.f32 high, %f63;
  mov.b32 %r1647, {low,high};}

	// end inline asm

$L__BB0_208:
	add.s32 	%r1025, %r293, 1;
	mul.wide.s32 	%rd215, %r1025, 4;
	add.s64 	%rd216, %rd15, %rd215;
	st.global.u32 	[%rd216], %r1647;
	add.s32 	%r1642, %r1642, 2;

$L__BB0_209:
	add.f32 	%f64, %f57, 0f3F800000;
	setp.geu.f32 	%p171, %f64, 0f40000000;
	@%p171 bra 	$L__BB0_221;

	@%p20 bra 	$L__BB0_212;
	bra.uni 	$L__BB0_211;

$L__BB0_212:
	setp.eq.s32 	%p172, %r246, 0;
	add.s32 	%r1027, %r254, %r266;
	shl.b32 	%r1028, %r1027, 1;
	or.b32  	%r1029, %r1028, 1;
	mul.wide.s32 	%rd217, %r1029, 4;
	add.s64 	%rd218, %rd14, %rd217;
	ld.global.f32 	%f65, [%rd218];
	@%p172 bra 	$L__BB0_214;
	bra.uni 	$L__BB0_213;

$L__BB0_214:
	mov.f32 	%f277, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f65;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r1649, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_215;

$L__BB0_211:
	mov.f32 	%f273, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f273;
  cvt.rn.f16.f32 high, %f273;
  mov.b32 %r1649, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_215;

$L__BB0_213:
	mov.f32 	%f274, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f274;
  cvt.rn.f16.f32 high, %f65;
  mov.b32 %r1649, {low,high};}

	// end inline asm

$L__BB0_215:
	add.s32 	%r304, %r1642, %r250;
	mul.wide.s32 	%rd219, %r304, 4;
	add.s64 	%rd220, %rd15, %rd219;
	st.global.u32 	[%rd220], %r1649;
	@%p20 bra 	$L__BB0_217;
	bra.uni 	$L__BB0_216;

$L__BB0_217:
	setp.eq.s32 	%p173, %r246, 0;
	add.s32 	%r1033, %r256, %r266;
	shl.b32 	%r1034, %r1033, 1;
	or.b32  	%r1035, %r1034, 1;
	mul.wide.s32 	%rd221, %r1035, 4;
	add.s64 	%rd222, %rd14, %rd221;
	ld.global.f32 	%f66, [%rd222];
	@%p173 bra 	$L__BB0_219;
	bra.uni 	$L__BB0_218;

$L__BB0_219:
	mov.f32 	%f283, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f66;
  cvt.rn.f16.f32 high, %f283;
  mov.b32 %r1650, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_220;

$L__BB0_216:
	mov.f32 	%f279, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f279;
  cvt.rn.f16.f32 high, %f279;
  mov.b32 %r1650, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_220;

$L__BB0_218:
	mov.f32 	%f280, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f280;
  cvt.rn.f16.f32 high, %f66;
  mov.b32 %r1650, {low,high};}

	// end inline asm

$L__BB0_220:
	add.s32 	%r1038, %r304, 1;
	mul.wide.s32 	%rd223, %r1038, 4;
	add.s64 	%rd224, %rd15, %rd223;
	st.global.u32 	[%rd224], %r1650;
	add.s32 	%r1642, %r1642, 2;

$L__BB0_221:
	or.b32  	%r1039, %r1638, %r266;
	setp.gt.s32 	%p174, %r1039, -1;
	and.pred  	%p176, %p154, %p174;
	setp.lt.s32 	%p177, %r1638, %r656;
	and.pred  	%p21, %p177, %p176;
	add.f32 	%f67, %f54, 0f3F000000;
	setp.geu.f32 	%p178, %f67, 0f40000000;
	@%p178 bra 	$L__BB0_233;

	@%p21 bra 	$L__BB0_224;
	bra.uni 	$L__BB0_223;

$L__BB0_224:
	setp.eq.s32 	%p179, %r246, 0;
	add.s32 	%r1041, %r258, %r266;
	shl.b32 	%r1042, %r1041, 1;
	mul.wide.s32 	%rd225, %r1042, 4;
	add.s64 	%rd226, %rd14, %rd225;
	ld.global.f32 	%f68, [%rd226];
	@%p179 bra 	$L__BB0_226;
	bra.uni 	$L__BB0_225;

$L__BB0_226:
	mov.f32 	%f289, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f68;
  cvt.rn.f16.f32 high, %f289;
  mov.b32 %r1652, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_227;

$L__BB0_223:
	mov.f32 	%f285, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f285;
  cvt.rn.f16.f32 high, %f285;
  mov.b32 %r1652, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_227;

$L__BB0_225:
	mov.f32 	%f286, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f286;
  cvt.rn.f16.f32 high, %f68;
  mov.b32 %r1652, {low,high};}

	// end inline asm

$L__BB0_227:
	add.s32 	%r315, %r1642, %r250;
	mul.wide.s32 	%rd227, %r315, 4;
	add.s64 	%rd228, %rd15, %rd227;
	st.global.u32 	[%rd228], %r1652;
	@%p21 bra 	$L__BB0_229;
	bra.uni 	$L__BB0_228;

$L__BB0_229:
	setp.eq.s32 	%p180, %r246, 0;
	add.s32 	%r1046, %r257, %r266;
	shl.b32 	%r1047, %r1046, 1;
	mul.wide.s32 	%rd229, %r1047, 4;
	add.s64 	%rd230, %rd14, %rd229;
	ld.global.f32 	%f69, [%rd230];
	@%p180 bra 	$L__BB0_231;
	bra.uni 	$L__BB0_230;

$L__BB0_231:
	mov.f32 	%f295, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f69;
  cvt.rn.f16.f32 high, %f295;
  mov.b32 %r1653, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_232;

$L__BB0_228:
	mov.f32 	%f291, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f291;
  cvt.rn.f16.f32 high, %f291;
  mov.b32 %r1653, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_232;

$L__BB0_230:
	mov.f32 	%f292, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f292;
  cvt.rn.f16.f32 high, %f69;
  mov.b32 %r1653, {low,high};}

	// end inline asm

$L__BB0_232:
	add.s32 	%r1050, %r315, 1;
	mul.wide.s32 	%rd231, %r1050, 4;
	add.s64 	%rd232, %rd15, %rd231;
	st.global.u32 	[%rd232], %r1653;
	add.s32 	%r1642, %r1642, 2;

$L__BB0_233:
	add.f32 	%f296, %f57, 0f00000000;
	setp.geu.f32 	%p181, %f296, 0f40000000;
	@%p181 bra 	$L__BB0_245;

	@%p21 bra 	$L__BB0_236;
	bra.uni 	$L__BB0_235;

$L__BB0_236:
	setp.eq.s32 	%p182, %r246, 0;
	add.s32 	%r1052, %r258, %r266;
	shl.b32 	%r1053, %r1052, 1;
	or.b32  	%r1054, %r1053, 1;
	mul.wide.s32 	%rd233, %r1054, 4;
	add.s64 	%rd234, %rd14, %rd233;
	ld.global.f32 	%f70, [%rd234];
	@%p182 bra 	$L__BB0_238;
	bra.uni 	$L__BB0_237;

$L__BB0_238:
	mov.f32 	%f302, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f70;
  cvt.rn.f16.f32 high, %f302;
  mov.b32 %r1655, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_239;

$L__BB0_235:
	mov.f32 	%f298, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f298;
  cvt.rn.f16.f32 high, %f298;
  mov.b32 %r1655, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_239;

$L__BB0_237:
	mov.f32 	%f299, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f299;
  cvt.rn.f16.f32 high, %f70;
  mov.b32 %r1655, {low,high};}

	// end inline asm

$L__BB0_239:
	add.s32 	%r326, %r1642, %r250;
	mul.wide.s32 	%rd235, %r326, 4;
	add.s64 	%rd236, %rd15, %rd235;
	st.global.u32 	[%rd236], %r1655;
	@%p21 bra 	$L__BB0_241;
	bra.uni 	$L__BB0_240;

$L__BB0_241:
	setp.eq.s32 	%p183, %r246, 0;
	add.s32 	%r1058, %r257, %r266;
	shl.b32 	%r1059, %r1058, 1;
	or.b32  	%r1060, %r1059, 1;
	mul.wide.s32 	%rd237, %r1060, 4;
	add.s64 	%rd238, %rd14, %rd237;
	ld.global.f32 	%f71, [%rd238];
	@%p183 bra 	$L__BB0_243;
	bra.uni 	$L__BB0_242;

$L__BB0_243:
	mov.f32 	%f308, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f71;
  cvt.rn.f16.f32 high, %f308;
  mov.b32 %r1656, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_244;

$L__BB0_240:
	mov.f32 	%f304, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f304;
  cvt.rn.f16.f32 high, %f304;
  mov.b32 %r1656, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_244;

$L__BB0_242:
	mov.f32 	%f305, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f305;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r1656, {low,high};}

	// end inline asm

$L__BB0_244:
	add.s32 	%r1063, %r326, 1;
	mul.wide.s32 	%rd239, %r1063, 4;
	add.s64 	%rd240, %rd15, %rd239;
	st.global.u32 	[%rd240], %r1656;
	add.s32 	%r1642, %r1642, 2;

$L__BB0_245:
	or.b32  	%r1064, %r260, %r266;
	setp.gt.s32 	%p184, %r1064, -1;
	and.pred  	%p186, %p154, %p184;
	setp.lt.s32 	%p187, %r260, %r656;
	and.pred  	%p22, %p187, %p186;
	@%p178 bra 	$L__BB0_257;

	@%p22 bra 	$L__BB0_248;
	bra.uni 	$L__BB0_247;

$L__BB0_248:
	setp.eq.s32 	%p189, %r246, 0;
	add.s32 	%r1066, %r259, %r266;
	shl.b32 	%r1067, %r1066, 1;
	mul.wide.s32 	%rd241, %r1067, 4;
	add.s64 	%rd242, %rd14, %rd241;
	ld.global.f32 	%f72, [%rd242];
	@%p189 bra 	$L__BB0_250;
	bra.uni 	$L__BB0_249;

$L__BB0_250:
	mov.f32 	%f314, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f72;
  cvt.rn.f16.f32 high, %f314;
  mov.b32 %r1658, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_251;

$L__BB0_247:
	mov.f32 	%f310, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f310;
  cvt.rn.f16.f32 high, %f310;
  mov.b32 %r1658, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_251;

$L__BB0_249:
	mov.f32 	%f311, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f311;
  cvt.rn.f16.f32 high, %f72;
  mov.b32 %r1658, {low,high};}

	// end inline asm

$L__BB0_251:
	add.s32 	%r337, %r1642, %r250;
	mul.wide.s32 	%rd243, %r337, 4;
	add.s64 	%rd244, %rd15, %rd243;
	st.global.u32 	[%rd244], %r1658;
	@%p22 bra 	$L__BB0_253;
	bra.uni 	$L__BB0_252;

$L__BB0_253:
	setp.eq.s32 	%p190, %r246, 0;
	add.s32 	%r1071, %r261, %r266;
	shl.b32 	%r1072, %r1071, 1;
	mul.wide.s32 	%rd245, %r1072, 4;
	add.s64 	%rd246, %rd14, %rd245;
	ld.global.f32 	%f73, [%rd246];
	@%p190 bra 	$L__BB0_255;
	bra.uni 	$L__BB0_254;

$L__BB0_255:
	mov.f32 	%f320, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f73;
  cvt.rn.f16.f32 high, %f320;
  mov.b32 %r1659, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_256;

$L__BB0_252:
	mov.f32 	%f316, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f316;
  cvt.rn.f16.f32 high, %f316;
  mov.b32 %r1659, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_256;

$L__BB0_254:
	mov.f32 	%f317, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f317;
  cvt.rn.f16.f32 high, %f73;
  mov.b32 %r1659, {low,high};}

	// end inline asm

$L__BB0_256:
	add.s32 	%r1075, %r337, 1;
	mul.wide.s32 	%rd247, %r1075, 4;
	add.s64 	%rd248, %rd15, %rd247;
	st.global.u32 	[%rd248], %r1659;
	add.s32 	%r1642, %r1642, 2;

$L__BB0_257:
	@%p171 bra 	$L__BB0_269;

	@%p22 bra 	$L__BB0_260;
	bra.uni 	$L__BB0_259;

$L__BB0_260:
	setp.eq.s32 	%p192, %r246, 0;
	add.s32 	%r1077, %r259, %r266;
	shl.b32 	%r1078, %r1077, 1;
	or.b32  	%r1079, %r1078, 1;
	mul.wide.s32 	%rd249, %r1079, 4;
	add.s64 	%rd250, %rd14, %rd249;
	ld.global.f32 	%f74, [%rd250];
	@%p192 bra 	$L__BB0_262;
	bra.uni 	$L__BB0_261;

$L__BB0_262:
	mov.f32 	%f326, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f74;
  cvt.rn.f16.f32 high, %f326;
  mov.b32 %r1661, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_263;

$L__BB0_259:
	mov.f32 	%f322, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f322;
  cvt.rn.f16.f32 high, %f322;
  mov.b32 %r1661, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_263;

$L__BB0_261:
	mov.f32 	%f323, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f323;
  cvt.rn.f16.f32 high, %f74;
  mov.b32 %r1661, {low,high};}

	// end inline asm

$L__BB0_263:
	add.s32 	%r348, %r1642, %r250;
	mul.wide.s32 	%rd251, %r348, 4;
	add.s64 	%rd252, %rd15, %rd251;
	st.global.u32 	[%rd252], %r1661;
	@%p22 bra 	$L__BB0_265;
	bra.uni 	$L__BB0_264;

$L__BB0_265:
	setp.eq.s32 	%p193, %r246, 0;
	add.s32 	%r1083, %r261, %r266;
	shl.b32 	%r1084, %r1083, 1;
	or.b32  	%r1085, %r1084, 1;
	mul.wide.s32 	%rd253, %r1085, 4;
	add.s64 	%rd254, %rd14, %rd253;
	ld.global.f32 	%f75, [%rd254];
	@%p193 bra 	$L__BB0_267;
	bra.uni 	$L__BB0_266;

$L__BB0_267:
	mov.f32 	%f332, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f75;
  cvt.rn.f16.f32 high, %f332;
  mov.b32 %r1662, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_268;

$L__BB0_264:
	mov.f32 	%f328, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f328;
  cvt.rn.f16.f32 high, %f328;
  mov.b32 %r1662, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_268;

$L__BB0_266:
	mov.f32 	%f329, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f329;
  cvt.rn.f16.f32 high, %f75;
  mov.b32 %r1662, {low,high};}

	// end inline asm

$L__BB0_268:
	add.s32 	%r1088, %r348, 1;
	mul.wide.s32 	%rd255, %r1088, 4;
	add.s64 	%rd256, %rd15, %rd255;
	st.global.u32 	[%rd256], %r1662;
	add.s32 	%r1642, %r1642, 2;

$L__BB0_269:
	or.b32  	%r1089, %r263, %r266;
	setp.gt.s32 	%p194, %r1089, -1;
	and.pred  	%p196, %p154, %p194;
	setp.lt.s32 	%p197, %r263, %r656;
	and.pred  	%p23, %p197, %p196;
	@%p168 bra 	$L__BB0_281;

	@%p23 bra 	$L__BB0_272;
	bra.uni 	$L__BB0_271;

$L__BB0_272:
	setp.eq.s32 	%p199, %r246, 0;
	add.s32 	%r1091, %r262, %r266;
	shl.b32 	%r1092, %r1091, 1;
	mul.wide.s32 	%rd257, %r1092, 4;
	add.s64 	%rd258, %rd14, %rd257;
	ld.global.f32 	%f76, [%rd258];
	@%p199 bra 	$L__BB0_274;
	bra.uni 	$L__BB0_273;

$L__BB0_274:
	mov.f32 	%f338, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f76;
  cvt.rn.f16.f32 high, %f338;
  mov.b32 %r1664, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_275;

$L__BB0_271:
	mov.f32 	%f334, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f334;
  cvt.rn.f16.f32 high, %f334;
  mov.b32 %r1664, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_275;

$L__BB0_273:
	mov.f32 	%f335, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f335;
  cvt.rn.f16.f32 high, %f76;
  mov.b32 %r1664, {low,high};}

	// end inline asm

$L__BB0_275:
	add.s32 	%r359, %r1642, %r250;
	mul.wide.s32 	%rd259, %r359, 4;
	add.s64 	%rd260, %rd15, %rd259;
	st.global.u32 	[%rd260], %r1664;
	@%p23 bra 	$L__BB0_277;
	bra.uni 	$L__BB0_276;

$L__BB0_277:
	setp.eq.s32 	%p200, %r246, 0;
	add.s32 	%r1096, %r264, %r266;
	shl.b32 	%r1097, %r1096, 1;
	mul.wide.s32 	%rd261, %r1097, 4;
	add.s64 	%rd262, %rd14, %rd261;
	ld.global.f32 	%f77, [%rd262];
	@%p200 bra 	$L__BB0_279;
	bra.uni 	$L__BB0_278;

$L__BB0_279:
	mov.f32 	%f344, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f77;
  cvt.rn.f16.f32 high, %f344;
  mov.b32 %r1665, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_280;

$L__BB0_276:
	mov.f32 	%f340, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f340;
  cvt.rn.f16.f32 high, %f340;
  mov.b32 %r1665, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_280;

$L__BB0_278:
	mov.f32 	%f341, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f341;
  cvt.rn.f16.f32 high, %f77;
  mov.b32 %r1665, {low,high};}

	// end inline asm

$L__BB0_280:
	add.s32 	%r1100, %r359, 1;
	mul.wide.s32 	%rd263, %r1100, 4;
	add.s64 	%rd264, %rd15, %rd263;
	st.global.u32 	[%rd264], %r1665;
	add.s32 	%r1642, %r1642, 2;

$L__BB0_281:
	@%p161 bra 	$L__BB0_293;

	@%p23 bra 	$L__BB0_284;
	bra.uni 	$L__BB0_283;

$L__BB0_284:
	setp.eq.s32 	%p202, %r246, 0;
	add.s32 	%r1102, %r262, %r266;
	shl.b32 	%r1103, %r1102, 1;
	or.b32  	%r1104, %r1103, 1;
	mul.wide.s32 	%rd265, %r1104, 4;
	add.s64 	%rd266, %rd14, %rd265;
	ld.global.f32 	%f78, [%rd266];
	@%p202 bra 	$L__BB0_286;
	bra.uni 	$L__BB0_285;

$L__BB0_286:
	mov.f32 	%f350, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f78;
  cvt.rn.f16.f32 high, %f350;
  mov.b32 %r1667, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_287;

$L__BB0_283:
	mov.f32 	%f346, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f346;
  cvt.rn.f16.f32 high, %f346;
  mov.b32 %r1667, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_287;

$L__BB0_285:
	mov.f32 	%f347, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f347;
  cvt.rn.f16.f32 high, %f78;
  mov.b32 %r1667, {low,high};}

	// end inline asm

$L__BB0_287:
	add.s32 	%r370, %r1642, %r250;
	mul.wide.s32 	%rd267, %r370, 4;
	add.s64 	%rd268, %rd15, %rd267;
	st.global.u32 	[%rd268], %r1667;
	@%p23 bra 	$L__BB0_289;
	bra.uni 	$L__BB0_288;

$L__BB0_289:
	setp.eq.s32 	%p203, %r246, 0;
	add.s32 	%r1108, %r264, %r266;
	shl.b32 	%r1109, %r1108, 1;
	or.b32  	%r1110, %r1109, 1;
	mul.wide.s32 	%rd269, %r1110, 4;
	add.s64 	%rd270, %rd14, %rd269;
	ld.global.f32 	%f79, [%rd270];
	@%p203 bra 	$L__BB0_291;
	bra.uni 	$L__BB0_290;

$L__BB0_291:
	mov.f32 	%f356, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f79;
  cvt.rn.f16.f32 high, %f356;
  mov.b32 %r1668, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_292;

$L__BB0_288:
	mov.f32 	%f352, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f352;
  cvt.rn.f16.f32 high, %f352;
  mov.b32 %r1668, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_292;

$L__BB0_290:
	mov.f32 	%f353, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f353;
  cvt.rn.f16.f32 high, %f79;
  mov.b32 %r1668, {low,high};}

	// end inline asm

$L__BB0_292:
	add.s32 	%r1113, %r370, 1;
	mul.wide.s32 	%rd271, %r1113, 4;
	add.s64 	%rd272, %rd15, %rd271;
	st.global.u32 	[%rd272], %r1668;
	add.s32 	%r1642, %r1642, 2;

$L__BB0_293:
	add.s64 	%rd483, %rd483, 4;
	add.s64 	%rd482, %rd482, -4;
	setp.ne.s64 	%p204, %rd482, 0;
	@%p204 bra 	$L__BB0_173;

$L__BB0_294:
	add.s32 	%r1638, %r1638, %r39;
	setp.lt.s32 	%p205, %r1638, %r656;
	@%p205 bra 	$L__BB0_171;

$L__BB0_295:
	add.s32 	%r1632, %r1632, %r682;
	setp.lt.s32 	%p206, %r1632, %r655;
	@%p206 bra 	$L__BB0_169;
	bra.uni 	$L__BB0_296;

$L__BB0_150:
	@%p35 bra 	$L__BB0_296;

	neg.s32 	%r219, %r69;
	mov.u32 	%r928, 31;
	sub.s32 	%r929, %r928, %r36;
	setp.gt.s32 	%p144, %r35, %r36;
	selp.b32 	%r930, %r36, %r929, %p144;
	shl.b32 	%r931, %r930, 2;
	mov.u32 	%r932, 2;
	sub.s32 	%r220, %r931, %r658;
	shl.b32 	%r933, %r657, 2;
	mov.u32 	%r934, 128;
	sub.s32 	%r221, %r934, %r933;
	sub.s32 	%r935, %r932, %r658;
	add.s32 	%r222, %r935, %r931;
	add.s32 	%r223, %r655, -1;
	add.s32 	%r224, %r220, 1;
	add.s32 	%r225, %r222, 1;
	rem.s32 	%r960, %r224, %r221;
	add.s32 	%r961, %r960, %r221;
	rem.s32 	%r236, %r961, %r221;
	rem.s32 	%r962, %r225, %r221;
	add.s32 	%r963, %r962, %r221;
	rem.s32 	%r237, %r963, %r221;

$L__BB0_152:
	setp.ne.s32 	%p145, %r32, %r219;
	@%p145 bra 	$L__BB0_166;

	shl.b32 	%r227, %r1632, 1;
	rem.s32 	%r936, %r220, %r221;
	add.s32 	%r937, %r936, %r221;
	rem.s32 	%r228, %r937, %r221;
	rem.s32 	%r938, %r222, %r221;
	add.s32 	%r939, %r938, %r221;
	rem.s32 	%r229, %r939, %r221;
	@%p144 bra 	$L__BB0_155;
	bra.uni 	$L__BB0_154;

$L__BB0_155:
	mul.lo.s32 	%r942, %r227, %r221;
	add.s32 	%r943, %r942, %r228;
	mul.wide.s32 	%rd173, %r943, 4;
	add.s64 	%rd174, %rd14, %rd173;
	ld.global.f32 	%f217, [%rd174];
	add.s32 	%r944, %r942, %r229;
	mul.wide.s32 	%rd175, %r944, 4;
	add.s64 	%rd176, %rd14, %rd175;
	ld.global.f32 	%f218, [%rd176];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f217;
  cvt.rn.f16.f32 high, %f218;
  mov.b32 %r1633, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_156;

$L__BB0_154:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f216;
  mov.b32 %r1633, {low,high};}

	// end inline asm

$L__BB0_156:
	shl.b32 	%r945, %r1632, 5;
	add.s32 	%r946, %r945, %r36;
	shl.b32 	%r947, %r946, 2;
	mul.wide.s32 	%rd177, %r947, 4;
	add.s64 	%rd16, %rd15, %rd177;
	st.global.u32 	[%rd16], %r1633;
	@%p144 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_157;

$L__BB0_158:
	add.s32 	%r950, %r227, 1;
	mul.lo.s32 	%r951, %r950, %r221;
	add.s32 	%r952, %r951, %r228;
	mul.wide.s32 	%rd178, %r952, 4;
	add.s64 	%rd179, %rd14, %rd178;
	ld.global.f32 	%f221, [%rd179];
	add.s32 	%r953, %r951, %r229;
	mul.wide.s32 	%rd180, %r953, 4;
	add.s64 	%rd181, %rd14, %rd180;
	ld.global.f32 	%f222, [%rd181];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f221;
  cvt.rn.f16.f32 high, %f222;
  mov.b32 %r1634, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_159;

$L__BB0_157:
	mov.f32 	%f220, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f220;
  cvt.rn.f16.f32 high, %f220;
  mov.b32 %r1634, {low,high};}

	// end inline asm

$L__BB0_159:
	add.s32 	%r954, %r223, %r1632;
	rem.s32 	%r955, %r954, %r655;
	shl.b32 	%r956, %r955, 5;
	add.s32 	%r957, %r956, %r36;
	shl.b32 	%r958, %r957, 2;
	or.b32  	%r959, %r958, 2;
	mul.wide.s32 	%rd182, %r959, 4;
	add.s64 	%rd17, %rd15, %rd182;
	st.global.u32 	[%rd17], %r1634;
	@%p144 bra 	$L__BB0_161;
	bra.uni 	$L__BB0_160;

$L__BB0_161:
	mul.lo.s32 	%r966, %r227, %r221;
	add.s32 	%r967, %r966, %r236;
	mul.wide.s32 	%rd183, %r967, 4;
	add.s64 	%rd184, %rd14, %rd183;
	ld.global.f32 	%f225, [%rd184];
	add.s32 	%r968, %r966, %r237;
	mul.wide.s32 	%rd185, %r968, 4;
	add.s64 	%rd186, %rd14, %rd185;
	ld.global.f32 	%f226, [%rd186];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f225;
  cvt.rn.f16.f32 high, %f226;
  mov.b32 %r1635, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_162;

$L__BB0_160:
	mov.f32 	%f224, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f224;
  cvt.rn.f16.f32 high, %f224;
  mov.b32 %r1635, {low,high};}

	// end inline asm

$L__BB0_162:
	st.global.u32 	[%rd16+4], %r1635;
	@%p144 bra 	$L__BB0_164;
	bra.uni 	$L__BB0_163;

$L__BB0_164:
	add.s32 	%r971, %r227, 1;
	mul.lo.s32 	%r972, %r971, %r221;
	add.s32 	%r973, %r972, %r236;
	mul.wide.s32 	%rd187, %r973, 4;
	add.s64 	%rd188, %rd14, %rd187;
	ld.global.f32 	%f229, [%rd188];
	add.s32 	%r974, %r972, %r237;
	mul.wide.s32 	%rd189, %r974, 4;
	add.s64 	%rd190, %rd14, %rd189;
	ld.global.f32 	%f230, [%rd190];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f229;
  cvt.rn.f16.f32 high, %f230;
  mov.b32 %r1636, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_165;

$L__BB0_163:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f228;
  mov.b32 %r1636, {low,high};}

	// end inline asm

$L__BB0_165:
	st.global.u32 	[%rd17+4], %r1636;

$L__BB0_166:
	add.s32 	%r1632, %r1632, %r682;
	setp.lt.s32 	%p150, %r1632, %r655;
	@%p150 bra 	$L__BB0_152;

$L__BB0_296:
	add.s32 	%r379, %r650, -1;
	mad.lo.s32 	%r1115, %r651, 576, 128;
	mul.lo.s32 	%r380, %r1115, %r379;
	add.s32 	%r381, %r59, -64;
	add.s32 	%r1116, %r381, %r59;
	add.s32 	%r382, %r651, -1;
	mad.lo.s32 	%r1117, %r1116, %r382, %r380;
	mul.lo.s32 	%r1118, %r379, %r651;
	mul.lo.s32 	%r383, %r1118, 320;
	mul.lo.s32 	%r384, %r381, %r382;
	add.s32 	%r1119, %r384, %r383;
	add.s32 	%r385, %r1119, %r1117;
	setp.lt.s32 	%p207, %r385, 1;
	mov.f32 	%f358, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f358;
  cvt.rn.f16.f32 high, %f358;
  mov.b32 %r1671, {low,high};}

	// end inline asm
	@%p207 bra 	$L__BB0_299;

	mov.u32 	%r1672, 0;
	mov.u32 	%r1670, _ZN6kernel5shmemE;

$L__BB0_298:
	st.shared.u32 	[%r1670], %r1671;
	mov.f32 	%f366, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f366;
  cvt.rn.f16.f32 high, %f366;
  mov.b32 %r1122, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1670+4], %r1122;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f366;
  cvt.rn.f16.f32 high, %f366;
  mov.b32 %r1123, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1670+8], %r1123;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f366;
  cvt.rn.f16.f32 high, %f366;
  mov.b32 %r1124, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1670+12], %r1124;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f366;
  cvt.rn.f16.f32 high, %f366;
  mov.b32 %r1671, {low,high};}

	// end inline asm
	add.s32 	%r1670, %r1670, 16;
	add.s32 	%r1672, %r1672, 4;
	setp.lt.s32 	%p208, %r1672, %r385;
	@%p208 bra 	$L__BB0_298;

$L__BB0_299:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f358;
  cvt.rn.f16.f32 high, %f358;
  mov.b32 %r1784, {low,high};}

	// end inline asm
	mov.u32 	%r1128, 31;
	sub.s32 	%r1129, %r1128, %r36;
	setp.gt.s32 	%p210, %r35, %r36;
	selp.b32 	%r1130, %r36, %r1129, %p210;
	shl.b32 	%r1131, %r1130, 2;
	sub.s32 	%r394, %r1131, %r658;
	shl.b32 	%r1132, %r657, 2;
	mov.u32 	%r1133, 128;
	sub.s32 	%r395, %r1133, %r1132;
	rem.s32 	%r1134, %r394, %r395;
	add.s32 	%r1135, %r1134, %r395;
	rem.s32 	%r396, %r1135, %r395;
	add.s32 	%r1136, %r394, 2;
	rem.s32 	%r1137, %r1136, %r395;
	add.s32 	%r1138, %r1137, %r395;
	rem.s32 	%r397, %r1138, %r395;
	add.s32 	%r1149, %r394, 1;
	rem.s32 	%r1150, %r1149, %r395;
	add.s32 	%r1151, %r1150, %r395;
	rem.s32 	%r398, %r1151, %r395;
	add.s32 	%r1152, %r394, 3;
	rem.s32 	%r1153, %r1152, %r395;
	add.s32 	%r1154, %r1153, %r395;
	rem.s32 	%r399, %r1154, %r395;
	// begin inline asm
	mov.u32 %r1165, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd278, %r1165;
	// begin inline asm
	mov.u32 %r1166, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd279, %r1166;
	bfi.b64 	%rd27, %rd279, %rd278, 32, 32;
	setp.ne.s64 	%p218, %rd27, 0;
	@%p218 bra 	$L__BB0_317;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_317:
	add.s64 	%rd28, %rd27, 4;
	mov.u32 	%r1167, %nctaid.y;
	mov.u32 	%r1168, %nctaid.x;
	mul.lo.s32 	%r1169, %r1168, %r1167;
	mov.u32 	%r1170, %nctaid.z;
	mul.lo.s32 	%r400, %r1169, %r1170;
	neg.s32 	%r401, %r32;
	add.s32 	%r402, %r36, %r31;
	setp.ne.s32 	%p219, %r402, %r401;
	mov.u32 	%r1171, %ctaid.x;
	add.s32 	%r403, %r1171, %r33;
	neg.s32 	%r404, %r34;
	bar.sync 	0;
	@%p219 bra 	$L__BB0_321;

	setp.eq.s32 	%p220, %r403, %r404;
	mov.u32 	%r1174, -2147483647;
	sub.s32 	%r1175, %r1174, %r400;
	selp.b32 	%r1173, %r1175, 1, %p220;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1172,[%rd28],%r1173;
	// end inline asm

$L__BB0_319:
	ld.volatile.u32 	%r1176, [%rd28];
	xor.b32  	%r1177, %r1176, %r1172;
	setp.gt.s32 	%p221, %r1177, -1;
	@%p221 bra 	$L__BB0_319;

	// begin inline asm
	ld.acquire.gpu.u32 %r1178,[%rd28];
	// end inline asm

$L__BB0_321:
	bar.sync 	0;
	setp.lt.s32 	%p222, %r40, 1;
	@%p222 bra 	$L__BB0_596;

	setp.eq.s32 	%p223, %r403, %r404;
	not.b32 	%r1180, %r33;
	add.s32 	%r1181, %r652, %r1180;
	not.b32 	%r1182, %r34;
	add.s32 	%r1183, %r653, %r1182;
	not.b32 	%r1184, %r31;
	add.s32 	%r1185, %r650, %r1184;
	not.b32 	%r1186, %r32;
	add.s32 	%r1187, %r651, %r1186;
	mad.lo.s32 	%r1188, %r1181, %r650, %r1185;
	mad.lo.s32 	%r1189, %r1183, %r651, %r1187;
	add.s32 	%r1190, %r1188, %r1189;
	sub.s32 	%r1191, %r1188, %r1189;
	shl.b32 	%r1192, %r1190, 1;
	shl.b32 	%r1193, %r1191, 1;
	add.s32 	%r1194, %r1181, %r1183;
	mul.lo.s32 	%r406, %r1194, %r654;
	add.s32 	%r407, %r1193, %r656;
	add.s32 	%r1195, %r406, %r655;
	add.s32 	%r408, %r1195, %r1192;
	sub.s32 	%r409, %r39, %r655;
	sub.s32 	%r410, %r38, %r656;
	shl.b32 	%r1196, %r651, 8;
	or.b32  	%r1197, %r1196, 128;
	add.s32 	%r1198, %r31, -1;
	shl.b32 	%r1199, %r32, 8;
	mad.lo.s32 	%r1200, %r1197, %r1198, %r383;
	add.s32 	%r1201, %r1200, %r1199;
	shl.b32 	%r1202, %r1201, 2;
	mov.u32 	%r1203, _ZN6kernel5shmemE;
	add.s32 	%r1204, %r1203, %r1202;
	add.s32 	%r411, %r1204, -512;
	add.s32 	%r1205, %r32, -1;
	mul.lo.s32 	%r1206, %r1185, 384;
	mad.lo.s32 	%r1207, %r59, %r1205, %r1206;
	add.s32 	%r1208, %r1207, %r384;
	add.s32 	%r1209, %r1208, %r380;
	shl.b32 	%r1210, %r1209, 2;
	add.s32 	%r412, %r1203, %r1210;
	add.s32 	%r413, %r664, -2;
	add.s32 	%r414, %r665, 3;
	add.s32 	%r415, %r666, -2;
	add.s32 	%r416, %r667, 2;
	mad.lo.s32 	%r417, %r663, %r662, %r661;
	mul.lo.s32 	%r1211, %r651, %r31;
	add.s32 	%r1212, %r1211, %r32;
	mad.lo.s32 	%r1213, %r1212, 1280, %r1203;
	add.s32 	%r1214, %r1213, -256;
	add.s32 	%r418, %r36, 16;
	shl.b32 	%r1215, %r36, 4;
	add.s32 	%r1216, %r1215, 256;
	add.s32 	%r419, %r1214, %r1216;
	mov.u32 	%r1217, 4;
	add.s32 	%r420, %r36, 96;
	shl.b32 	%r1218, %r36, 3;
	add.s32 	%r1219, %r1214, %r1218;
	mul.lo.s32 	%r1220, %r381, %r32;
	add.s32 	%r1221, %r380, %r1220;
	add.s32 	%r1222, %r1221, %r1206;
	shl.b32 	%r1223, %r1222, 2;
	add.s32 	%r1224, %r1203, %r1223;
	add.s32 	%r1225, %r1224, -256;
	add.s32 	%r422, %r1225, %r1216;
	sub.s32 	%r1226, %r1211, %r651;
	add.s32 	%r1227, %r1226, %r32;
	mad.lo.s32 	%r1228, %r1227, 1280, %r1203;
	add.s32 	%r423, %r1228, -256;
	add.s32 	%r424, %r1225, %r1218;
	sub.s32 	%r1229, %r1220, %r381;
	add.s32 	%r1230, %r380, %r1229;
	add.s32 	%r1231, %r1230, %r1206;
	shl.b32 	%r1232, %r1231, 2;
	add.s32 	%r1233, %r1203, %r1232;
	add.s32 	%r425, %r1233, -256;
	mad.lo.s32 	%r1234, %r1197, %r31, %r383;
	add.s32 	%r1235, %r1234, %r1199;
	shl.b32 	%r1236, %r1235, 2;
	add.s32 	%r1237, %r1203, %r1236;
	add.s32 	%r426, %r36, 32;
	add.s32 	%r427, %r1237, %r1215;
	mad.lo.s32 	%r1238, %r59, %r32, %r1206;
	add.s32 	%r1239, %r1238, %r384;
	add.s32 	%r1240, %r1239, %r380;
	shl.b32 	%r1241, %r1240, 2;
	add.s32 	%r1242, %r1203, %r1241;
	add.s32 	%r428, %r1242, %r1215;
	mov.u32 	%r1243, -2147483647;
	sub.s32 	%r1244, %r1243, %r400;
	selp.b32 	%r429, %r1244, 1, %p223;
	sub.s32 	%r430, %r1217, %r664;
	sub.s32 	%r431, %r1217, %r666;
	setp.lt.s32 	%p224, %r396, %r669;
	setp.ge.s32 	%p225, %r396, %r668;
	and.pred  	%p24, %p224, %p225;
	setp.lt.s32 	%p226, %r398, %r669;
	setp.ge.s32 	%p227, %r398, %r668;
	and.pred  	%p25, %p226, %p227;
	setp.lt.s32 	%p228, %r397, %r669;
	setp.ge.s32 	%p229, %r397, %r668;
	and.pred  	%p26, %p228, %p229;
	setp.lt.s32 	%p230, %r399, %r669;
	setp.ge.s32 	%p231, %r399, %r668;
	and.pred  	%p27, %p230, %p231;
	mov.u32 	%r1753, 0;
	mov.u32 	%r1785, %r1784;
	mov.u32 	%r1675, %r1784;
	mov.u32 	%r1676, %r1784;
	mov.u32 	%r1772, %r1784;
	mov.u32 	%r1754, %r1784;
	mov.u32 	%r1774, %r1784;
	mov.u32 	%r1764, %r1784;
	mov.u32 	%r1755, %r1784;
	mov.u32 	%r1775, %r1784;
	mov.u32 	%r1765, %r1784;
	mov.u32 	%r1786, %r1784;
	mov.u32 	%r1685, %r1784;
	mov.u32 	%r1686, %r1784;
	mov.u32 	%r1687, %r1784;
	mov.u32 	%r1688, %r1784;
	mov.u32 	%r1689, %r1784;
	mov.u32 	%r1690, %r1784;
	mov.u32 	%r1787, %r1784;
	mov.u32 	%r1773, %r1784;
	mov.u32 	%r1693, %r1784;
	mov.u32 	%r1694, %r1784;
	mov.u32 	%r1695, %r1784;
	mov.u32 	%r1696, %r1784;
	mov.u32 	%r1697, %r1784;
	mov.u32 	%r1698, %r1784;
	mov.u32 	%r1766, %r1784;
	mov.u32 	%r1767, %r1784;
	mov.u32 	%r1701, %r1784;
	mov.u32 	%r1788, %r1784;
	mov.u32 	%r1703, %r1784;
	mov.u32 	%r1789, %r1784;
	mov.u32 	%r1705, %r1784;
	mov.u32 	%r1769, %r1784;
	mov.u32 	%r1790, %r1784;
	mov.u32 	%r1791, %r1784;
	mov.u32 	%r1709, %r1784;
	mov.u32 	%r1771, %r1784;
	mov.u32 	%r1792, %r1784;
	mov.u32 	%r1793, %r1784;
	mov.u32 	%r1782, %r1784;
	mov.u32 	%r1783, %r1784;
	mov.u32 	%r1715, %r1784;
	mov.u32 	%r1716, %r1784;
	mov.u32 	%r1717, %r1784;
	mov.u32 	%r1718, %r1784;
	mov.u32 	%r1719, %r1784;
	mov.u32 	%r1720, %r1784;
	mov.u32 	%r1721, %r1784;
	mov.u32 	%r1722, %r1784;
	mov.u32 	%r1723, %r1784;
	mov.u32 	%r1724, %r1784;
	mov.u32 	%r1725, %r1784;
	mov.u32 	%r1726, %r1784;
	mov.u32 	%r1727, %r1784;
	mov.u32 	%r1728, %r1784;
	mov.u32 	%r1794, %r1784;
	mov.u32 	%r1795, %r1784;
	mov.u32 	%r1731, %r1784;
	mov.u32 	%r1732, %r1784;
	mov.u32 	%r1733, %r1784;
	mov.u32 	%r1734, %r1784;
	mov.u32 	%r1735, %r1784;
	mov.u32 	%r1736, %r1784;
	mov.u32 	%r1737, %r1784;
	mov.u32 	%r1738, %r1784;
	mov.u32 	%r1739, %r1784;
	mov.u32 	%r1740, %r1784;
	mov.u32 	%r1741, %r1784;
	mov.u32 	%r1742, %r1784;
	mov.u32 	%r1743, %r1784;
	mov.u32 	%r1744, %r1784;
	mov.u32 	%r1745, %r1784;
	mov.u32 	%r1746, %r1784;
	mov.u32 	%r1747, %r1784;
	mov.u32 	%r1748, %r1784;
	mov.u32 	%r1749, %r1784;
	mov.u32 	%r1750, %r1784;
	mov.u32 	%r1751, %r1784;
	mov.u32 	%r1752, %r1784;
	mov.u32 	%r1756, %r1685;
	mov.u32 	%r1757, %r1693;
	mov.u32 	%r1758, %r1695;
	mov.u32 	%r1760, %r1687;

$L__BB0_323:
	mov.u32 	%r503, %r1744;
	mov.u32 	%r502, %r1743;
	mov.u32 	%r499, %r1740;
	mov.u32 	%r498, %r1739;
	mov.u32 	%r495, %r1736;
	mov.u32 	%r492, %r1733;
	mov.u32 	%r1743, %r1728;
	mov.u32 	%r486, %r1727;
	mov.u32 	%r483, %r1724;
	mov.u32 	%r1739, %r1723;
	mov.u32 	%r481, %r1722;
	mov.u32 	%r478, %r1719;
	mov.u32 	%r477, %r1718;
	mov.u32 	%r475, %r1716;
	mov.u32 	%r471, %r1793;
	mov.u32 	%r467, %r1791;
	mov.u32 	%r1744, %r1789;
	mov.u32 	%r462, %r1703;
	mov.u32 	%r1740, %r1788;
	mov.u32 	%r460, %r1701;
	mov.u32 	%r1719, %r1767;
	mov.u32 	%r458, %r1766;
	mov.u32 	%r1736, %r1698;
	mov.u32 	%r456, %r1697;
	mov.u32 	%r1718, %r1696;
	mov.u32 	%r453, %r1694;
	mov.u32 	%r1701, %r1773;
	mov.u32 	%r1722, %r1787;
	mov.u32 	%r1733, %r1690;
	mov.u32 	%r448, %r1689;
	mov.u32 	%r1716, %r1688;
	mov.u32 	%r445, %r1686;
	mov.u32 	%r1723, %r1786;
	mov.u32 	%r1724, %r1765;
	mov.u32 	%r439, %r1764;
	mov.u32 	%r1703, %r1772;
	mov.u32 	%r1728, %r1785;
	mov.u32 	%r1727, %r1784;
	add.s32 	%r1245, %r408, %r1753;
	div.s32 	%r1246, %r1245, %r655;
	mul.lo.s32 	%r1247, %r1246, %r655;
	sub.s32 	%r513, %r1245, %r1247;
	mad.lo.s32 	%r1248, %r1246, %r39, %r407;
	add.s32 	%r1249, %r1753, %r406;
	mad.lo.s32 	%r1250, %r1246, %r409, %r1249;
	div.s32 	%r1251, %r1248, %r656;
	mul.lo.s32 	%r1252, %r1251, %r656;
	sub.s32 	%r514, %r1248, %r1252;
	mad.lo.s32 	%r515, %r1251, %r410, %r1250;
	setp.eq.s32 	%p232, %r31, 0;
	@%p232 bra 	$L__BB0_325;

	shl.b32 	%r1253, %r426, 4;
	add.s32 	%r1254, %r411, %r1253;
	ld.shared.v4.u32 	{%r1694, %r1686, %r1758, %r1760}, [%r1254];
	ld.shared.v4.u32 	{%r1757, %r1756, %r1755, %r1754}, [%r1254+512];

$L__BB0_325:
	setp.eq.s32 	%p233, %r32, 0;
	mov.u32 	%r1762, %r1675;
	mov.u32 	%r1763, %r1676;
	mov.u32 	%r1764, %r439;
	mov.u32 	%r1765, %r1724;
	mov.u32 	%r1766, %r458;
	mov.u32 	%r1767, %r1719;
	mov.u32 	%r1768, %r1705;
	mov.u32 	%r1770, %r1709;
	mov.u32 	%r1772, %r1703;
	mov.u32 	%r1773, %r1701;
	@%p233 bra 	$L__BB0_328;

	shl.b32 	%r1263, %r426, 4;
	add.s32 	%r532, %r412, %r1263;
	ld.shared.v4.u32 	{%r1771, %r1769, %r1763, %r1762}, [%r532];
	ld.shared.v4.u32 	{%r1770, %r1768, %r1764, %r1766}, [%r532+512];
	mov.u32 	%r1765, %r1724;
	mov.u32 	%r1767, %r1719;
	mov.u32 	%r1772, %r1703;
	mov.u32 	%r1773, %r1701;
	@%p232 bra 	$L__BB0_328;

	ld.shared.v4.u32 	{%r1772, %r1773, %r1765, %r1767}, [%r532+1024];

$L__BB0_328:
	mov.b64 	%rd480, _ZN6kernel16SimulationKernelI7__half2fLi7ELb0ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd479, %rd480;
	bar.sync 	0;
	ld.param.u64 	%rd282, [%rd479+184];
	cvta.to.global.u64 	%rd29, %rd282;
	setp.ge.s32 	%p235, %r513, %r414;
	setp.lt.s32 	%p236, %r513, %r413;
	or.pred  	%p237, %p236, %p235;
	setp.lt.s32 	%p238, %r514, %r415;
	or.pred  	%p239, %p237, %p238;
	setp.ge.s32 	%p240, %r514, %r416;
	or.pred  	%p241, %p240, %p239;
	setp.lt.s32 	%p242, %r515, %r661;
	or.pred  	%p243, %p242, %p241;
	setp.ge.s32 	%p244, %r515, %r417;
	or.pred  	%p245, %p243, %p244;
	@%p245 bra 	$L__BB0_570;

	sub.s32 	%r557, %r515, %r661;
	rem.s32 	%r1276, %r557, %r662;
	setp.ne.s32 	%p246, %r1276, 0;
	@%p246 bra 	$L__BB0_570;

	div.s32 	%r1277, %r557, %r662;
	mul.lo.s32 	%r1278, %r1277, %r46;
	mul.lo.s32 	%r558, %r1278, 3;
	add.s32 	%r559, %r430, %r513;
	add.s32 	%r1279, %r559, %r558;
	add.s32 	%r1280, %r1279, -2;
	mul.lo.s32 	%r560, %r1280, %r47;
	add.s32 	%r561, %r431, %r514;
	add.s32 	%r1281, %r561, %r560;
	mul.lo.s32 	%r1282, %r1281, %r48;
	sub.s32 	%r562, %r1282, %r668;
	@%p28 bra 	$L__BB0_335;

	not.pred 	%p248, %p24;
	@%p248 bra 	$L__BB0_333;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1752;
  cvt.f32.f16 %f403, low;}

	// end inline asm
	add.s32 	%r1284, %r562, %r396;
	mul.wide.s32 	%rd283, %r1284, 4;
	add.s64 	%rd284, %rd29, %rd283;
	st.global.f32 	[%rd284], %f403;

$L__BB0_333:
	not.pred 	%p249, %p26;
	@%p249 bra 	$L__BB0_335;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1752;
  cvt.f32.f16 %f404, high;}

	// end inline asm
	add.s32 	%r1286, %r562, %r397;
	mul.wide.s32 	%rd285, %r1286, 4;
	add.s64 	%rd286, %rd29, %rd285;
	st.global.f32 	[%rd286], %f404;

$L__BB0_335:
	@%p28 bra 	$L__BB0_340;

	not.pred 	%p251, %p25;
	@%p251 bra 	$L__BB0_338;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1750;
  cvt.f32.f16 %f405, low;}

	// end inline asm
	add.s32 	%r1288, %r562, %r398;
	mul.wide.s32 	%rd287, %r1288, 4;
	add.s64 	%rd288, %rd29, %rd287;
	st.global.f32 	[%rd288], %f405;

$L__BB0_338:
	not.pred 	%p252, %p27;
	@%p252 bra 	$L__BB0_340;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1750;
  cvt.f32.f16 %f406, high;}

	// end inline asm
	add.s32 	%r1290, %r562, %r399;
	mul.wide.s32 	%rd289, %r1290, 4;
	add.s64 	%rd290, %rd29, %rd289;
	st.global.f32 	[%rd290], %f406;

$L__BB0_340:
	mul.lo.s32 	%r1585, %r1277, %r46;
	mul.lo.s32 	%r1584, %r1585, 3;
	add.s32 	%r563, %r1584, %r46;
	add.s32 	%r1291, %r559, %r563;
	add.s32 	%r1292, %r1291, -2;
	mad.lo.s32 	%r1293, %r1292, %r47, %r561;
	mul.lo.s32 	%r1294, %r1293, %r48;
	sub.s32 	%r564, %r1294, %r668;
	@%p28 bra 	$L__BB0_345;

	not.pred 	%p254, %p24;
	@%p254 bra 	$L__BB0_343;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1751;
  cvt.f32.f16 %f407, low;}

	// end inline asm
	add.s32 	%r1296, %r564, %r396;
	mul.wide.s32 	%rd291, %r1296, 4;
	add.s64 	%rd292, %rd29, %rd291;
	st.global.f32 	[%rd292], %f407;

$L__BB0_343:
	not.pred 	%p255, %p26;
	@%p255 bra 	$L__BB0_345;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1751;
  cvt.f32.f16 %f408, high;}

	// end inline asm
	add.s32 	%r1298, %r564, %r397;
	mul.wide.s32 	%rd293, %r1298, 4;
	add.s64 	%rd294, %rd29, %rd293;
	st.global.f32 	[%rd294], %f408;

$L__BB0_345:
	@%p28 bra 	$L__BB0_350;

	not.pred 	%p257, %p25;
	@%p257 bra 	$L__BB0_348;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1749;
  cvt.f32.f16 %f409, low;}

	// end inline asm
	add.s32 	%r1300, %r564, %r398;
	mul.wide.s32 	%rd295, %r1300, 4;
	add.s64 	%rd296, %rd29, %rd295;
	st.global.f32 	[%rd296], %f409;

$L__BB0_348:
	not.pred 	%p258, %p27;
	@%p258 bra 	$L__BB0_350;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1749;
  cvt.f32.f16 %f410, high;}

	// end inline asm
	add.s32 	%r1302, %r564, %r399;
	mul.wide.s32 	%rd297, %r1302, 4;
	add.s64 	%rd298, %rd29, %rd297;
	st.global.f32 	[%rd298], %f410;

$L__BB0_350:
	add.s32 	%r565, %r561, 1;
	add.s32 	%r1303, %r565, %r560;
	mul.lo.s32 	%r1304, %r1303, %r48;
	sub.s32 	%r566, %r1304, %r668;
	@%p28 bra 	$L__BB0_355;

	not.pred 	%p260, %p24;
	@%p260 bra 	$L__BB0_353;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1748;
  cvt.f32.f16 %f411, low;}

	// end inline asm
	add.s32 	%r1306, %r566, %r396;
	mul.wide.s32 	%rd299, %r1306, 4;
	add.s64 	%rd300, %rd29, %rd299;
	st.global.f32 	[%rd300], %f411;

$L__BB0_353:
	not.pred 	%p261, %p26;
	@%p261 bra 	$L__BB0_355;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1748;
  cvt.f32.f16 %f412, high;}

	// end inline asm
	add.s32 	%r1308, %r566, %r397;
	mul.wide.s32 	%rd301, %r1308, 4;
	add.s64 	%rd302, %rd29, %rd301;
	st.global.f32 	[%rd302], %f412;

$L__BB0_355:
	@%p28 bra 	$L__BB0_360;

	not.pred 	%p263, %p25;
	@%p263 bra 	$L__BB0_358;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1747;
  cvt.f32.f16 %f413, low;}

	// end inline asm
	add.s32 	%r1310, %r566, %r398;
	mul.wide.s32 	%rd303, %r1310, 4;
	add.s64 	%rd304, %rd29, %rd303;
	st.global.f32 	[%rd304], %f413;

$L__BB0_358:
	not.pred 	%p264, %p27;
	@%p264 bra 	$L__BB0_360;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1747;
  cvt.f32.f16 %f414, high;}

	// end inline asm
	add.s32 	%r1312, %r566, %r399;
	mul.wide.s32 	%rd305, %r1312, 4;
	add.s64 	%rd306, %rd29, %rd305;
	st.global.f32 	[%rd306], %f414;

$L__BB0_360:
	mul.lo.s32 	%r1588, %r1277, %r46;
	mul.lo.s32 	%r1587, %r1588, 3;
	add.s32 	%r567, %r559, -1;
	add.s32 	%r1313, %r567, %r1587;
	mul.lo.s32 	%r568, %r1313, %r47;
	add.s32 	%r569, %r561, -1;
	add.s32 	%r1314, %r569, %r568;
	mul.lo.s32 	%r1315, %r1314, %r48;
	sub.s32 	%r570, %r1315, %r668;
	@%p28 bra 	$L__BB0_365;

	not.pred 	%p266, %p24;
	@%p266 bra 	$L__BB0_363;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1795;
  cvt.f32.f16 %f415, low;}

	// end inline asm
	add.s32 	%r1317, %r570, %r396;
	mul.wide.s32 	%rd307, %r1317, 4;
	add.s64 	%rd308, %rd29, %rd307;
	st.global.f32 	[%rd308], %f415;

$L__BB0_363:
	not.pred 	%p267, %p26;
	@%p267 bra 	$L__BB0_365;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1795;
  cvt.f32.f16 %f416, high;}

	// end inline asm
	add.s32 	%r1319, %r570, %r397;
	mul.wide.s32 	%rd309, %r1319, 4;
	add.s64 	%rd310, %rd29, %rd309;
	st.global.f32 	[%rd310], %f416;

$L__BB0_365:
	@%p28 bra 	$L__BB0_370;

	not.pred 	%p269, %p25;
	@%p269 bra 	$L__BB0_368;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1794;
  cvt.f32.f16 %f417, low;}

	// end inline asm
	add.s32 	%r1321, %r570, %r398;
	mul.wide.s32 	%rd311, %r1321, 4;
	add.s64 	%rd312, %rd29, %rd311;
	st.global.f32 	[%rd312], %f417;

$L__BB0_368:
	not.pred 	%p270, %p27;
	@%p270 bra 	$L__BB0_370;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1794;
  cvt.f32.f16 %f418, high;}

	// end inline asm
	add.s32 	%r1323, %r570, %r399;
	mul.wide.s32 	%rd313, %r1323, 4;
	add.s64 	%rd314, %rd29, %rd313;
	st.global.f32 	[%rd314], %f418;

$L__BB0_370:
	add.s32 	%r1589, %r559, -1;
	add.s32 	%r1586, %r561, -1;
	add.s32 	%r1324, %r1589, %r563;
	mul.lo.s32 	%r571, %r1324, %r47;
	add.s32 	%r1325, %r1586, %r571;
	mul.lo.s32 	%r1326, %r1325, %r48;
	sub.s32 	%r572, %r1326, %r668;
	@%p28 bra 	$L__BB0_375;

	not.pred 	%p272, %p24;
	@%p272 bra 	$L__BB0_373;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1746;
  cvt.f32.f16 %f419, low;}

	// end inline asm
	add.s32 	%r1328, %r572, %r396;
	mul.wide.s32 	%rd315, %r1328, 4;
	add.s64 	%rd316, %rd29, %rd315;
	st.global.f32 	[%rd316], %f419;

$L__BB0_373:
	not.pred 	%p273, %p26;
	@%p273 bra 	$L__BB0_375;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1746;
  cvt.f32.f16 %f420, high;}

	// end inline asm
	add.s32 	%r1330, %r572, %r397;
	mul.wide.s32 	%rd317, %r1330, 4;
	add.s64 	%rd318, %rd29, %rd317;
	st.global.f32 	[%rd318], %f420;

$L__BB0_375:
	@%p28 bra 	$L__BB0_380;

	not.pred 	%p275, %p25;
	@%p275 bra 	$L__BB0_378;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1745;
  cvt.f32.f16 %f421, low;}

	// end inline asm
	add.s32 	%r1332, %r572, %r398;
	mul.wide.s32 	%rd319, %r1332, 4;
	add.s64 	%rd320, %rd29, %rd319;
	st.global.f32 	[%rd320], %f421;

$L__BB0_378:
	not.pred 	%p276, %p27;
	@%p276 bra 	$L__BB0_380;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1745;
  cvt.f32.f16 %f422, high;}

	// end inline asm
	add.s32 	%r1334, %r572, %r399;
	mul.wide.s32 	%rd321, %r1334, 4;
	add.s64 	%rd322, %rd29, %rd321;
	st.global.f32 	[%rd322], %f422;

$L__BB0_380:
	add.s32 	%r1335, %r561, %r568;
	mul.lo.s32 	%r1336, %r1335, %r48;
	sub.s32 	%r573, %r1336, %r668;
	@%p28 bra 	$L__BB0_385;

	not.pred 	%p278, %p24;
	@%p278 bra 	$L__BB0_383;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r503;
  cvt.f32.f16 %f423, low;}

	// end inline asm
	add.s32 	%r1338, %r573, %r396;
	mul.wide.s32 	%rd323, %r1338, 4;
	add.s64 	%rd324, %rd29, %rd323;
	st.global.f32 	[%rd324], %f423;

$L__BB0_383:
	not.pred 	%p279, %p26;
	@%p279 bra 	$L__BB0_385;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r503;
  cvt.f32.f16 %f424, high;}

	// end inline asm
	add.s32 	%r1340, %r573, %r397;
	mul.wide.s32 	%rd325, %r1340, 4;
	add.s64 	%rd326, %rd29, %rd325;
	st.global.f32 	[%rd326], %f424;

$L__BB0_385:
	@%p28 bra 	$L__BB0_390;

	not.pred 	%p281, %p25;
	@%p281 bra 	$L__BB0_388;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r499;
  cvt.f32.f16 %f425, low;}

	// end inline asm
	add.s32 	%r1342, %r573, %r398;
	mul.wide.s32 	%rd327, %r1342, 4;
	add.s64 	%rd328, %rd29, %rd327;
	st.global.f32 	[%rd328], %f425;

$L__BB0_388:
	not.pred 	%p282, %p27;
	@%p282 bra 	$L__BB0_390;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r499;
  cvt.f32.f16 %f426, high;}

	// end inline asm
	add.s32 	%r1344, %r573, %r399;
	mul.wide.s32 	%rd329, %r1344, 4;
	add.s64 	%rd330, %rd29, %rd329;
	st.global.f32 	[%rd330], %f426;

$L__BB0_390:
	add.s32 	%r1345, %r561, %r571;
	mul.lo.s32 	%r1346, %r1345, %r48;
	sub.s32 	%r574, %r1346, %r668;
	@%p28 bra 	$L__BB0_395;

	not.pred 	%p284, %p24;
	@%p284 bra 	$L__BB0_393;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r502;
  cvt.f32.f16 %f427, low;}

	// end inline asm
	add.s32 	%r1348, %r574, %r396;
	mul.wide.s32 	%rd331, %r1348, 4;
	add.s64 	%rd332, %rd29, %rd331;
	st.global.f32 	[%rd332], %f427;

$L__BB0_393:
	not.pred 	%p285, %p26;
	@%p285 bra 	$L__BB0_395;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r502;
  cvt.f32.f16 %f428, high;}

	// end inline asm
	add.s32 	%r1350, %r574, %r397;
	mul.wide.s32 	%rd333, %r1350, 4;
	add.s64 	%rd334, %rd29, %rd333;
	st.global.f32 	[%rd334], %f428;

$L__BB0_395:
	@%p28 bra 	$L__BB0_400;

	not.pred 	%p287, %p25;
	@%p287 bra 	$L__BB0_398;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r498;
  cvt.f32.f16 %f429, low;}

	// end inline asm
	add.s32 	%r1352, %r574, %r398;
	mul.wide.s32 	%rd335, %r1352, 4;
	add.s64 	%rd336, %rd29, %rd335;
	st.global.f32 	[%rd336], %f429;

$L__BB0_398:
	not.pred 	%p288, %p27;
	@%p288 bra 	$L__BB0_400;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r498;
  cvt.f32.f16 %f430, high;}

	// end inline asm
	add.s32 	%r1354, %r574, %r399;
	mul.wide.s32 	%rd337, %r1354, 4;
	add.s64 	%rd338, %rd29, %rd337;
	st.global.f32 	[%rd338], %f430;

$L__BB0_400:
	add.s32 	%r1590, %r559, -1;
	add.s32 	%r575, %r563, %r46;
	add.s32 	%r1355, %r1590, %r575;
	mul.lo.s32 	%r576, %r1355, %r47;
	add.s32 	%r1356, %r561, %r576;
	mul.lo.s32 	%r1357, %r1356, %r48;
	sub.s32 	%r577, %r1357, %r668;
	@%p28 bra 	$L__BB0_405;

	not.pred 	%p290, %p24;
	@%p290 bra 	$L__BB0_403;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1742;
  cvt.f32.f16 %f431, low;}

	// end inline asm
	add.s32 	%r1359, %r577, %r396;
	mul.wide.s32 	%rd339, %r1359, 4;
	add.s64 	%rd340, %rd29, %rd339;
	st.global.f32 	[%rd340], %f431;

$L__BB0_403:
	not.pred 	%p291, %p26;
	@%p291 bra 	$L__BB0_405;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1742;
  cvt.f32.f16 %f432, high;}

	// end inline asm
	add.s32 	%r1361, %r577, %r397;
	mul.wide.s32 	%rd341, %r1361, 4;
	add.s64 	%rd342, %rd29, %rd341;
	st.global.f32 	[%rd342], %f432;

$L__BB0_405:
	@%p28 bra 	$L__BB0_410;

	not.pred 	%p293, %p25;
	@%p293 bra 	$L__BB0_408;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1738;
  cvt.f32.f16 %f433, low;}

	// end inline asm
	add.s32 	%r1363, %r577, %r398;
	mul.wide.s32 	%rd343, %r1363, 4;
	add.s64 	%rd344, %rd29, %rd343;
	st.global.f32 	[%rd344], %f433;

$L__BB0_408:
	not.pred 	%p294, %p27;
	@%p294 bra 	$L__BB0_410;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1738;
  cvt.f32.f16 %f434, high;}

	// end inline asm
	add.s32 	%r1365, %r577, %r399;
	mul.wide.s32 	%rd345, %r1365, 4;
	add.s64 	%rd346, %rd29, %rd345;
	st.global.f32 	[%rd346], %f434;

$L__BB0_410:
	add.s32 	%r1568, %r561, 1;
	add.s32 	%r1366, %r1568, %r568;
	mul.lo.s32 	%r1367, %r1366, %r48;
	sub.s32 	%r578, %r1367, %r668;
	@%p28 bra 	$L__BB0_415;

	not.pred 	%p296, %p24;
	@%p296 bra 	$L__BB0_413;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r495;
  cvt.f32.f16 %f435, low;}

	// end inline asm
	add.s32 	%r1369, %r578, %r396;
	mul.wide.s32 	%rd347, %r1369, 4;
	add.s64 	%rd348, %rd29, %rd347;
	st.global.f32 	[%rd348], %f435;

$L__BB0_413:
	not.pred 	%p297, %p26;
	@%p297 bra 	$L__BB0_415;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r495;
  cvt.f32.f16 %f436, high;}

	// end inline asm
	add.s32 	%r1371, %r578, %r397;
	mul.wide.s32 	%rd349, %r1371, 4;
	add.s64 	%rd350, %rd29, %rd349;
	st.global.f32 	[%rd350], %f436;

$L__BB0_415:
	@%p28 bra 	$L__BB0_420;

	not.pred 	%p299, %p25;
	@%p299 bra 	$L__BB0_418;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r492;
  cvt.f32.f16 %f437, low;}

	// end inline asm
	add.s32 	%r1373, %r578, %r398;
	mul.wide.s32 	%rd351, %r1373, 4;
	add.s64 	%rd352, %rd29, %rd351;
	st.global.f32 	[%rd352], %f437;

$L__BB0_418:
	not.pred 	%p300, %p27;
	@%p300 bra 	$L__BB0_420;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r492;
  cvt.f32.f16 %f438, high;}

	// end inline asm
	add.s32 	%r1375, %r578, %r399;
	mul.wide.s32 	%rd353, %r1375, 4;
	add.s64 	%rd354, %rd29, %rd353;
	st.global.f32 	[%rd354], %f438;

$L__BB0_420:
	add.s32 	%r1569, %r561, 1;
	add.s32 	%r1376, %r1569, %r571;
	mul.lo.s32 	%r1377, %r1376, %r48;
	sub.s32 	%r579, %r1377, %r668;
	@%p28 bra 	$L__BB0_425;

	not.pred 	%p302, %p24;
	@%p302 bra 	$L__BB0_423;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1735;
  cvt.f32.f16 %f439, low;}

	// end inline asm
	add.s32 	%r1379, %r579, %r396;
	mul.wide.s32 	%rd355, %r1379, 4;
	add.s64 	%rd356, %rd29, %rd355;
	st.global.f32 	[%rd356], %f439;

$L__BB0_423:
	not.pred 	%p303, %p26;
	@%p303 bra 	$L__BB0_425;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1735;
  cvt.f32.f16 %f440, high;}

	// end inline asm
	add.s32 	%r1381, %r579, %r397;
	mul.wide.s32 	%rd357, %r1381, 4;
	add.s64 	%rd358, %rd29, %rd357;
	st.global.f32 	[%rd358], %f440;

$L__BB0_425:
	@%p28 bra 	$L__BB0_430;

	not.pred 	%p305, %p25;
	@%p305 bra 	$L__BB0_428;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1732;
  cvt.f32.f16 %f441, low;}

	// end inline asm
	add.s32 	%r1383, %r579, %r398;
	mul.wide.s32 	%rd359, %r1383, 4;
	add.s64 	%rd360, %rd29, %rd359;
	st.global.f32 	[%rd360], %f441;

$L__BB0_428:
	not.pred 	%p306, %p27;
	@%p306 bra 	$L__BB0_430;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1732;
  cvt.f32.f16 %f442, high;}

	// end inline asm
	add.s32 	%r1385, %r579, %r399;
	mul.wide.s32 	%rd361, %r1385, 4;
	add.s64 	%rd362, %rd29, %rd361;
	st.global.f32 	[%rd362], %f442;

$L__BB0_430:
	add.s32 	%r1570, %r561, 1;
	add.s32 	%r1386, %r1570, %r576;
	mul.lo.s32 	%r1387, %r1386, %r48;
	sub.s32 	%r580, %r1387, %r668;
	@%p28 bra 	$L__BB0_435;

	not.pred 	%p308, %p24;
	@%p308 bra 	$L__BB0_433;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1734;
  cvt.f32.f16 %f443, low;}

	// end inline asm
	add.s32 	%r1389, %r580, %r396;
	mul.wide.s32 	%rd363, %r1389, 4;
	add.s64 	%rd364, %rd29, %rd363;
	st.global.f32 	[%rd364], %f443;

$L__BB0_433:
	not.pred 	%p309, %p26;
	@%p309 bra 	$L__BB0_435;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1734;
  cvt.f32.f16 %f444, high;}

	// end inline asm
	add.s32 	%r1391, %r580, %r397;
	mul.wide.s32 	%rd365, %r1391, 4;
	add.s64 	%rd366, %rd29, %rd365;
	st.global.f32 	[%rd366], %f444;

$L__BB0_435:
	@%p28 bra 	$L__BB0_440;

	not.pred 	%p311, %p25;
	@%p311 bra 	$L__BB0_438;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1731;
  cvt.f32.f16 %f445, low;}

	// end inline asm
	add.s32 	%r1393, %r580, %r398;
	mul.wide.s32 	%rd367, %r1393, 4;
	add.s64 	%rd368, %rd29, %rd367;
	st.global.f32 	[%rd368], %f445;

$L__BB0_438:
	not.pred 	%p312, %p27;
	@%p312 bra 	$L__BB0_440;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1731;
  cvt.f32.f16 %f446, high;}

	// end inline asm
	add.s32 	%r1395, %r580, %r399;
	mul.wide.s32 	%rd369, %r1395, 4;
	add.s64 	%rd370, %rd29, %rd369;
	st.global.f32 	[%rd370], %f446;

$L__BB0_440:
	add.s32 	%r581, %r561, 2;
	add.s32 	%r1396, %r581, %r568;
	mul.lo.s32 	%r1397, %r1396, %r48;
	sub.s32 	%r582, %r1397, %r668;
	@%p28 bra 	$L__BB0_445;

	not.pred 	%p314, %p24;
	@%p314 bra 	$L__BB0_443;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1783;
  cvt.f32.f16 %f447, low;}

	// end inline asm
	add.s32 	%r1399, %r582, %r396;
	mul.wide.s32 	%rd371, %r1399, 4;
	add.s64 	%rd372, %rd29, %rd371;
	st.global.f32 	[%rd372], %f447;

$L__BB0_443:
	not.pred 	%p315, %p26;
	@%p315 bra 	$L__BB0_445;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1783;
  cvt.f32.f16 %f448, high;}

	// end inline asm
	add.s32 	%r1401, %r582, %r397;
	mul.wide.s32 	%rd373, %r1401, 4;
	add.s64 	%rd374, %rd29, %rd373;
	st.global.f32 	[%rd374], %f448;

$L__BB0_445:
	@%p28 bra 	$L__BB0_450;

	not.pred 	%p317, %p25;
	@%p317 bra 	$L__BB0_448;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1782;
  cvt.f32.f16 %f449, low;}

	// end inline asm
	add.s32 	%r1403, %r582, %r398;
	mul.wide.s32 	%rd375, %r1403, 4;
	add.s64 	%rd376, %rd29, %rd375;
	st.global.f32 	[%rd376], %f449;

$L__BB0_448:
	not.pred 	%p318, %p27;
	@%p318 bra 	$L__BB0_450;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1782;
  cvt.f32.f16 %f450, high;}

	// end inline asm
	add.s32 	%r1405, %r582, %r399;
	mul.wide.s32 	%rd377, %r1405, 4;
	add.s64 	%rd378, %rd29, %rd377;
	st.global.f32 	[%rd378], %f450;

$L__BB0_450:
	mul.lo.s32 	%r1575, %r1277, %r46;
	mul.lo.s32 	%r1574, %r1575, 3;
	add.s32 	%r1573, %r1574, %r46;
	add.s32 	%r1572, %r559, %r1573;
	add.s32 	%r1571, %r561, -1;
	mul.lo.s32 	%r583, %r1572, %r47;
	add.s32 	%r1407, %r1571, %r583;
	mul.lo.s32 	%r1408, %r1407, %r48;
	sub.s32 	%r584, %r1408, %r668;
	@%p28 bra 	$L__BB0_455;

	not.pred 	%p320, %p24;
	@%p320 bra 	$L__BB0_453;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r471;
  cvt.f32.f16 %f451, low;}

	// end inline asm
	add.s32 	%r1410, %r584, %r396;
	mul.wide.s32 	%rd379, %r1410, 4;
	add.s64 	%rd380, %rd29, %rd379;
	st.global.f32 	[%rd380], %f451;

$L__BB0_453:
	not.pred 	%p321, %p26;
	@%p321 bra 	$L__BB0_455;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r471;
  cvt.f32.f16 %f452, high;}

	// end inline asm
	add.s32 	%r1412, %r584, %r397;
	mul.wide.s32 	%rd381, %r1412, 4;
	add.s64 	%rd382, %rd29, %rd381;
	st.global.f32 	[%rd382], %f452;

$L__BB0_455:
	@%p28 bra 	$L__BB0_460;

	not.pred 	%p323, %p25;
	@%p323 bra 	$L__BB0_458;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r467;
  cvt.f32.f16 %f453, low;}

	// end inline asm
	add.s32 	%r1414, %r584, %r398;
	mul.wide.s32 	%rd383, %r1414, 4;
	add.s64 	%rd384, %rd29, %rd383;
	st.global.f32 	[%rd384], %f453;

$L__BB0_458:
	not.pred 	%p324, %p27;
	@%p324 bra 	$L__BB0_460;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r467;
  cvt.f32.f16 %f454, high;}

	// end inline asm
	add.s32 	%r1416, %r584, %r399;
	mul.wide.s32 	%rd385, %r1416, 4;
	add.s64 	%rd386, %rd29, %rd385;
	st.global.f32 	[%rd386], %f454;

$L__BB0_460:
	add.s32 	%r1576, %r561, -1;
	add.s32 	%r1417, %r559, %r575;
	mul.lo.s32 	%r585, %r1417, %r47;
	add.s32 	%r1418, %r1576, %r585;
	mul.lo.s32 	%r1419, %r1418, %r48;
	sub.s32 	%r586, %r1419, %r668;
	@%p28 bra 	$L__BB0_465;

	not.pred 	%p326, %p24;
	@%p326 bra 	$L__BB0_463;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1792;
  cvt.f32.f16 %f455, low;}

	// end inline asm
	add.s32 	%r1421, %r586, %r396;
	mul.wide.s32 	%rd387, %r1421, 4;
	add.s64 	%rd388, %rd29, %rd387;
	st.global.f32 	[%rd388], %f455;

$L__BB0_463:
	not.pred 	%p327, %p26;
	@%p327 bra 	$L__BB0_465;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1792;
  cvt.f32.f16 %f456, high;}

	// end inline asm
	add.s32 	%r1423, %r586, %r397;
	mul.wide.s32 	%rd389, %r1423, 4;
	add.s64 	%rd390, %rd29, %rd389;
	st.global.f32 	[%rd390], %f456;

$L__BB0_465:
	@%p28 bra 	$L__BB0_470;

	not.pred 	%p329, %p25;
	@%p329 bra 	$L__BB0_468;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1790;
  cvt.f32.f16 %f457, low;}

	// end inline asm
	add.s32 	%r1425, %r586, %r398;
	mul.wide.s32 	%rd391, %r1425, 4;
	add.s64 	%rd392, %rd29, %rd391;
	st.global.f32 	[%rd392], %f457;

$L__BB0_468:
	not.pred 	%p330, %p27;
	@%p330 bra 	$L__BB0_470;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1790;
  cvt.f32.f16 %f458, high;}

	// end inline asm
	add.s32 	%r1427, %r586, %r399;
	mul.wide.s32 	%rd393, %r1427, 4;
	add.s64 	%rd394, %rd29, %rd393;
	st.global.f32 	[%rd394], %f458;

$L__BB0_470:
	mul.lo.s32 	%r1579, %r1277, %r46;
	mul.lo.s32 	%r1578, %r1579, 3;
	add.s32 	%r1577, %r559, %r1578;
	mul.lo.s32 	%r587, %r1577, %r47;
	add.s32 	%r1429, %r561, %r587;
	mul.lo.s32 	%r1430, %r1429, %r48;
	sub.s32 	%r588, %r1430, %r668;
	@%p28 bra 	$L__BB0_475;

	not.pred 	%p332, %p24;
	@%p332 bra 	$L__BB0_473;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1744;
  cvt.f32.f16 %f459, low;}

	// end inline asm
	add.s32 	%r1432, %r588, %r396;
	mul.wide.s32 	%rd395, %r1432, 4;
	add.s64 	%rd396, %rd29, %rd395;
	st.global.f32 	[%rd396], %f459;

$L__BB0_473:
	not.pred 	%p333, %p26;
	@%p333 bra 	$L__BB0_475;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1744;
  cvt.f32.f16 %f460, high;}

	// end inline asm
	add.s32 	%r1434, %r588, %r397;
	mul.wide.s32 	%rd397, %r1434, 4;
	add.s64 	%rd398, %rd29, %rd397;
	st.global.f32 	[%rd398], %f460;

$L__BB0_475:
	@%p28 bra 	$L__BB0_480;

	not.pred 	%p335, %p25;
	@%p335 bra 	$L__BB0_478;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1740;
  cvt.f32.f16 %f461, low;}

	// end inline asm
	add.s32 	%r1436, %r588, %r398;
	mul.wide.s32 	%rd399, %r1436, 4;
	add.s64 	%rd400, %rd29, %rd399;
	st.global.f32 	[%rd400], %f461;

$L__BB0_478:
	not.pred 	%p336, %p27;
	@%p336 bra 	$L__BB0_480;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1740;
  cvt.f32.f16 %f462, high;}

	// end inline asm
	add.s32 	%r1438, %r588, %r399;
	mul.wide.s32 	%rd401, %r1438, 4;
	add.s64 	%rd402, %rd29, %rd401;
	st.global.f32 	[%rd402], %f462;

$L__BB0_480:
	add.s32 	%r1439, %r561, %r583;
	mul.lo.s32 	%r1440, %r1439, %r48;
	sub.s32 	%r589, %r1440, %r668;
	@%p28 bra 	$L__BB0_485;

	not.pred 	%p338, %p24;
	@%p338 bra 	$L__BB0_483;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1743;
  cvt.f32.f16 %f463, low;}

	// end inline asm
	add.s32 	%r1442, %r589, %r396;
	mul.wide.s32 	%rd403, %r1442, 4;
	add.s64 	%rd404, %rd29, %rd403;
	st.global.f32 	[%rd404], %f463;

$L__BB0_483:
	not.pred 	%p339, %p26;
	@%p339 bra 	$L__BB0_485;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1743;
  cvt.f32.f16 %f464, high;}

	// end inline asm
	add.s32 	%r1444, %r589, %r397;
	mul.wide.s32 	%rd405, %r1444, 4;
	add.s64 	%rd406, %rd29, %rd405;
	st.global.f32 	[%rd406], %f464;

$L__BB0_485:
	@%p28 bra 	$L__BB0_490;

	not.pred 	%p341, %p25;
	@%p341 bra 	$L__BB0_488;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1739;
  cvt.f32.f16 %f465, low;}

	// end inline asm
	add.s32 	%r1446, %r589, %r398;
	mul.wide.s32 	%rd407, %r1446, 4;
	add.s64 	%rd408, %rd29, %rd407;
	st.global.f32 	[%rd408], %f465;

$L__BB0_488:
	not.pred 	%p342, %p27;
	@%p342 bra 	$L__BB0_490;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1739;
  cvt.f32.f16 %f466, high;}

	// end inline asm
	add.s32 	%r1448, %r589, %r399;
	mul.wide.s32 	%rd409, %r1448, 4;
	add.s64 	%rd410, %rd29, %rd409;
	st.global.f32 	[%rd410], %f466;

$L__BB0_490:
	add.s32 	%r1449, %r561, %r585;
	mul.lo.s32 	%r1450, %r1449, %r48;
	sub.s32 	%r590, %r1450, %r668;
	@%p28 bra 	$L__BB0_495;

	not.pred 	%p344, %p24;
	@%p344 bra 	$L__BB0_493;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r486;
  cvt.f32.f16 %f467, low;}

	// end inline asm
	add.s32 	%r1452, %r590, %r396;
	mul.wide.s32 	%rd411, %r1452, 4;
	add.s64 	%rd412, %rd29, %rd411;
	st.global.f32 	[%rd412], %f467;

$L__BB0_493:
	not.pred 	%p345, %p26;
	@%p345 bra 	$L__BB0_495;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r486;
  cvt.f32.f16 %f468, high;}

	// end inline asm
	add.s32 	%r1454, %r590, %r397;
	mul.wide.s32 	%rd413, %r1454, 4;
	add.s64 	%rd414, %rd29, %rd413;
	st.global.f32 	[%rd414], %f468;

$L__BB0_495:
	@%p28 bra 	$L__BB0_500;

	not.pred 	%p347, %p25;
	@%p347 bra 	$L__BB0_498;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r481;
  cvt.f32.f16 %f469, low;}

	// end inline asm
	add.s32 	%r1456, %r590, %r398;
	mul.wide.s32 	%rd415, %r1456, 4;
	add.s64 	%rd416, %rd29, %rd415;
	st.global.f32 	[%rd416], %f469;

$L__BB0_498:
	not.pred 	%p348, %p27;
	@%p348 bra 	$L__BB0_500;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r481;
  cvt.f32.f16 %f470, high;}

	// end inline asm
	add.s32 	%r1458, %r590, %r399;
	mul.wide.s32 	%rd417, %r1458, 4;
	add.s64 	%rd418, %rd29, %rd417;
	st.global.f32 	[%rd418], %f470;

$L__BB0_500:
	add.s32 	%r1580, %r561, 1;
	add.s32 	%r1459, %r1580, %r587;
	mul.lo.s32 	%r1460, %r1459, %r48;
	sub.s32 	%r591, %r1460, %r668;
	@%p28 bra 	$L__BB0_505;

	not.pred 	%p350, %p24;
	@%p350 bra 	$L__BB0_503;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1736;
  cvt.f32.f16 %f471, low;}

	// end inline asm
	add.s32 	%r1462, %r591, %r396;
	mul.wide.s32 	%rd419, %r1462, 4;
	add.s64 	%rd420, %rd29, %rd419;
	st.global.f32 	[%rd420], %f471;

$L__BB0_503:
	not.pred 	%p351, %p26;
	@%p351 bra 	$L__BB0_505;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1736;
  cvt.f32.f16 %f472, high;}

	// end inline asm
	add.s32 	%r1464, %r591, %r397;
	mul.wide.s32 	%rd421, %r1464, 4;
	add.s64 	%rd422, %rd29, %rd421;
	st.global.f32 	[%rd422], %f472;

$L__BB0_505:
	@%p28 bra 	$L__BB0_510;

	not.pred 	%p353, %p25;
	@%p353 bra 	$L__BB0_508;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1733;
  cvt.f32.f16 %f473, low;}

	// end inline asm
	add.s32 	%r1466, %r591, %r398;
	mul.wide.s32 	%rd423, %r1466, 4;
	add.s64 	%rd424, %rd29, %rd423;
	st.global.f32 	[%rd424], %f473;

$L__BB0_508:
	not.pred 	%p354, %p27;
	@%p354 bra 	$L__BB0_510;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1733;
  cvt.f32.f16 %f474, high;}

	// end inline asm
	add.s32 	%r1468, %r591, %r399;
	mul.wide.s32 	%rd425, %r1468, 4;
	add.s64 	%rd426, %rd29, %rd425;
	st.global.f32 	[%rd426], %f474;

$L__BB0_510:
	add.s32 	%r1581, %r561, 1;
	add.s32 	%r1469, %r1581, %r583;
	mul.lo.s32 	%r1470, %r1469, %r48;
	sub.s32 	%r592, %r1470, %r668;
	@%p28 bra 	$L__BB0_515;

	not.pred 	%p356, %p24;
	@%p356 bra 	$L__BB0_513;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r456;
  cvt.f32.f16 %f475, low;}

	// end inline asm
	add.s32 	%r1472, %r592, %r396;
	mul.wide.s32 	%rd427, %r1472, 4;
	add.s64 	%rd428, %rd29, %rd427;
	st.global.f32 	[%rd428], %f475;

$L__BB0_513:
	not.pred 	%p357, %p26;
	@%p357 bra 	$L__BB0_515;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r456;
  cvt.f32.f16 %f476, high;}

	// end inline asm
	add.s32 	%r1474, %r592, %r397;
	mul.wide.s32 	%rd429, %r1474, 4;
	add.s64 	%rd430, %rd29, %rd429;
	st.global.f32 	[%rd430], %f476;

$L__BB0_515:
	@%p28 bra 	$L__BB0_520;

	not.pred 	%p359, %p25;
	@%p359 bra 	$L__BB0_518;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r448;
  cvt.f32.f16 %f477, low;}

	// end inline asm
	add.s32 	%r1476, %r592, %r398;
	mul.wide.s32 	%rd431, %r1476, 4;
	add.s64 	%rd432, %rd29, %rd431;
	st.global.f32 	[%rd432], %f477;

$L__BB0_518:
	not.pred 	%p360, %p27;
	@%p360 bra 	$L__BB0_520;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r448;
  cvt.f32.f16 %f478, high;}

	// end inline asm
	add.s32 	%r1478, %r592, %r399;
	mul.wide.s32 	%rd433, %r1478, 4;
	add.s64 	%rd434, %rd29, %rd433;
	st.global.f32 	[%rd434], %f478;

$L__BB0_520:
	add.s32 	%r1582, %r561, 1;
	add.s32 	%r1479, %r1582, %r585;
	mul.lo.s32 	%r1480, %r1479, %r48;
	sub.s32 	%r593, %r1480, %r668;
	@%p28 bra 	$L__BB0_525;

	not.pred 	%p362, %p24;
	@%p362 bra 	$L__BB0_523;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r477;
  cvt.f32.f16 %f479, low;}

	// end inline asm
	add.s32 	%r1482, %r593, %r396;
	mul.wide.s32 	%rd435, %r1482, 4;
	add.s64 	%rd436, %rd29, %rd435;
	st.global.f32 	[%rd436], %f479;

$L__BB0_523:
	not.pred 	%p363, %p26;
	@%p363 bra 	$L__BB0_525;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r477;
  cvt.f32.f16 %f480, high;}

	// end inline asm
	add.s32 	%r1484, %r593, %r397;
	mul.wide.s32 	%rd437, %r1484, 4;
	add.s64 	%rd438, %rd29, %rd437;
	st.global.f32 	[%rd438], %f480;

$L__BB0_525:
	@%p28 bra 	$L__BB0_530;

	not.pred 	%p365, %p25;
	@%p365 bra 	$L__BB0_528;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r475;
  cvt.f32.f16 %f481, low;}

	// end inline asm
	add.s32 	%r1486, %r593, %r398;
	mul.wide.s32 	%rd439, %r1486, 4;
	add.s64 	%rd440, %rd29, %rd439;
	st.global.f32 	[%rd440], %f481;

$L__BB0_528:
	not.pred 	%p366, %p27;
	@%p366 bra 	$L__BB0_530;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r475;
  cvt.f32.f16 %f482, high;}

	// end inline asm
	add.s32 	%r1488, %r593, %r399;
	mul.wide.s32 	%rd441, %r1488, 4;
	add.s64 	%rd442, %rd29, %rd441;
	st.global.f32 	[%rd442], %f482;

$L__BB0_530:
	add.s32 	%r1591, %r561, 2;
	add.s32 	%r1489, %r1591, %r585;
	mul.lo.s32 	%r1490, %r1489, %r48;
	sub.s32 	%r594, %r1490, %r668;
	@%p28 bra 	$L__BB0_535;

	not.pred 	%p368, %p24;
	@%p368 bra 	$L__BB0_533;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1775;
  cvt.f32.f16 %f483, low;}

	// end inline asm
	add.s32 	%r1492, %r594, %r396;
	mul.wide.s32 	%rd443, %r1492, 4;
	add.s64 	%rd444, %rd29, %rd443;
	st.global.f32 	[%rd444], %f483;

$L__BB0_533:
	not.pred 	%p369, %p26;
	@%p369 bra 	$L__BB0_535;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1775;
  cvt.f32.f16 %f484, high;}

	// end inline asm
	add.s32 	%r1494, %r594, %r397;
	mul.wide.s32 	%rd445, %r1494, 4;
	add.s64 	%rd446, %rd29, %rd445;
	st.global.f32 	[%rd446], %f484;

$L__BB0_535:
	@%p28 bra 	$L__BB0_540;

	not.pred 	%p371, %p25;
	@%p371 bra 	$L__BB0_538;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1774;
  cvt.f32.f16 %f485, low;}

	// end inline asm
	add.s32 	%r1496, %r594, %r398;
	mul.wide.s32 	%rd447, %r1496, 4;
	add.s64 	%rd448, %rd29, %rd447;
	st.global.f32 	[%rd448], %f485;

$L__BB0_538:
	not.pred 	%p372, %p27;
	@%p372 bra 	$L__BB0_540;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1774;
  cvt.f32.f16 %f486, high;}

	// end inline asm
	add.s32 	%r1498, %r594, %r399;
	mul.wide.s32 	%rd449, %r1498, 4;
	add.s64 	%rd450, %rd29, %rd449;
	st.global.f32 	[%rd450], %f486;

$L__BB0_540:
	add.s32 	%r595, %r559, 1;
	add.s32 	%r1499, %r595, %r563;
	mad.lo.s32 	%r1500, %r1499, %r47, %r561;
	mul.lo.s32 	%r1501, %r1500, %r48;
	sub.s32 	%r596, %r1501, %r668;
	@%p28 bra 	$L__BB0_545;

	not.pred 	%p374, %p24;
	@%p374 bra 	$L__BB0_543;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1728;
  cvt.f32.f16 %f487, low;}

	// end inline asm
	add.s32 	%r1503, %r596, %r396;
	mul.wide.s32 	%rd451, %r1503, 4;
	add.s64 	%rd452, %rd29, %rd451;
	st.global.f32 	[%rd452], %f487;

$L__BB0_543:
	not.pred 	%p375, %p26;
	@%p375 bra 	$L__BB0_545;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1728;
  cvt.f32.f16 %f488, high;}

	// end inline asm
	add.s32 	%r1505, %r596, %r397;
	mul.wide.s32 	%rd453, %r1505, 4;
	add.s64 	%rd454, %rd29, %rd453;
	st.global.f32 	[%rd454], %f488;

$L__BB0_545:
	@%p28 bra 	$L__BB0_550;

	not.pred 	%p377, %p25;
	@%p377 bra 	$L__BB0_548;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1723;
  cvt.f32.f16 %f489, low;}

	// end inline asm
	add.s32 	%r1507, %r596, %r398;
	mul.wide.s32 	%rd455, %r1507, 4;
	add.s64 	%rd456, %rd29, %rd455;
	st.global.f32 	[%rd456], %f489;

$L__BB0_548:
	not.pred 	%p378, %p27;
	@%p378 bra 	$L__BB0_550;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1723;
  cvt.f32.f16 %f490, high;}

	// end inline asm
	add.s32 	%r1509, %r596, %r399;
	mul.wide.s32 	%rd457, %r1509, 4;
	add.s64 	%rd458, %rd29, %rd457;
	st.global.f32 	[%rd458], %f490;

$L__BB0_550:
	add.s32 	%r1510, %r595, %r575;
	mul.lo.s32 	%r597, %r1510, %r47;
	add.s32 	%r1511, %r561, %r597;
	mul.lo.s32 	%r1512, %r1511, %r48;
	sub.s32 	%r598, %r1512, %r668;
	@%p28 bra 	$L__BB0_555;

	not.pred 	%p380, %p24;
	@%p380 bra 	$L__BB0_553;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1727;
  cvt.f32.f16 %f491, low;}

	// end inline asm
	add.s32 	%r1514, %r598, %r396;
	mul.wide.s32 	%rd459, %r1514, 4;
	add.s64 	%rd460, %rd29, %rd459;
	st.global.f32 	[%rd460], %f491;

$L__BB0_553:
	not.pred 	%p381, %p26;
	@%p381 bra 	$L__BB0_555;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1727;
  cvt.f32.f16 %f492, high;}

	// end inline asm
	add.s32 	%r1516, %r598, %r397;
	mul.wide.s32 	%rd461, %r1516, 4;
	add.s64 	%rd462, %rd29, %rd461;
	st.global.f32 	[%rd462], %f492;

$L__BB0_555:
	@%p28 bra 	$L__BB0_560;

	not.pred 	%p383, %p25;
	@%p383 bra 	$L__BB0_558;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1722;
  cvt.f32.f16 %f493, low;}

	// end inline asm
	add.s32 	%r1518, %r598, %r398;
	mul.wide.s32 	%rd463, %r1518, 4;
	add.s64 	%rd464, %rd29, %rd463;
	st.global.f32 	[%rd464], %f493;

$L__BB0_558:
	not.pred 	%p384, %p27;
	@%p384 bra 	$L__BB0_560;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1722;
  cvt.f32.f16 %f494, high;}

	// end inline asm
	add.s32 	%r1520, %r598, %r399;
	mul.wide.s32 	%rd465, %r1520, 4;
	add.s64 	%rd466, %rd29, %rd465;
	st.global.f32 	[%rd466], %f494;

$L__BB0_560:
	add.s32 	%r1583, %r561, 1;
	add.s32 	%r1521, %r1583, %r597;
	mul.lo.s32 	%r1522, %r1521, %r48;
	sub.s32 	%r599, %r1522, %r668;
	@%p28 bra 	$L__BB0_565;

	not.pred 	%p386, %p24;
	@%p386 bra 	$L__BB0_563;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1718;
  cvt.f32.f16 %f495, low;}

	// end inline asm
	add.s32 	%r1524, %r599, %r396;
	mul.wide.s32 	%rd467, %r1524, 4;
	add.s64 	%rd468, %rd29, %rd467;
	st.global.f32 	[%rd468], %f495;

$L__BB0_563:
	not.pred 	%p387, %p26;
	@%p387 bra 	$L__BB0_565;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1718;
  cvt.f32.f16 %f496, high;}

	// end inline asm
	add.s32 	%r1526, %r599, %r397;
	mul.wide.s32 	%rd469, %r1526, 4;
	add.s64 	%rd470, %rd29, %rd469;
	st.global.f32 	[%rd470], %f496;

$L__BB0_565:
	@%p28 bra 	$L__BB0_570;

	not.pred 	%p389, %p25;
	@%p389 bra 	$L__BB0_568;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1716;
  cvt.f32.f16 %f497, low;}

	// end inline asm
	add.s32 	%r1528, %r599, %r398;
	mul.wide.s32 	%rd471, %r1528, 4;
	add.s64 	%rd472, %rd29, %rd471;
	st.global.f32 	[%rd472], %f497;

$L__BB0_568:
	not.pred 	%p390, %p27;
	@%p390 bra 	$L__BB0_570;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1716;
  cvt.f32.f16 %f498, high;}

	// end inline asm
	add.s32 	%r1530, %r599, %r399;
	mul.wide.s32 	%rd473, %r1530, 4;
	add.s64 	%rd474, %rd29, %rd473;
	st.global.f32 	[%rd474], %f498;

$L__BB0_570:
	setp.eq.s32 	%p391, %r31, %r379;
	@%p391 bra 	$L__BB0_572;

	st.shared.v4.u32 	[%r419], {%r1795, %r1794, %r1792, %r1790};
	st.shared.v4.u32 	[%r419+768], {%r1752, %r1750, %r1742, %r1738};
	add.s32 	%r1567, %r1219, 768;
	st.shared.v2.u32 	[%r1567], {%r1746, %r1745};

$L__BB0_572:
	setp.eq.s32 	%p392, %r32, %r382;
	@%p392 bra 	$L__BB0_576;

	setp.eq.s32 	%p406, %r31, %r379;
	st.shared.v4.u32 	[%r422], {%r1748, %r1747, %r1734, %r1731};
	st.shared.v4.u32 	[%r422+768], {%r1783, %r1782, %r1775, %r1774};
	@%p406 bra 	$L__BB0_575;

	st.shared.v2.u32 	[%r424], {%r1751, %r1749};

$L__BB0_575:
	st.shared.v2.u32 	[%r424+768], {%r1735, %r1732};

$L__BB0_576:
	bar.sync 	0;
	mov.u32 	%r1689, %r448;
	mov.u32 	%r1690, %r1733;
	mov.u32 	%r1697, %r456;
	mov.u32 	%r1698, %r1736;
	mov.u32 	%r1696, %r1718;
	mov.u32 	%r1688, %r1716;
	@%p232 bra 	$L__BB0_578;

	shl.b32 	%r1531, %r418, 4;
	add.s32 	%r1532, %r423, %r1531;
	ld.shared.v4.u32 	{%r1698, %r1690, %r1696, %r1688}, [%r1532];
	ld.shared.v4.u32 	{%r1783, %r1782, %r1775, %r1774}, [%r1532+768];
	shl.b32 	%r1541, %r420, 3;
	add.s32 	%r1542, %r423, %r1541;
	ld.shared.v2.u32 	{%r1697, %r1689}, [%r1542];

$L__BB0_578:
	setp.eq.s32 	%p405, %r32, 0;
	mov.u32 	%r1784, %r1727;
	mov.u32 	%r1785, %r1728;
	mov.u32 	%r1786, %r1723;
	mov.u32 	%r1787, %r1722;
	mov.u32 	%r1788, %r1740;
	mov.u32 	%r1789, %r1744;
	mov.u32 	%r1791, %r467;
	mov.u32 	%r1793, %r471;
	@%p405 bra 	$L__BB0_581;

	shl.b32 	%r1545, %r418, 4;
	add.s32 	%r1546, %r425, %r1545;
	ld.shared.v4.u32 	{%r1795, %r1794, %r1792, %r1790}, [%r1546];
	ld.shared.v4.u32 	{%r1789, %r1788, %r1784, %r1787}, [%r1546+768];
	shl.b32 	%r1555, %r420, 3;
	add.s32 	%r629, %r425, %r1555;
	ld.shared.v2.u32 	{%r1793, %r1791}, [%r629];
	mov.u32 	%r1785, %r1728;
	mov.u32 	%r1786, %r1723;
	@%p232 bra 	$L__BB0_581;

	ld.shared.v2.u32 	{%r1785, %r1786}, [%r629+768];

$L__BB0_581:
	setp.eq.s32 	%p407, %r31, %r379;
	bar.sync 	0;
	@%p407 bra 	$L__BB0_584;

	setp.ne.s32 	%p398, %r32, %r382;
	st.shared.v4.u32 	[%r427], {%r1771, %r1769, %r1676, %r1675};
	st.shared.v4.u32 	[%r427+512], {%r1709, %r1705, %r1725, %r1720};
	@%p398 bra 	$L__BB0_584;

	st.shared.v4.u32 	[%r427+1024], {%r1726, %r1721, %r1741, %r1737};

$L__BB0_584:
	@%p392 bra 	$L__BB0_586;

	st.shared.v4.u32 	[%r428], {%r1726, %r1721, %r1741, %r1737};
	st.shared.v4.u32 	[%r428+512], {%r1717, %r1715, %r1695, %r1687};
	st.shared.v4.u32 	[%r428+1024], {%r1693, %r1685, %r1755, %r1754};

$L__BB0_586:
	rem.s32 	%r1560, %r1753, %r654;
	setp.eq.s32 	%p400, %r1560, 0;
	@%p400 bra 	$L__BB0_588;

	bar.sync 	0;
	bra.uni 	$L__BB0_595;

$L__BB0_588:
	@%p218 bra 	$L__BB0_590;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_590:
	bar.sync 	0;
	@%p219 bra 	$L__BB0_594;

	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1561,[%rd28],%r429;
	// end inline asm

$L__BB0_592:
	ld.volatile.u32 	%r1563, [%rd28];
	xor.b32  	%r1564, %r1563, %r1561;
	setp.gt.s32 	%p403, %r1564, -1;
	@%p403 bra 	$L__BB0_592;

	// begin inline asm
	ld.acquire.gpu.u32 %r1565,[%rd28];
	// end inline asm

$L__BB0_594:
	bar.sync 	0;

$L__BB0_595:
	add.s32 	%r1753, %r1753, 1;
	setp.lt.s32 	%p404, %r1753, %r40;
	mov.u32 	%r1675, %r1762;
	mov.u32 	%r1676, %r1763;
	mov.u32 	%r1685, %r1756;
	mov.u32 	%r1687, %r1760;
	mov.u32 	%r1693, %r1757;
	mov.u32 	%r1695, %r1758;
	mov.u32 	%r1705, %r1768;
	mov.u32 	%r1709, %r1770;
	mov.u32 	%r1715, %r445;
	mov.u32 	%r1717, %r453;
	mov.u32 	%r1720, %r458;
	mov.u32 	%r1721, %r460;
	mov.u32 	%r1725, %r439;
	mov.u32 	%r1726, %r462;
	mov.u32 	%r1731, %r475;
	mov.u32 	%r1732, %r448;
	mov.u32 	%r1734, %r477;
	mov.u32 	%r1735, %r456;
	mov.u32 	%r1737, %r478;
	mov.u32 	%r1738, %r481;
	mov.u32 	%r1741, %r483;
	mov.u32 	%r1742, %r486;
	mov.u32 	%r1745, %r467;
	mov.u32 	%r1746, %r471;
	mov.u32 	%r1747, %r492;
	mov.u32 	%r1748, %r495;
	mov.u32 	%r1749, %r498;
	mov.u32 	%r1750, %r499;
	mov.u32 	%r1751, %r502;
	mov.u32 	%r1752, %r503;
	@%p404 bra 	$L__BB0_323;

$L__BB0_596:
	ret;

}

