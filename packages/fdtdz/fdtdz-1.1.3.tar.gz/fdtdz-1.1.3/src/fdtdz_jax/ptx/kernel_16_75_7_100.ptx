//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[192]
)
{
	.reg .pred 	%p<426>;
	.reg .f32 	%f<513>;
	.reg .b32 	%r<2252>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<575>;


	mov.b64 	%rd44, _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd44;
	ld.param.v2.u32 	{%r772, %r773}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r774, %r775}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r776, %r777}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r778, %r779}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r780, %r781}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r782, %r783}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r784, %r785}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	ld.param.v2.u32 	{%r786, %r787}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+56];
	ld.param.v2.u32 	{%r788, %r789}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+64];
	ld.param.v2.u32 	{%r790, %r791}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+72];
	ld.param.v2.u32 	{%r792, %r793}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+80];
	ld.param.v2.u32 	{%r794, %r795}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+88];
	ld.param.v2.u32 	{%r796, %r797}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+96];
	mov.u32 	%r40, %tid.y;
	mov.u32 	%r41, %tid.z;
	mov.u32 	%r42, %ctaid.y;
	mov.u32 	%r43, %ctaid.z;
	mov.u32 	%r798, 32;
	sub.s32 	%r44, %r798, %r779;
	mov.u32 	%r45, %tid.x;
	setp.le.s32 	%p28, %r44, %r45;
	add.s32 	%r799, %r785, -1;
	add.s32 	%r800, %r783, %r777;
	add.s32 	%r801, %r800, %r778;
	add.s32 	%r802, %r801, 1;
	mad.lo.s32 	%r803, %r799, %r784, %r802;
	mul.lo.s32 	%r804, %r772, %r774;
	shl.b32 	%r46, %r804, 1;
	shl.b32 	%r805, %r804, 2;
	div.s32 	%r806, %r803, %r805;
	add.s32 	%r807, %r806, 1;
	mul.lo.s32 	%r808, %r807, %r778;
	mul.lo.s32 	%r809, %r773, %r775;
	shl.b32 	%r47, %r809, 1;
	div.s32 	%r810, %r808, %r47;
	add.s32 	%r811, %r810, 1;
	mul.lo.s32 	%r48, %r811, %r777;
	ld.param.u64 	%rd45, [%rd1+184];
	cvta.to.global.u64 	%rd2, %rd45;
	mad.lo.s32 	%r814, %r774, %r43, %r42;
	mad.lo.s32 	%r815, %r814, %r773, %r41;
	mul.lo.s32 	%r49, %r815, %r772;
	add.s32 	%r816, %r49, %r40;
	shl.b32 	%r50, %r816, 5;
	add.s32 	%r1950, %r50, %r45;
	mul.lo.s32 	%r817, %r809, %r804;
	shl.b32 	%r54, %r817, 5;
	mov.u32 	%r818, 8;
	sub.s32 	%r819, %r818, %r786;
	add.s32 	%r820, %r819, %r787;
	sub.s32 	%r821, %r818, %r788;
	add.s32 	%r822, %r821, %r789;
	sub.s32 	%r55, %r791, %r790;
	mul.lo.s32 	%r823, %r785, %r55;
	mul.lo.s32 	%r824, %r823, %r822;
	mul.lo.s32 	%r825, %r824, %r820;
	mul.lo.s32 	%r56, %r825, 3;
	setp.ge.s32 	%p29, %r1950, %r56;
	@%p29 bra 	$L__BB0_9;

	add.s32 	%r826, %r789, 8;
	sub.s32 	%r827, %r826, %r788;
	mul.lo.s32 	%r828, %r785, %r827;
	add.s32 	%r829, %r787, 8;
	sub.s32 	%r830, %r829, %r786;
	mul.lo.s32 	%r831, %r828, %r830;
	mul.lo.s32 	%r832, %r831, %r55;
	not.b32 	%r833, %r45;
	mad.lo.s32 	%r834, %r832, 3, %r833;
	sub.s32 	%r835, %r834, %r50;
	mul.lo.s32 	%r836, %r809, %r772;
	mul.lo.s32 	%r837, %r836, %r774;
	shl.b32 	%r57, %r837, 5;
	div.u32 	%r58, %r835, %r57;
	add.s32 	%r838, %r58, 1;
	and.b32  	%r1947, %r838, 3;
	setp.eq.s32 	%p30, %r1947, 0;
	mov.u32 	%r1948, %r1950;
	@%p30 bra 	$L__BB0_6;

	shl.b32 	%r839, %r49, 5;
	add.s32 	%r840, %r45, %r839;
	shl.b32 	%r841, %r40, 5;
	add.s32 	%r1948, %r840, %r841;
	mul.wide.s32 	%rd46, %r1950, 4;
	add.s64 	%rd572, %rd2, %rd46;
	mul.wide.s32 	%rd4, %r57, 4;

$L__BB0_5:
	.pragma "nounroll";
	mov.u32 	%r842, 0;
	st.global.u32 	[%rd572], %r842;
	add.s32 	%r1948, %r1948, %r57;
	add.s64 	%rd572, %rd572, %rd4;
	add.s32 	%r1947, %r1947, -1;
	setp.ne.s32 	%p31, %r1947, 0;
	@%p31 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p32, %r58, 3;
	@%p32 bra 	$L__BB0_9;

	mul.wide.s32 	%rd49, %r54, 4;

$L__BB0_8:
	mul.wide.s32 	%rd47, %r1948, 4;
	add.s64 	%rd48, %rd2, %rd47;
	mov.u32 	%r843, 0;
	st.global.u32 	[%rd48], %r843;
	add.s64 	%rd50, %rd48, %rd49;
	st.global.u32 	[%rd50], %r843;
	add.s32 	%r844, %r1948, %r54;
	add.s32 	%r845, %r844, %r54;
	add.s64 	%rd51, %rd50, %rd49;
	st.global.u32 	[%rd51], %r843;
	add.s32 	%r846, %r845, %r54;
	add.s64 	%rd52, %rd51, %rd49;
	st.global.u32 	[%rd52], %r843;
	add.s32 	%r1948, %r846, %r54;
	setp.lt.s32 	%p33, %r1948, %r56;
	@%p33 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd53, [%rd1+104];
	cvta.to.global.u64 	%rd7, %rd53;
	sub.s32 	%r847, %r778, %r46;
	div.s32 	%r848, %r847, %r47;
	mul.lo.s32 	%r849, %r848, %r777;
	sub.s32 	%r68, %r849, %r46;
	sub.s32 	%r850, %r777, %r47;
	mul.lo.s32 	%r851, %r850, %r774;
	mul.lo.s32 	%r69, %r772, 384;
	add.s32 	%r852, %r69, %r69;
	add.s32 	%r853, %r852, 128;
	mul.lo.s32 	%r855, %r809, 768;
	mul.lo.s32 	%r856, %r851, %r853;
	mad.lo.s32 	%r70, %r855, %r68, %r856;
	bra.uni 	$L__BB0_10;

$L__BB0_618:
	mov.f32 	%f500, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f500;
  cvt.rn.f16.f32 high, %f500;
  mov.b32 %r1914, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd566, %r1950, 4;
	add.s64 	%rd567, %rd7, %rd566;
	st.global.u32 	[%rd567], %r1914;
	add.s32 	%r1950, %r1950, %r54;

$L__BB0_10:
	setp.lt.s32 	%p34, %r1950, %r70;
	@%p34 bra 	$L__BB0_618;

	ld.param.u64 	%rd54, [%rd1+144];
	cvta.to.global.u64 	%rd9, %rd54;
	ld.param.u64 	%rd55, [%rd1+112];
	cvta.to.global.u64 	%rd10, %rd55;
	ld.param.u64 	%rd56, [%rd1+152];
	cvta.to.global.u64 	%rd11, %rd56;
	mad.lo.s32 	%r1986, %r772, %r42, %r40;
	mul.lo.s32 	%r79, %r773, %r43;
	add.s32 	%r80, %r79, %r41;
	setp.ge.s32 	%p35, %r1986, %r777;
	@%p35 bra 	$L__BB0_65;

	mov.u32 	%r857, 31;
	sub.s32 	%r858, %r857, %r45;
	setp.gt.s32 	%p36, %r44, %r45;
	selp.b32 	%r859, %r45, %r858, %p36;
	shl.b32 	%r860, %r859, 2;
	mov.u32 	%r861, 2;
	sub.s32 	%r81, %r860, %r780;
	shl.b32 	%r862, %r779, 2;
	mov.u32 	%r863, 128;
	sub.s32 	%r82, %r863, %r862;
	sub.s32 	%r864, %r861, %r780;
	add.s32 	%r83, %r864, %r860;
	ld.param.f32 	%f83, [%rd1+136];
	rcp.rn.f32 	%f1, %f83;
	sub.s32 	%r84, %r787, %r786;
	sub.s32 	%r85, %r789, %r788;
	add.s32 	%r86, %r787, -1;
	add.s32 	%r87, %r789, -1;
	add.s32 	%r88, %r791, -1;
	mul.lo.s32 	%r865, %r778, %r777;
	shl.b32 	%r89, %r865, 6;
	add.s32 	%r90, %r777, -1;
	selp.f32 	%f2, 0f00000000, 0f3F800000, %p36;
	add.s32 	%r91, %r81, 1;
	add.s32 	%r92, %r83, 1;
	shl.b32 	%r93, %r45, 1;
	or.b32  	%r94, %r93, 1;
	shr.u32 	%r866, %r94, 31;
	add.s32 	%r867, %r94, %r866;
	shr.s32 	%r96, %r867, 1;
	and.b32  	%r868, %r867, -2;
	sub.s32 	%r869, %r94, %r868;
	add.s32 	%r95, %r869, %r89;
	rem.s32 	%r928, %r91, %r82;
	add.s32 	%r929, %r928, %r82;
	rem.s32 	%r930, %r929, %r82;
	rem.s32 	%r931, %r92, %r82;
	add.s32 	%r932, %r931, %r82;
	rem.s32 	%r933, %r932, %r82;
	mov.u32 	%r1951, %r1986;

$L__BB0_13:
	setp.ge.s32 	%p37, %r80, %r778;
	@%p37 bra 	$L__BB0_64;

	setp.ge.s32 	%p38, %r1951, %r792;
	setp.lt.s32 	%p39, %r1951, %r793;
	and.pred  	%p1, %p39, %p38;
	setp.lt.s32 	%p40, %r1951, %r787;
	setp.ge.s32 	%p41, %r1951, %r786;
	and.pred  	%p2, %p40, %p41;
	selp.b32 	%r870, %r1951, %r86, %p40;
	setp.lt.s32 	%p42, %r1951, %r786;
	selp.b32 	%r871, %r786, %r870, %p42;
	sub.s32 	%r872, %r871, %r786;
	add.s32 	%r98, %r90, %r1951;
	rem.s32 	%r873, %r81, %r82;
	add.s32 	%r874, %r873, %r82;
	rem.s32 	%r99, %r874, %r82;
	rem.s32 	%r875, %r83, %r82;
	add.s32 	%r876, %r875, %r82;
	rem.s32 	%r100, %r876, %r82;
	setp.lt.s32 	%p43, %r99, %r791;
	sub.s32 	%r101, %r99, %r790;
	setp.lt.s32 	%p44, %r99, %r790;
	selp.b32 	%r877, %r99, %r88, %p43;
	selp.b32 	%r878, %r790, %r877, %p44;
	sub.s32 	%r102, %r878, %r790;
	setp.lt.s32 	%p45, %r100, %r791;
	sub.s32 	%r103, %r100, %r790;
	setp.lt.s32 	%p46, %r100, %r790;
	selp.b32 	%r879, %r100, %r88, %p45;
	selp.b32 	%r880, %r790, %r879, %p46;
	sub.s32 	%r104, %r880, %r790;
	sub.s32 	%r881, %r1951, %r786;
	mul.lo.s32 	%r105, %r881, %r85;
	mul.lo.s32 	%r106, %r872, %r85;
	add.s32 	%r882, %r881, %r84;
	mul.lo.s32 	%r107, %r882, %r85;
	add.s32 	%r883, %r872, %r84;
	mul.lo.s32 	%r108, %r883, %r85;
	add.s32 	%r884, %r882, %r84;
	mul.lo.s32 	%r109, %r884, %r85;
	add.s32 	%r885, %r883, %r84;
	mul.lo.s32 	%r110, %r885, %r85;
	mov.u32 	%r1952, %r80;

$L__BB0_15:
	setp.ge.s32 	%p47, %r1952, %r794;
	and.pred  	%p48, %p1, %p47;
	setp.lt.s32 	%p49, %r1952, %r795;
	and.pred  	%p3, %p49, %p48;
	setp.ge.s32 	%p50, %r1952, %r788;
	and.pred  	%p51, %p2, %p50;
	setp.lt.s32 	%p52, %r1952, %r789;
	and.pred  	%p4, %p52, %p51;
	sub.s32 	%r112, %r1952, %r788;
	selp.b32 	%r886, %r1952, %r87, %p52;
	setp.lt.s32 	%p53, %r1952, %r788;
	selp.b32 	%r887, %r788, %r886, %p53;
	sub.s32 	%r113, %r887, %r788;
	mul.lo.s32 	%r114, %r1952, %r777;
	add.s32 	%r115, %r114, %r1951;
	shl.b32 	%r116, %r115, 6;
	setp.ge.s32 	%p54, %r99, %r796;
	and.pred  	%p55, %p3, %p54;
	setp.lt.s32 	%p56, %r99, %r797;
	and.pred  	%p57, %p56, %p55;
	setp.ge.s32 	%p58, %r99, %r790;
	and.pred  	%p59, %p4, %p58;
	and.pred  	%p5, %p43, %p59;
	setp.ge.s32 	%p61, %r100, %r790;
	and.pred  	%p62, %p4, %p61;
	and.pred  	%p6, %p45, %p62;
	mul.wide.s32 	%rd57, %r115, 4;
	add.s64 	%rd12, %rd11, %rd57;
	ld.global.f32 	%f84, [%rd12];
	fma.rn.f32 	%f3, %f84, 0f3F000000, %f1;
	and.pred  	%p7, %p36, %p57;
	not.pred 	%p65, %p7;
	mov.f32 	%f501, %f2;
	@%p65 bra 	$L__BB0_19;

	@%p5 bra 	$L__BB0_18;
	bra.uni 	$L__BB0_17;

$L__BB0_18:
	add.s32 	%r890, %r112, %r105;
	mad.lo.s32 	%r891, %r890, %r55, %r101;
	mul.wide.s32 	%rd60, %r891, 4;
	add.s64 	%rd61, %rd9, %rd60;
	ld.global.f32 	%f501, [%rd61];
	bra.uni 	$L__BB0_19;

$L__BB0_17:
	add.s32 	%r888, %r113, %r106;
	mad.lo.s32 	%r889, %r888, %r55, %r102;
	mul.wide.s32 	%rd58, %r889, 4;
	add.s64 	%rd59, %rd9, %rd58;
	ld.global.f32 	%f501, [%rd59];

$L__BB0_19:
	setp.lt.s32 	%p67, %r100, %r797;
	setp.ge.s32 	%p68, %r100, %r796;
	and.pred  	%p69, %p3, %p68;
	and.pred  	%p70, %p67, %p69;
	and.pred  	%p8, %p36, %p70;
	not.pred 	%p71, %p8;
	mov.f32 	%f502, %f2;
	@%p71 bra 	$L__BB0_23;

	@%p6 bra 	$L__BB0_22;
	bra.uni 	$L__BB0_21;

$L__BB0_22:
	add.s32 	%r894, %r112, %r105;
	mad.lo.s32 	%r895, %r894, %r55, %r103;
	mul.wide.s32 	%rd64, %r895, 4;
	add.s64 	%rd65, %rd9, %rd64;
	ld.global.f32 	%f502, [%rd65];
	bra.uni 	$L__BB0_23;

$L__BB0_21:
	add.s32 	%r892, %r113, %r106;
	mad.lo.s32 	%r893, %r892, %r55, %r104;
	mul.wide.s32 	%rd62, %r893, 4;
	add.s64 	%rd63, %rd9, %rd62;
	ld.global.f32 	%f502, [%rd63];

$L__BB0_23:
	div.rn.f32 	%f86, %f502, %f3;
	div.rn.f32 	%f85, %f501, %f3;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f85;
  cvt.rn.f16.f32 high, %f86;
  mov.b32 %r896, {low,high};}

	// end inline asm
	shl.b32 	%r117, %r115, 5;
	add.s32 	%r897, %r117, %r45;
	shl.b32 	%r898, %r897, 2;
	add.s32 	%r899, %r89, %r898;
	mul.wide.s32 	%rd66, %r899, 4;
	add.s64 	%rd67, %rd10, %rd66;
	st.global.u32 	[%rd67], %r896;
	add.s32 	%r118, %r778, %r1952;
	mad.lo.s32 	%r900, %r118, %r777, %r1951;
	mul.wide.s32 	%rd68, %r900, 4;
	add.s64 	%rd13, %rd11, %rd68;
	ld.global.f32 	%f87, [%rd13];
	fma.rn.f32 	%f10, %f87, 0f3F000000, %f1;
	mov.f32 	%f503, %f2;
	@%p65 bra 	$L__BB0_27;

	@%p5 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_25;

$L__BB0_26:
	add.s32 	%r903, %r112, %r107;
	mad.lo.s32 	%r904, %r903, %r55, %r101;
	mul.wide.s32 	%rd71, %r904, 4;
	add.s64 	%rd72, %rd9, %rd71;
	ld.global.f32 	%f503, [%rd72];
	bra.uni 	$L__BB0_27;

$L__BB0_25:
	add.s32 	%r901, %r113, %r108;
	mad.lo.s32 	%r902, %r901, %r55, %r102;
	mul.wide.s32 	%rd69, %r902, 4;
	add.s64 	%rd70, %rd9, %rd69;
	ld.global.f32 	%f503, [%rd70];

$L__BB0_27:
	mov.f32 	%f504, %f2;
	@%p71 bra 	$L__BB0_31;

	@%p6 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_29;

$L__BB0_30:
	add.s32 	%r907, %r112, %r107;
	mad.lo.s32 	%r908, %r907, %r55, %r103;
	mul.wide.s32 	%rd75, %r908, 4;
	add.s64 	%rd76, %rd9, %rd75;
	ld.global.f32 	%f504, [%rd76];
	bra.uni 	$L__BB0_31;

$L__BB0_29:
	add.s32 	%r905, %r113, %r108;
	mad.lo.s32 	%r906, %r905, %r55, %r104;
	mul.wide.s32 	%rd73, %r906, 4;
	add.s64 	%rd74, %rd9, %rd73;
	ld.global.f32 	%f504, [%rd74];

$L__BB0_31:
	div.rn.f32 	%f89, %f504, %f10;
	div.rn.f32 	%f88, %f503, %f10;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f88;
  cvt.rn.f16.f32 high, %f89;
  mov.b32 %r909, {low,high};}

	// end inline asm
	add.s32 	%r910, %r93, %r116;
	mul.wide.s32 	%rd77, %r910, 4;
	add.s64 	%rd78, %rd10, %rd77;
	st.global.u32 	[%rd78], %r909;
	add.s32 	%r911, %r118, %r778;
	mad.lo.s32 	%r912, %r911, %r777, %r1951;
	mul.wide.s32 	%rd79, %r912, 4;
	add.s64 	%rd14, %rd11, %rd79;
	ld.global.f32 	%f90, [%rd14];
	fma.rn.f32 	%f17, %f90, 0f3F000000, %f1;
	mov.f32 	%f505, %f2;
	@%p65 bra 	$L__BB0_35;

	@%p5 bra 	$L__BB0_34;
	bra.uni 	$L__BB0_33;

$L__BB0_34:
	add.s32 	%r915, %r112, %r109;
	mad.lo.s32 	%r916, %r915, %r55, %r101;
	mul.wide.s32 	%rd82, %r916, 4;
	add.s64 	%rd83, %rd9, %rd82;
	ld.global.f32 	%f505, [%rd83];
	bra.uni 	$L__BB0_35;

$L__BB0_33:
	add.s32 	%r913, %r113, %r110;
	mad.lo.s32 	%r914, %r913, %r55, %r102;
	mul.wide.s32 	%rd80, %r914, 4;
	add.s64 	%rd81, %rd9, %rd80;
	ld.global.f32 	%f505, [%rd81];

$L__BB0_35:
	mov.f32 	%f506, %f2;
	@%p71 bra 	$L__BB0_39;

	@%p6 bra 	$L__BB0_38;
	bra.uni 	$L__BB0_37;

$L__BB0_38:
	add.s32 	%r919, %r112, %r109;
	mad.lo.s32 	%r920, %r919, %r55, %r103;
	mul.wide.s32 	%rd86, %r920, 4;
	add.s64 	%rd87, %rd9, %rd86;
	ld.global.f32 	%f506, [%rd87];
	bra.uni 	$L__BB0_39;

$L__BB0_37:
	add.s32 	%r917, %r113, %r110;
	mad.lo.s32 	%r918, %r917, %r55, %r104;
	mul.wide.s32 	%rd84, %r918, 4;
	add.s64 	%rd85, %rd9, %rd84;
	ld.global.f32 	%f506, [%rd85];

$L__BB0_39:
	div.rn.f32 	%f92, %f506, %f17;
	div.rn.f32 	%f91, %f505, %f17;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f91;
  cvt.rn.f16.f32 high, %f92;
  mov.b32 %r921, {low,high};}

	// end inline asm
	rem.s32 	%r922, %r98, %r777;
	add.s32 	%r923, %r922, %r114;
	shl.b32 	%r119, %r923, 5;
	add.s32 	%r924, %r119, %r45;
	shl.b32 	%r925, %r924, 2;
	add.s32 	%r926, %r89, %r925;
	add.s32 	%r927, %r926, 2;
	mul.wide.s32 	%rd88, %r927, 4;
	add.s64 	%rd89, %rd10, %rd88;
	st.global.u32 	[%rd89], %r921;
	setp.ge.s32 	%p76, %r930, %r796;
	and.pred  	%p77, %p3, %p76;
	setp.lt.s32 	%p78, %r930, %r797;
	and.pred  	%p79, %p78, %p77;
	setp.ge.s32 	%p80, %r930, %r790;
	and.pred  	%p81, %p4, %p80;
	setp.lt.s32 	%p82, %r930, %r791;
	and.pred  	%p9, %p82, %p81;
	setp.ge.s32 	%p83, %r933, %r796;
	and.pred  	%p84, %p3, %p83;
	setp.lt.s32 	%p85, %r933, %r797;
	and.pred  	%p10, %p85, %p84;
	sub.s32 	%r120, %r930, %r790;
	setp.lt.s32 	%p86, %r930, %r790;
	selp.b32 	%r934, %r930, %r88, %p82;
	selp.b32 	%r935, %r790, %r934, %p86;
	sub.s32 	%r121, %r935, %r790;
	setp.ge.s32 	%p87, %r933, %r790;
	and.pred  	%p88, %p4, %p87;
	setp.lt.s32 	%p89, %r933, %r791;
	and.pred  	%p11, %p89, %p88;
	sub.s32 	%r122, %r933, %r790;
	setp.lt.s32 	%p90, %r933, %r790;
	selp.b32 	%r936, %r933, %r88, %p89;
	selp.b32 	%r937, %r790, %r936, %p90;
	sub.s32 	%r123, %r937, %r790;
	ld.global.f32 	%f93, [%rd12];
	fma.rn.f32 	%f24, %f93, 0f3F000000, %f1;
	and.pred  	%p12, %p36, %p79;
	not.pred 	%p92, %p12;
	mov.f32 	%f507, %f2;
	@%p92 bra 	$L__BB0_43;

	@%p9 bra 	$L__BB0_42;
	bra.uni 	$L__BB0_41;

$L__BB0_42:
	add.s32 	%r940, %r112, %r105;
	mad.lo.s32 	%r941, %r940, %r55, %r120;
	mul.wide.s32 	%rd92, %r941, 4;
	add.s64 	%rd93, %rd9, %rd92;
	ld.global.f32 	%f507, [%rd93];
	bra.uni 	$L__BB0_43;

$L__BB0_41:
	add.s32 	%r938, %r113, %r106;
	mad.lo.s32 	%r939, %r938, %r55, %r121;
	mul.wide.s32 	%rd90, %r939, 4;
	add.s64 	%rd91, %rd9, %rd90;
	ld.global.f32 	%f507, [%rd91];

$L__BB0_43:
	and.pred  	%p13, %p36, %p10;
	not.pred 	%p94, %p13;
	mov.f32 	%f508, %f2;
	@%p94 bra 	$L__BB0_47;

	@%p11 bra 	$L__BB0_46;
	bra.uni 	$L__BB0_45;

$L__BB0_46:
	add.s32 	%r944, %r112, %r105;
	mad.lo.s32 	%r945, %r944, %r55, %r122;
	mul.wide.s32 	%rd96, %r945, 4;
	add.s64 	%rd97, %rd9, %rd96;
	ld.global.f32 	%f508, [%rd97];
	bra.uni 	$L__BB0_47;

$L__BB0_45:
	add.s32 	%r942, %r113, %r106;
	mad.lo.s32 	%r943, %r942, %r55, %r123;
	mul.wide.s32 	%rd94, %r943, 4;
	add.s64 	%rd95, %rd9, %rd94;
	ld.global.f32 	%f508, [%rd95];

$L__BB0_47:
	div.rn.f32 	%f95, %f508, %f24;
	div.rn.f32 	%f94, %f507, %f24;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f94;
  cvt.rn.f16.f32 high, %f95;
  mov.b32 %r946, {low,high};}

	// end inline asm
	add.s32 	%r947, %r117, %r96;
	shl.b32 	%r948, %r947, 2;
	add.s32 	%r949, %r95, %r948;
	mul.wide.s32 	%rd98, %r949, 4;
	add.s64 	%rd99, %rd10, %rd98;
	st.global.u32 	[%rd99], %r946;
	ld.global.f32 	%f96, [%rd13];
	fma.rn.f32 	%f31, %f96, 0f3F000000, %f1;
	mov.f32 	%f509, %f2;
	@%p92 bra 	$L__BB0_51;

	@%p9 bra 	$L__BB0_50;
	bra.uni 	$L__BB0_49;

$L__BB0_50:
	add.s32 	%r952, %r112, %r107;
	mad.lo.s32 	%r953, %r952, %r55, %r120;
	mul.wide.s32 	%rd102, %r953, 4;
	add.s64 	%rd103, %rd9, %rd102;
	ld.global.f32 	%f509, [%rd103];
	bra.uni 	$L__BB0_51;

$L__BB0_49:
	add.s32 	%r950, %r113, %r108;
	mad.lo.s32 	%r951, %r950, %r55, %r121;
	mul.wide.s32 	%rd100, %r951, 4;
	add.s64 	%rd101, %rd9, %rd100;
	ld.global.f32 	%f509, [%rd101];

$L__BB0_51:
	mov.f32 	%f510, %f2;
	@%p94 bra 	$L__BB0_55;

	@%p11 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_53;

$L__BB0_54:
	add.s32 	%r956, %r112, %r107;
	mad.lo.s32 	%r957, %r956, %r55, %r122;
	mul.wide.s32 	%rd106, %r957, 4;
	add.s64 	%rd107, %rd9, %rd106;
	ld.global.f32 	%f510, [%rd107];
	bra.uni 	$L__BB0_55;

$L__BB0_53:
	add.s32 	%r954, %r113, %r108;
	mad.lo.s32 	%r955, %r954, %r55, %r123;
	mul.wide.s32 	%rd104, %r955, 4;
	add.s64 	%rd105, %rd9, %rd104;
	ld.global.f32 	%f510, [%rd105];

$L__BB0_55:
	div.rn.f32 	%f98, %f510, %f31;
	div.rn.f32 	%f97, %f509, %f31;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f97;
  cvt.rn.f16.f32 high, %f98;
  mov.b32 %r958, {low,high};}

	// end inline asm
	add.s32 	%r959, %r94, %r116;
	mul.wide.s32 	%rd108, %r959, 4;
	add.s64 	%rd109, %rd10, %rd108;
	st.global.u32 	[%rd109], %r958;
	ld.global.f32 	%f99, [%rd14];
	fma.rn.f32 	%f38, %f99, 0f3F000000, %f1;
	mov.f32 	%f511, %f2;
	@%p92 bra 	$L__BB0_59;

	@%p9 bra 	$L__BB0_58;
	bra.uni 	$L__BB0_57;

$L__BB0_58:
	add.s32 	%r962, %r112, %r109;
	mad.lo.s32 	%r963, %r962, %r55, %r120;
	mul.wide.s32 	%rd112, %r963, 4;
	add.s64 	%rd113, %rd9, %rd112;
	ld.global.f32 	%f511, [%rd113];
	bra.uni 	$L__BB0_59;

$L__BB0_57:
	add.s32 	%r960, %r113, %r110;
	mad.lo.s32 	%r961, %r960, %r55, %r121;
	mul.wide.s32 	%rd110, %r961, 4;
	add.s64 	%rd111, %rd9, %rd110;
	ld.global.f32 	%f511, [%rd111];

$L__BB0_59:
	mov.f32 	%f512, %f2;
	@%p94 bra 	$L__BB0_63;

	@%p11 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_61;

$L__BB0_62:
	add.s32 	%r966, %r112, %r109;
	mad.lo.s32 	%r967, %r966, %r55, %r122;
	mul.wide.s32 	%rd116, %r967, 4;
	add.s64 	%rd117, %rd9, %rd116;
	ld.global.f32 	%f512, [%rd117];
	bra.uni 	$L__BB0_63;

$L__BB0_61:
	add.s32 	%r964, %r113, %r110;
	mad.lo.s32 	%r965, %r964, %r55, %r123;
	mul.wide.s32 	%rd114, %r965, 4;
	add.s64 	%rd115, %rd9, %rd114;
	ld.global.f32 	%f512, [%rd115];

$L__BB0_63:
	div.rn.f32 	%f101, %f512, %f38;
	div.rn.f32 	%f100, %f511, %f38;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f100;
  cvt.rn.f16.f32 high, %f101;
  mov.b32 %r968, {low,high};}

	// end inline asm
	add.s32 	%r969, %r119, %r96;
	shl.b32 	%r970, %r969, 2;
	add.s32 	%r971, %r95, %r970;
	add.s32 	%r972, %r971, 2;
	mul.wide.s32 	%rd118, %r972, 4;
	add.s64 	%rd119, %rd10, %rd118;
	st.global.u32 	[%rd119], %r968;
	add.s32 	%r1952, %r1952, %r809;
	setp.lt.s32 	%p99, %r1952, %r778;
	@%p99 bra 	$L__BB0_15;

$L__BB0_64:
	add.s32 	%r1951, %r1951, %r804;
	setp.lt.s32 	%p100, %r1951, %r777;
	@%p100 bra 	$L__BB0_13;

$L__BB0_65:
	ld.param.u64 	%rd120, [%rd1+120];
	cvta.to.global.u64 	%rd15, %rd120;
	@%p35 bra 	$L__BB0_149;

	shl.b32 	%r126, %r80, 1;
	ld.param.f32 	%f102, [%rd1+136];
	rcp.rn.f32 	%f45, %f102;
	mov.u64 	%rd121, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd183, %rd121, 24;
	mov.u32 	%r1953, %r1986;

$L__BB0_67:
	setp.ge.s32 	%p102, %r126, %r778;
	@%p102 bra 	$L__BB0_148;

	mov.u32 	%r1954, %r126;

$L__BB0_69:
	setp.ne.s32 	%p103, %r45, 0;
	@%p103 bra 	$L__BB0_147;

	shr.u32 	%r974, %r1954, 31;
	add.s32 	%r975, %r1954, %r974;
	shr.s32 	%r976, %r975, 1;
	mad.lo.s32 	%r977, %r976, %r777, %r1953;
	shl.b32 	%r130, %r977, 5;
	add.s32 	%r131, %r1954, -2;
	mul.lo.s32 	%r132, %r131, %r777;
	add.s32 	%r978, %r778, %r131;
	mul.lo.s32 	%r133, %r978, %r777;
	add.s32 	%r979, %r978, %r778;
	mul.lo.s32 	%r134, %r979, %r777;
	add.s32 	%r135, %r132, %r777;
	add.s32 	%r136, %r1954, -1;
	add.s32 	%r980, %r778, %r136;
	mul.lo.s32 	%r137, %r980, %r777;
	add.s32 	%r981, %r980, %r778;
	mul.lo.s32 	%r138, %r981, %r777;
	add.s32 	%r982, %r778, %r1954;
	mul.lo.s32 	%r139, %r982, %r777;
	add.s32 	%r983, %r982, %r778;
	mul.lo.s32 	%r140, %r983, %r777;
	mul.lo.s32 	%r141, %r1954, %r777;
	add.s32 	%r142, %r141, %r777;
	add.s32 	%r143, %r1954, 1;
	add.s32 	%r984, %r778, %r143;
	mul.lo.s32 	%r144, %r984, %r777;
	add.s32 	%r985, %r984, %r778;
	mul.lo.s32 	%r145, %r985, %r777;
	add.s32 	%r146, %r142, %r777;
	add.s32 	%r147, %r1954, 2;
	add.s32 	%r986, %r778, %r147;
	mul.lo.s32 	%r148, %r986, %r777;
	add.s32 	%r987, %r986, %r778;
	mul.lo.s32 	%r149, %r987, %r777;
	mov.u32 	%r1957, 0;
	mov.u64 	%rd573, %rd121;

$L__BB0_71:
	ld.global.nc.u32 	%r988, [%rd573];
	cvt.rn.f64.s32 	%fd1, %r988;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r151, %r988, %r1953;
	setp.lt.s32 	%p104, %r151, %r777;
	or.b32  	%r989, %r131, %r151;
	setp.gt.s32 	%p105, %r989, -1;
	and.pred  	%p106, %p104, %p105;
	setp.lt.s32 	%p107, %r131, %r778;
	and.pred  	%p14, %p107, %p106;
	cvt.rn.f32.f64 	%f103, %fd3;
	add.f32 	%f104, %f103, 0f3E800000;
	abs.f32 	%f46, %f104;
	add.f32 	%f105, %f46, 0f40200000;
	setp.geu.f32 	%p108, %f105, 0f40000000;
	@%p108 bra 	$L__BB0_76;

	@%p14 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_73;

$L__BB0_74:
	add.s32 	%r992, %r132, %r151;
	mul.wide.s32 	%rd122, %r992, 4;
	add.s64 	%rd123, %rd11, %rd122;
	ld.global.f32 	%f109, [%rd123];
	mul.f32 	%f110, %f109, 0f3F000000;
	sub.f32 	%f111, %f45, %f110;
	add.f32 	%f112, %f45, %f110;
	div.rn.f32 	%f108, %f111, %f112;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f108;
  mov.b32 %r1956, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_75;

$L__BB0_73:
	mov.f32 	%f107, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f107;
  cvt.rn.f16.f32 high, %f107;
  mov.b32 %r1956, {low,high};}

	// end inline asm

$L__BB0_75:
	add.s32 	%r993, %r1957, %r130;
	mul.wide.s32 	%rd124, %r993, 4;
	add.s64 	%rd125, %rd15, %rd124;
	st.global.u32 	[%rd125], %r1956;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_76:
	cvt.rn.f32.f64 	%f113, %fd1;
	add.f32 	%f114, %f113, 0f3E800000;
	abs.f32 	%f47, %f114;
	add.f32 	%f48, %f47, 0f40000000;
	setp.geu.f32 	%p109, %f48, 0f40000000;
	@%p109 bra 	$L__BB0_81;

	@%p14 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_78;

$L__BB0_79:
	add.s32 	%r996, %r133, %r151;
	mul.wide.s32 	%rd126, %r996, 4;
	add.s64 	%rd127, %rd11, %rd126;
	ld.global.f32 	%f118, [%rd127];
	mul.f32 	%f119, %f118, 0f3F000000;
	sub.f32 	%f120, %f45, %f119;
	add.f32 	%f121, %f45, %f119;
	div.rn.f32 	%f117, %f120, %f121;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f117;
  mov.b32 %r1958, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_80;

$L__BB0_78:
	mov.f32 	%f116, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f116;
  cvt.rn.f16.f32 high, %f116;
  mov.b32 %r1958, {low,high};}

	// end inline asm

$L__BB0_80:
	add.s32 	%r997, %r1957, %r130;
	mul.wide.s32 	%rd128, %r997, 4;
	add.s64 	%rd129, %rd15, %rd128;
	st.global.u32 	[%rd129], %r1958;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_81:
	add.f32 	%f122, %f47, 0f40200000;
	setp.geu.f32 	%p110, %f122, 0f40000000;
	@%p110 bra 	$L__BB0_86;

	@%p14 bra 	$L__BB0_84;
	bra.uni 	$L__BB0_83;

$L__BB0_84:
	add.s32 	%r1000, %r134, %r151;
	mul.wide.s32 	%rd130, %r1000, 4;
	add.s64 	%rd131, %rd11, %rd130;
	ld.global.f32 	%f126, [%rd131];
	mul.f32 	%f127, %f126, 0f3F000000;
	sub.f32 	%f128, %f45, %f127;
	add.f32 	%f129, %f45, %f127;
	div.rn.f32 	%f125, %f128, %f129;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f125;
  mov.b32 %r1960, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_85;

$L__BB0_83:
	mov.f32 	%f124, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f124;
  cvt.rn.f16.f32 high, %f124;
  mov.b32 %r1960, {low,high};}

	// end inline asm

$L__BB0_85:
	add.s32 	%r1001, %r1957, %r130;
	mul.wide.s32 	%rd132, %r1001, 4;
	add.s64 	%rd133, %rd15, %rd132;
	st.global.u32 	[%rd133], %r1960;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_86:
	or.b32  	%r1002, %r136, %r151;
	setp.gt.s32 	%p111, %r1002, -1;
	and.pred  	%p113, %p104, %p111;
	setp.le.s32 	%p114, %r1954, %r778;
	and.pred  	%p15, %p114, %p113;
	add.f32 	%f49, %f46, 0f3FC00000;
	setp.geu.f32 	%p115, %f49, 0f40000000;
	@%p115 bra 	$L__BB0_91;

	@%p15 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_88;

$L__BB0_89:
	add.s32 	%r1005, %r135, %r151;
	mul.wide.s32 	%rd134, %r1005, 4;
	add.s64 	%rd135, %rd11, %rd134;
	ld.global.f32 	%f133, [%rd135];
	mul.f32 	%f134, %f133, 0f3F000000;
	sub.f32 	%f135, %f45, %f134;
	add.f32 	%f136, %f45, %f134;
	div.rn.f32 	%f132, %f135, %f136;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f132;
  mov.b32 %r1962, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_90;

$L__BB0_88:
	mov.f32 	%f131, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f131;
  cvt.rn.f16.f32 high, %f131;
  mov.b32 %r1962, {low,high};}

	// end inline asm

$L__BB0_90:
	add.s32 	%r1006, %r1957, %r130;
	mul.wide.s32 	%rd136, %r1006, 4;
	add.s64 	%rd137, %rd15, %rd136;
	st.global.u32 	[%rd137], %r1962;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_91:
	add.f32 	%f50, %f47, 0f3F800000;
	setp.geu.f32 	%p116, %f50, 0f40000000;
	@%p116 bra 	$L__BB0_96;

	@%p15 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_93;

$L__BB0_94:
	add.s32 	%r1009, %r137, %r151;
	mul.wide.s32 	%rd138, %r1009, 4;
	add.s64 	%rd139, %rd11, %rd138;
	ld.global.f32 	%f140, [%rd139];
	mul.f32 	%f141, %f140, 0f3F000000;
	sub.f32 	%f142, %f45, %f141;
	add.f32 	%f143, %f45, %f141;
	div.rn.f32 	%f139, %f142, %f143;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f139;
  mov.b32 %r1964, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_95;

$L__BB0_93:
	mov.f32 	%f138, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f138;
  cvt.rn.f16.f32 high, %f138;
  mov.b32 %r1964, {low,high};}

	// end inline asm

$L__BB0_95:
	add.s32 	%r1010, %r1957, %r130;
	mul.wide.s32 	%rd140, %r1010, 4;
	add.s64 	%rd141, %rd15, %rd140;
	st.global.u32 	[%rd141], %r1964;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_96:
	add.f32 	%f51, %f47, 0f3FC00000;
	setp.geu.f32 	%p117, %f51, 0f40000000;
	@%p117 bra 	$L__BB0_101;

	@%p15 bra 	$L__BB0_99;
	bra.uni 	$L__BB0_98;

$L__BB0_99:
	add.s32 	%r1013, %r138, %r151;
	mul.wide.s32 	%rd142, %r1013, 4;
	add.s64 	%rd143, %rd11, %rd142;
	ld.global.f32 	%f147, [%rd143];
	mul.f32 	%f148, %f147, 0f3F000000;
	sub.f32 	%f149, %f45, %f148;
	add.f32 	%f150, %f45, %f148;
	div.rn.f32 	%f146, %f149, %f150;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f146;
  mov.b32 %r1966, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_100;

$L__BB0_98:
	mov.f32 	%f145, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f145;
  cvt.rn.f16.f32 high, %f145;
  mov.b32 %r1966, {low,high};}

	// end inline asm

$L__BB0_100:
	add.s32 	%r1014, %r1957, %r130;
	mul.wide.s32 	%rd144, %r1014, 4;
	add.s64 	%rd145, %rd15, %rd144;
	st.global.u32 	[%rd145], %r1966;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_101:
	or.b32  	%r1015, %r1954, %r151;
	setp.gt.s32 	%p118, %r1015, -1;
	and.pred  	%p120, %p104, %p118;
	setp.lt.s32 	%p121, %r1954, %r778;
	and.pred  	%p16, %p121, %p120;
	add.f32 	%f52, %f46, 0f3F000000;
	setp.geu.f32 	%p122, %f52, 0f40000000;
	@%p122 bra 	$L__BB0_106;

	@%p16 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_103;

$L__BB0_104:
	add.s32 	%r1018, %r141, %r151;
	mul.wide.s32 	%rd146, %r1018, 4;
	add.s64 	%rd147, %rd11, %rd146;
	ld.global.f32 	%f154, [%rd147];
	mul.f32 	%f155, %f154, 0f3F000000;
	sub.f32 	%f156, %f45, %f155;
	add.f32 	%f157, %f45, %f155;
	div.rn.f32 	%f153, %f156, %f157;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f153;
  mov.b32 %r1968, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_105;

$L__BB0_103:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f152;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r1968, {low,high};}

	// end inline asm

$L__BB0_105:
	add.s32 	%r1019, %r1957, %r130;
	mul.wide.s32 	%rd148, %r1019, 4;
	add.s64 	%rd149, %rd15, %rd148;
	st.global.u32 	[%rd149], %r1968;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_106:
	add.f32 	%f158, %f47, 0f00000000;
	setp.geu.f32 	%p123, %f158, 0f40000000;
	@%p123 bra 	$L__BB0_111;

	@%p16 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_108;

$L__BB0_109:
	add.s32 	%r1022, %r139, %r151;
	mul.wide.s32 	%rd150, %r1022, 4;
	add.s64 	%rd151, %rd11, %rd150;
	ld.global.f32 	%f162, [%rd151];
	mul.f32 	%f163, %f162, 0f3F000000;
	sub.f32 	%f164, %f45, %f163;
	add.f32 	%f165, %f45, %f163;
	div.rn.f32 	%f161, %f164, %f165;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f161;
  mov.b32 %r1970, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_110;

$L__BB0_108:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f160;
  mov.b32 %r1970, {low,high};}

	// end inline asm

$L__BB0_110:
	add.s32 	%r1023, %r1957, %r130;
	mul.wide.s32 	%rd152, %r1023, 4;
	add.s64 	%rd153, %rd15, %rd152;
	st.global.u32 	[%rd153], %r1970;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_111:
	add.f32 	%f53, %f47, 0f3F000000;
	setp.geu.f32 	%p124, %f53, 0f40000000;
	@%p124 bra 	$L__BB0_116;

	@%p16 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_113;

$L__BB0_114:
	add.s32 	%r1026, %r140, %r151;
	mul.wide.s32 	%rd154, %r1026, 4;
	add.s64 	%rd155, %rd11, %rd154;
	ld.global.f32 	%f169, [%rd155];
	mul.f32 	%f170, %f169, 0f3F000000;
	sub.f32 	%f171, %f45, %f170;
	add.f32 	%f172, %f45, %f170;
	div.rn.f32 	%f168, %f171, %f172;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f168;
  mov.b32 %r1972, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_115;

$L__BB0_113:
	mov.f32 	%f167, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f167;
  cvt.rn.f16.f32 high, %f167;
  mov.b32 %r1972, {low,high};}

	// end inline asm

$L__BB0_115:
	add.s32 	%r1027, %r1957, %r130;
	mul.wide.s32 	%rd156, %r1027, 4;
	add.s64 	%rd157, %rd15, %rd156;
	st.global.u32 	[%rd157], %r1972;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_116:
	or.b32  	%r1028, %r143, %r151;
	setp.gt.s32 	%p125, %r1028, -1;
	and.pred  	%p127, %p104, %p125;
	setp.lt.s32 	%p128, %r143, %r778;
	and.pred  	%p17, %p128, %p127;
	@%p122 bra 	$L__BB0_121;

	@%p17 bra 	$L__BB0_119;
	bra.uni 	$L__BB0_118;

$L__BB0_119:
	add.s32 	%r1031, %r142, %r151;
	mul.wide.s32 	%rd158, %r1031, 4;
	add.s64 	%rd159, %rd11, %rd158;
	ld.global.f32 	%f176, [%rd159];
	mul.f32 	%f177, %f176, 0f3F000000;
	sub.f32 	%f178, %f45, %f177;
	add.f32 	%f179, %f45, %f177;
	div.rn.f32 	%f175, %f178, %f179;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f175;
  mov.b32 %r1974, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_120;

$L__BB0_118:
	mov.f32 	%f174, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f174;
  cvt.rn.f16.f32 high, %f174;
  mov.b32 %r1974, {low,high};}

	// end inline asm

$L__BB0_120:
	add.s32 	%r1032, %r1957, %r130;
	mul.wide.s32 	%rd160, %r1032, 4;
	add.s64 	%rd161, %rd15, %rd160;
	st.global.u32 	[%rd161], %r1974;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_121:
	@%p116 bra 	$L__BB0_126;

	@%p17 bra 	$L__BB0_124;
	bra.uni 	$L__BB0_123;

$L__BB0_124:
	add.s32 	%r1035, %r144, %r151;
	mul.wide.s32 	%rd162, %r1035, 4;
	add.s64 	%rd163, %rd11, %rd162;
	ld.global.f32 	%f183, [%rd163];
	mul.f32 	%f184, %f183, 0f3F000000;
	sub.f32 	%f185, %f45, %f184;
	add.f32 	%f186, %f45, %f184;
	div.rn.f32 	%f182, %f185, %f186;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f182;
  mov.b32 %r1976, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_125;

$L__BB0_123:
	mov.f32 	%f181, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f181;
  cvt.rn.f16.f32 high, %f181;
  mov.b32 %r1976, {low,high};}

	// end inline asm

$L__BB0_125:
	add.s32 	%r1036, %r1957, %r130;
	mul.wide.s32 	%rd164, %r1036, 4;
	add.s64 	%rd165, %rd15, %rd164;
	st.global.u32 	[%rd165], %r1976;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_126:
	@%p124 bra 	$L__BB0_131;

	@%p17 bra 	$L__BB0_129;
	bra.uni 	$L__BB0_128;

$L__BB0_129:
	add.s32 	%r1039, %r145, %r151;
	mul.wide.s32 	%rd166, %r1039, 4;
	add.s64 	%rd167, %rd11, %rd166;
	ld.global.f32 	%f190, [%rd167];
	mul.f32 	%f191, %f190, 0f3F000000;
	sub.f32 	%f192, %f45, %f191;
	add.f32 	%f193, %f45, %f191;
	div.rn.f32 	%f189, %f192, %f193;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f189;
  mov.b32 %r1978, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_130;

$L__BB0_128:
	mov.f32 	%f188, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f188;
  cvt.rn.f16.f32 high, %f188;
  mov.b32 %r1978, {low,high};}

	// end inline asm

$L__BB0_130:
	add.s32 	%r1040, %r1957, %r130;
	mul.wide.s32 	%rd168, %r1040, 4;
	add.s64 	%rd169, %rd15, %rd168;
	st.global.u32 	[%rd169], %r1978;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_131:
	or.b32  	%r1041, %r147, %r151;
	setp.gt.s32 	%p132, %r1041, -1;
	and.pred  	%p134, %p104, %p132;
	setp.lt.s32 	%p135, %r147, %r778;
	and.pred  	%p18, %p135, %p134;
	@%p115 bra 	$L__BB0_136;

	@%p18 bra 	$L__BB0_134;
	bra.uni 	$L__BB0_133;

$L__BB0_134:
	add.s32 	%r1044, %r146, %r151;
	mul.wide.s32 	%rd170, %r1044, 4;
	add.s64 	%rd171, %rd11, %rd170;
	ld.global.f32 	%f197, [%rd171];
	mul.f32 	%f198, %f197, 0f3F000000;
	sub.f32 	%f199, %f45, %f198;
	add.f32 	%f200, %f45, %f198;
	div.rn.f32 	%f196, %f199, %f200;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f196;
  mov.b32 %r1980, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_135;

$L__BB0_133:
	mov.f32 	%f195, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f195;
  cvt.rn.f16.f32 high, %f195;
  mov.b32 %r1980, {low,high};}

	// end inline asm

$L__BB0_135:
	add.s32 	%r1045, %r1957, %r130;
	mul.wide.s32 	%rd172, %r1045, 4;
	add.s64 	%rd173, %rd15, %rd172;
	st.global.u32 	[%rd173], %r1980;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_136:
	@%p109 bra 	$L__BB0_141;

	@%p18 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_138;

$L__BB0_139:
	add.s32 	%r1048, %r148, %r151;
	mul.wide.s32 	%rd174, %r1048, 4;
	add.s64 	%rd175, %rd11, %rd174;
	ld.global.f32 	%f204, [%rd175];
	mul.f32 	%f205, %f204, 0f3F000000;
	sub.f32 	%f206, %f45, %f205;
	add.f32 	%f207, %f45, %f205;
	div.rn.f32 	%f203, %f206, %f207;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f203;
  mov.b32 %r1982, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_140;

$L__BB0_138:
	mov.f32 	%f202, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f202;
  cvt.rn.f16.f32 high, %f202;
  mov.b32 %r1982, {low,high};}

	// end inline asm

$L__BB0_140:
	add.s32 	%r1049, %r1957, %r130;
	mul.wide.s32 	%rd176, %r1049, 4;
	add.s64 	%rd177, %rd15, %rd176;
	st.global.u32 	[%rd177], %r1982;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_141:
	@%p117 bra 	$L__BB0_146;

	@%p18 bra 	$L__BB0_144;
	bra.uni 	$L__BB0_143;

$L__BB0_144:
	add.s32 	%r1052, %r149, %r151;
	mul.wide.s32 	%rd178, %r1052, 4;
	add.s64 	%rd179, %rd11, %rd178;
	ld.global.f32 	%f211, [%rd179];
	mul.f32 	%f212, %f211, 0f3F000000;
	sub.f32 	%f213, %f45, %f212;
	add.f32 	%f214, %f45, %f212;
	div.rn.f32 	%f210, %f213, %f214;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f210;
  mov.b32 %r1984, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_145;

$L__BB0_143:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r1984, {low,high};}

	// end inline asm

$L__BB0_145:
	add.s32 	%r1053, %r1957, %r130;
	mul.wide.s32 	%rd180, %r1053, 4;
	add.s64 	%rd181, %rd15, %rd180;
	st.global.u32 	[%rd181], %r1984;
	add.s32 	%r1957, %r1957, 1;

$L__BB0_146:
	add.s64 	%rd573, %rd573, 4;
	setp.ne.s64 	%p139, %rd573, %rd183;
	@%p139 bra 	$L__BB0_71;

$L__BB0_147:
	add.s32 	%r1954, %r1954, %r47;
	setp.lt.s32 	%p140, %r1954, %r778;
	@%p140 bra 	$L__BB0_69;

$L__BB0_148:
	add.s32 	%r1953, %r1953, %r804;
	setp.lt.s32 	%p141, %r1953, %r777;
	@%p141 bra 	$L__BB0_67;

$L__BB0_149:
	setp.eq.s32 	%p142, %r781, 1;
	ld.param.u64 	%rd184, [%rd1+160];
	cvta.to.global.u64 	%rd18, %rd184;
	ld.param.u64 	%rd185, [%rd1+128];
	cvta.to.global.u64 	%rd19, %rd185;
	@%p142 bra 	$L__BB0_167;
	bra.uni 	$L__BB0_150;

$L__BB0_167:
	@%p35 bra 	$L__BB0_296;

	shl.b32 	%r255, %r80, 1;
	shr.u32 	%r1101, %r782, 31;
	add.s32 	%r1102, %r782, %r1101;
	shr.u32 	%r1103, %r1102, 1;
	and.b32  	%r256, %r1103, 1;
	mov.u64 	%rd204, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd286, %rd204, 24;

$L__BB0_169:
	setp.ge.s32 	%p152, %r255, %r778;
	@%p152 bra 	$L__BB0_295;

	mov.u32 	%r1992, %r255;

$L__BB0_171:
	setp.ne.s32 	%p153, %r45, 0;
	@%p153 bra 	$L__BB0_294;

	shr.u32 	%r1105, %r1992, 31;
	add.s32 	%r1106, %r1992, %r1105;
	shr.s32 	%r1107, %r1106, 1;
	mad.lo.s32 	%r1108, %r1107, %r777, %r1986;
	shl.b32 	%r260, %r1108, 5;
	add.s32 	%r261, %r1992, -2;
	mul.lo.s32 	%r262, %r261, %r777;
	add.s32 	%r1109, %r778, %r261;
	mul.lo.s32 	%r263, %r1109, %r777;
	add.s32 	%r264, %r262, %r777;
	add.s32 	%r265, %r1992, -1;
	add.s32 	%r1110, %r778, %r265;
	mul.lo.s32 	%r266, %r1110, %r777;
	add.s32 	%r1111, %r778, %r1992;
	mul.lo.s32 	%r267, %r1111, %r777;
	mul.lo.s32 	%r268, %r1992, %r777;
	add.s32 	%r269, %r268, %r777;
	add.s32 	%r270, %r1992, 1;
	add.s32 	%r1112, %r778, %r270;
	mul.lo.s32 	%r271, %r1112, %r777;
	add.s32 	%r272, %r269, %r777;
	add.s32 	%r273, %r1992, 2;
	add.s32 	%r1113, %r778, %r273;
	mul.lo.s32 	%r274, %r1113, %r777;
	mov.u32 	%r1996, 0;
	mov.u64 	%rd574, %rd204;

$L__BB0_173:
	ld.global.nc.u32 	%r1114, [%rd574];
	cvt.rn.f64.s32 	%fd2, %r1114;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r276, %r1114, %r1986;
	setp.lt.s32 	%p154, %r276, %r777;
	or.b32  	%r1115, %r261, %r276;
	setp.gt.s32 	%p155, %r1115, -1;
	and.pred  	%p156, %p154, %p155;
	setp.lt.s32 	%p157, %r261, %r778;
	and.pred  	%p19, %p157, %p156;
	cvt.rn.f32.f64 	%f231, %fd4;
	add.f32 	%f232, %f231, 0f3E800000;
	abs.f32 	%f54, %f232;
	add.f32 	%f233, %f54, 0f40200000;
	setp.geu.f32 	%p158, %f233, 0f40000000;
	@%p158 bra 	$L__BB0_185;

	@%p19 bra 	$L__BB0_176;
	bra.uni 	$L__BB0_175;

$L__BB0_176:
	setp.eq.s32 	%p159, %r256, 0;
	add.s32 	%r1117, %r262, %r276;
	shl.b32 	%r1118, %r1117, 1;
	mul.wide.s32 	%rd205, %r1118, 4;
	add.s64 	%rd206, %rd18, %rd205;
	ld.global.f32 	%f55, [%rd206];
	@%p159 bra 	$L__BB0_178;
	bra.uni 	$L__BB0_177;

$L__BB0_178:
	mov.f32 	%f239, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f239;
  mov.b32 %r1994, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_179;

$L__BB0_175:
	mov.f32 	%f235, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f235;
  cvt.rn.f16.f32 high, %f235;
  mov.b32 %r1994, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_179;

$L__BB0_177:
	mov.f32 	%f236, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f236;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r1994, {low,high};}

	// end inline asm

$L__BB0_179:
	add.s32 	%r281, %r1996, %r260;
	mul.wide.s32 	%rd207, %r281, 4;
	add.s64 	%rd208, %rd19, %rd207;
	st.global.u32 	[%rd208], %r1994;
	@%p19 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_180;

$L__BB0_181:
	setp.eq.s32 	%p160, %r256, 0;
	add.s32 	%r1122, %r263, %r276;
	shl.b32 	%r1123, %r1122, 1;
	mul.wide.s32 	%rd209, %r1123, 4;
	add.s64 	%rd210, %rd18, %rd209;
	ld.global.f32 	%f56, [%rd210];
	@%p160 bra 	$L__BB0_183;
	bra.uni 	$L__BB0_182;

$L__BB0_183:
	mov.f32 	%f245, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f56;
  cvt.rn.f16.f32 high, %f245;
  mov.b32 %r1995, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_184;

$L__BB0_180:
	mov.f32 	%f241, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f241;
  cvt.rn.f16.f32 high, %f241;
  mov.b32 %r1995, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_184;

$L__BB0_182:
	mov.f32 	%f242, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f242;
  cvt.rn.f16.f32 high, %f56;
  mov.b32 %r1995, {low,high};}

	// end inline asm

$L__BB0_184:
	add.s32 	%r1126, %r281, 1;
	mul.wide.s32 	%rd211, %r1126, 4;
	add.s64 	%rd212, %rd19, %rd211;
	st.global.u32 	[%rd212], %r1995;
	add.s32 	%r1996, %r1996, 2;

$L__BB0_185:
	cvt.rn.f32.f64 	%f246, %fd2;
	add.f32 	%f247, %f246, 0f3E800000;
	abs.f32 	%f57, %f247;
	add.f32 	%f58, %f57, 0f40000000;
	setp.geu.f32 	%p161, %f58, 0f40000000;
	@%p161 bra 	$L__BB0_197;

	@%p19 bra 	$L__BB0_188;
	bra.uni 	$L__BB0_187;

$L__BB0_188:
	setp.eq.s32 	%p162, %r256, 0;
	add.s32 	%r1128, %r262, %r276;
	shl.b32 	%r1129, %r1128, 1;
	or.b32  	%r1130, %r1129, 1;
	mul.wide.s32 	%rd213, %r1130, 4;
	add.s64 	%rd214, %rd18, %rd213;
	ld.global.f32 	%f59, [%rd214];
	@%p162 bra 	$L__BB0_190;
	bra.uni 	$L__BB0_189;

$L__BB0_190:
	mov.f32 	%f253, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f59;
  cvt.rn.f16.f32 high, %f253;
  mov.b32 %r1997, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_191;

$L__BB0_187:
	mov.f32 	%f249, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f249;
  cvt.rn.f16.f32 high, %f249;
  mov.b32 %r1997, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_191;

$L__BB0_189:
	mov.f32 	%f250, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f250;
  cvt.rn.f16.f32 high, %f59;
  mov.b32 %r1997, {low,high};}

	// end inline asm

$L__BB0_191:
	add.s32 	%r292, %r1996, %r260;
	mul.wide.s32 	%rd215, %r292, 4;
	add.s64 	%rd216, %rd19, %rd215;
	st.global.u32 	[%rd216], %r1997;
	@%p19 bra 	$L__BB0_193;
	bra.uni 	$L__BB0_192;

$L__BB0_193:
	setp.eq.s32 	%p163, %r256, 0;
	add.s32 	%r1134, %r263, %r276;
	shl.b32 	%r1135, %r1134, 1;
	or.b32  	%r1136, %r1135, 1;
	mul.wide.s32 	%rd217, %r1136, 4;
	add.s64 	%rd218, %rd18, %rd217;
	ld.global.f32 	%f60, [%rd218];
	@%p163 bra 	$L__BB0_195;
	bra.uni 	$L__BB0_194;

$L__BB0_195:
	mov.f32 	%f259, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f60;
  cvt.rn.f16.f32 high, %f259;
  mov.b32 %r1998, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_196;

$L__BB0_192:
	mov.f32 	%f255, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f255;
  cvt.rn.f16.f32 high, %f255;
  mov.b32 %r1998, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_196;

$L__BB0_194:
	mov.f32 	%f256, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f256;
  cvt.rn.f16.f32 high, %f60;
  mov.b32 %r1998, {low,high};}

	// end inline asm

$L__BB0_196:
	add.s32 	%r1139, %r292, 1;
	mul.wide.s32 	%rd219, %r1139, 4;
	add.s64 	%rd220, %rd19, %rd219;
	st.global.u32 	[%rd220], %r1998;
	add.s32 	%r1996, %r1996, 2;

$L__BB0_197:
	or.b32  	%r1140, %r265, %r276;
	setp.gt.s32 	%p164, %r1140, -1;
	and.pred  	%p166, %p154, %p164;
	setp.le.s32 	%p167, %r1992, %r778;
	and.pred  	%p20, %p167, %p166;
	add.f32 	%f61, %f54, 0f3FC00000;
	setp.geu.f32 	%p168, %f61, 0f40000000;
	@%p168 bra 	$L__BB0_209;

	@%p20 bra 	$L__BB0_200;
	bra.uni 	$L__BB0_199;

$L__BB0_200:
	setp.eq.s32 	%p169, %r256, 0;
	add.s32 	%r1142, %r264, %r276;
	shl.b32 	%r1143, %r1142, 1;
	mul.wide.s32 	%rd221, %r1143, 4;
	add.s64 	%rd222, %rd18, %rd221;
	ld.global.f32 	%f62, [%rd222];
	@%p169 bra 	$L__BB0_202;
	bra.uni 	$L__BB0_201;

$L__BB0_202:
	mov.f32 	%f265, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f62;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r2000, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_203;

$L__BB0_199:
	mov.f32 	%f261, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f261;
  cvt.rn.f16.f32 high, %f261;
  mov.b32 %r2000, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_203;

$L__BB0_201:
	mov.f32 	%f262, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f262;
  cvt.rn.f16.f32 high, %f62;
  mov.b32 %r2000, {low,high};}

	// end inline asm

$L__BB0_203:
	add.s32 	%r303, %r1996, %r260;
	mul.wide.s32 	%rd223, %r303, 4;
	add.s64 	%rd224, %rd19, %rd223;
	st.global.u32 	[%rd224], %r2000;
	@%p20 bra 	$L__BB0_205;
	bra.uni 	$L__BB0_204;

$L__BB0_205:
	setp.eq.s32 	%p170, %r256, 0;
	add.s32 	%r1147, %r266, %r276;
	shl.b32 	%r1148, %r1147, 1;
	mul.wide.s32 	%rd225, %r1148, 4;
	add.s64 	%rd226, %rd18, %rd225;
	ld.global.f32 	%f63, [%rd226];
	@%p170 bra 	$L__BB0_207;
	bra.uni 	$L__BB0_206;

$L__BB0_207:
	mov.f32 	%f271, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f63;
  cvt.rn.f16.f32 high, %f271;
  mov.b32 %r2001, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_208;

$L__BB0_204:
	mov.f32 	%f267, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f267;
  cvt.rn.f16.f32 high, %f267;
  mov.b32 %r2001, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_208;

$L__BB0_206:
	mov.f32 	%f268, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f268;
  cvt.rn.f16.f32 high, %f63;
  mov.b32 %r2001, {low,high};}

	// end inline asm

$L__BB0_208:
	add.s32 	%r1151, %r303, 1;
	mul.wide.s32 	%rd227, %r1151, 4;
	add.s64 	%rd228, %rd19, %rd227;
	st.global.u32 	[%rd228], %r2001;
	add.s32 	%r1996, %r1996, 2;

$L__BB0_209:
	add.f32 	%f64, %f57, 0f3F800000;
	setp.geu.f32 	%p171, %f64, 0f40000000;
	@%p171 bra 	$L__BB0_221;

	@%p20 bra 	$L__BB0_212;
	bra.uni 	$L__BB0_211;

$L__BB0_212:
	setp.eq.s32 	%p172, %r256, 0;
	add.s32 	%r1153, %r264, %r276;
	shl.b32 	%r1154, %r1153, 1;
	or.b32  	%r1155, %r1154, 1;
	mul.wide.s32 	%rd229, %r1155, 4;
	add.s64 	%rd230, %rd18, %rd229;
	ld.global.f32 	%f65, [%rd230];
	@%p172 bra 	$L__BB0_214;
	bra.uni 	$L__BB0_213;

$L__BB0_214:
	mov.f32 	%f277, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f65;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r2003, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_215;

$L__BB0_211:
	mov.f32 	%f273, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f273;
  cvt.rn.f16.f32 high, %f273;
  mov.b32 %r2003, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_215;

$L__BB0_213:
	mov.f32 	%f274, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f274;
  cvt.rn.f16.f32 high, %f65;
  mov.b32 %r2003, {low,high};}

	// end inline asm

$L__BB0_215:
	add.s32 	%r314, %r1996, %r260;
	mul.wide.s32 	%rd231, %r314, 4;
	add.s64 	%rd232, %rd19, %rd231;
	st.global.u32 	[%rd232], %r2003;
	@%p20 bra 	$L__BB0_217;
	bra.uni 	$L__BB0_216;

$L__BB0_217:
	setp.eq.s32 	%p173, %r256, 0;
	add.s32 	%r1159, %r266, %r276;
	shl.b32 	%r1160, %r1159, 1;
	or.b32  	%r1161, %r1160, 1;
	mul.wide.s32 	%rd233, %r1161, 4;
	add.s64 	%rd234, %rd18, %rd233;
	ld.global.f32 	%f66, [%rd234];
	@%p173 bra 	$L__BB0_219;
	bra.uni 	$L__BB0_218;

$L__BB0_219:
	mov.f32 	%f283, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f66;
  cvt.rn.f16.f32 high, %f283;
  mov.b32 %r2004, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_220;

$L__BB0_216:
	mov.f32 	%f279, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f279;
  cvt.rn.f16.f32 high, %f279;
  mov.b32 %r2004, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_220;

$L__BB0_218:
	mov.f32 	%f280, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f280;
  cvt.rn.f16.f32 high, %f66;
  mov.b32 %r2004, {low,high};}

	// end inline asm

$L__BB0_220:
	add.s32 	%r1164, %r314, 1;
	mul.wide.s32 	%rd235, %r1164, 4;
	add.s64 	%rd236, %rd19, %rd235;
	st.global.u32 	[%rd236], %r2004;
	add.s32 	%r1996, %r1996, 2;

$L__BB0_221:
	or.b32  	%r1165, %r1992, %r276;
	setp.gt.s32 	%p174, %r1165, -1;
	and.pred  	%p176, %p154, %p174;
	setp.lt.s32 	%p177, %r1992, %r778;
	and.pred  	%p21, %p177, %p176;
	add.f32 	%f67, %f54, 0f3F000000;
	setp.geu.f32 	%p178, %f67, 0f40000000;
	@%p178 bra 	$L__BB0_233;

	@%p21 bra 	$L__BB0_224;
	bra.uni 	$L__BB0_223;

$L__BB0_224:
	setp.eq.s32 	%p179, %r256, 0;
	add.s32 	%r1167, %r268, %r276;
	shl.b32 	%r1168, %r1167, 1;
	mul.wide.s32 	%rd237, %r1168, 4;
	add.s64 	%rd238, %rd18, %rd237;
	ld.global.f32 	%f68, [%rd238];
	@%p179 bra 	$L__BB0_226;
	bra.uni 	$L__BB0_225;

$L__BB0_226:
	mov.f32 	%f289, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f68;
  cvt.rn.f16.f32 high, %f289;
  mov.b32 %r2006, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_227;

$L__BB0_223:
	mov.f32 	%f285, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f285;
  cvt.rn.f16.f32 high, %f285;
  mov.b32 %r2006, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_227;

$L__BB0_225:
	mov.f32 	%f286, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f286;
  cvt.rn.f16.f32 high, %f68;
  mov.b32 %r2006, {low,high};}

	// end inline asm

$L__BB0_227:
	add.s32 	%r325, %r1996, %r260;
	mul.wide.s32 	%rd239, %r325, 4;
	add.s64 	%rd240, %rd19, %rd239;
	st.global.u32 	[%rd240], %r2006;
	@%p21 bra 	$L__BB0_229;
	bra.uni 	$L__BB0_228;

$L__BB0_229:
	setp.eq.s32 	%p180, %r256, 0;
	add.s32 	%r1172, %r267, %r276;
	shl.b32 	%r1173, %r1172, 1;
	mul.wide.s32 	%rd241, %r1173, 4;
	add.s64 	%rd242, %rd18, %rd241;
	ld.global.f32 	%f69, [%rd242];
	@%p180 bra 	$L__BB0_231;
	bra.uni 	$L__BB0_230;

$L__BB0_231:
	mov.f32 	%f295, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f69;
  cvt.rn.f16.f32 high, %f295;
  mov.b32 %r2007, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_232;

$L__BB0_228:
	mov.f32 	%f291, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f291;
  cvt.rn.f16.f32 high, %f291;
  mov.b32 %r2007, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_232;

$L__BB0_230:
	mov.f32 	%f292, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f292;
  cvt.rn.f16.f32 high, %f69;
  mov.b32 %r2007, {low,high};}

	// end inline asm

$L__BB0_232:
	add.s32 	%r1176, %r325, 1;
	mul.wide.s32 	%rd243, %r1176, 4;
	add.s64 	%rd244, %rd19, %rd243;
	st.global.u32 	[%rd244], %r2007;
	add.s32 	%r1996, %r1996, 2;

$L__BB0_233:
	add.f32 	%f296, %f57, 0f00000000;
	setp.geu.f32 	%p181, %f296, 0f40000000;
	@%p181 bra 	$L__BB0_245;

	@%p21 bra 	$L__BB0_236;
	bra.uni 	$L__BB0_235;

$L__BB0_236:
	setp.eq.s32 	%p182, %r256, 0;
	add.s32 	%r1178, %r268, %r276;
	shl.b32 	%r1179, %r1178, 1;
	or.b32  	%r1180, %r1179, 1;
	mul.wide.s32 	%rd245, %r1180, 4;
	add.s64 	%rd246, %rd18, %rd245;
	ld.global.f32 	%f70, [%rd246];
	@%p182 bra 	$L__BB0_238;
	bra.uni 	$L__BB0_237;

$L__BB0_238:
	mov.f32 	%f302, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f70;
  cvt.rn.f16.f32 high, %f302;
  mov.b32 %r2009, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_239;

$L__BB0_235:
	mov.f32 	%f298, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f298;
  cvt.rn.f16.f32 high, %f298;
  mov.b32 %r2009, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_239;

$L__BB0_237:
	mov.f32 	%f299, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f299;
  cvt.rn.f16.f32 high, %f70;
  mov.b32 %r2009, {low,high};}

	// end inline asm

$L__BB0_239:
	add.s32 	%r336, %r1996, %r260;
	mul.wide.s32 	%rd247, %r336, 4;
	add.s64 	%rd248, %rd19, %rd247;
	st.global.u32 	[%rd248], %r2009;
	@%p21 bra 	$L__BB0_241;
	bra.uni 	$L__BB0_240;

$L__BB0_241:
	setp.eq.s32 	%p183, %r256, 0;
	add.s32 	%r1184, %r267, %r276;
	shl.b32 	%r1185, %r1184, 1;
	or.b32  	%r1186, %r1185, 1;
	mul.wide.s32 	%rd249, %r1186, 4;
	add.s64 	%rd250, %rd18, %rd249;
	ld.global.f32 	%f71, [%rd250];
	@%p183 bra 	$L__BB0_243;
	bra.uni 	$L__BB0_242;

$L__BB0_243:
	mov.f32 	%f308, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f71;
  cvt.rn.f16.f32 high, %f308;
  mov.b32 %r2010, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_244;

$L__BB0_240:
	mov.f32 	%f304, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f304;
  cvt.rn.f16.f32 high, %f304;
  mov.b32 %r2010, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_244;

$L__BB0_242:
	mov.f32 	%f305, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f305;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r2010, {low,high};}

	// end inline asm

$L__BB0_244:
	add.s32 	%r1189, %r336, 1;
	mul.wide.s32 	%rd251, %r1189, 4;
	add.s64 	%rd252, %rd19, %rd251;
	st.global.u32 	[%rd252], %r2010;
	add.s32 	%r1996, %r1996, 2;

$L__BB0_245:
	or.b32  	%r1190, %r270, %r276;
	setp.gt.s32 	%p184, %r1190, -1;
	and.pred  	%p186, %p154, %p184;
	setp.lt.s32 	%p187, %r270, %r778;
	and.pred  	%p22, %p187, %p186;
	@%p178 bra 	$L__BB0_257;

	@%p22 bra 	$L__BB0_248;
	bra.uni 	$L__BB0_247;

$L__BB0_248:
	setp.eq.s32 	%p189, %r256, 0;
	add.s32 	%r1192, %r269, %r276;
	shl.b32 	%r1193, %r1192, 1;
	mul.wide.s32 	%rd253, %r1193, 4;
	add.s64 	%rd254, %rd18, %rd253;
	ld.global.f32 	%f72, [%rd254];
	@%p189 bra 	$L__BB0_250;
	bra.uni 	$L__BB0_249;

$L__BB0_250:
	mov.f32 	%f314, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f72;
  cvt.rn.f16.f32 high, %f314;
  mov.b32 %r2012, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_251;

$L__BB0_247:
	mov.f32 	%f310, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f310;
  cvt.rn.f16.f32 high, %f310;
  mov.b32 %r2012, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_251;

$L__BB0_249:
	mov.f32 	%f311, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f311;
  cvt.rn.f16.f32 high, %f72;
  mov.b32 %r2012, {low,high};}

	// end inline asm

$L__BB0_251:
	add.s32 	%r347, %r1996, %r260;
	mul.wide.s32 	%rd255, %r347, 4;
	add.s64 	%rd256, %rd19, %rd255;
	st.global.u32 	[%rd256], %r2012;
	@%p22 bra 	$L__BB0_253;
	bra.uni 	$L__BB0_252;

$L__BB0_253:
	setp.eq.s32 	%p190, %r256, 0;
	add.s32 	%r1197, %r271, %r276;
	shl.b32 	%r1198, %r1197, 1;
	mul.wide.s32 	%rd257, %r1198, 4;
	add.s64 	%rd258, %rd18, %rd257;
	ld.global.f32 	%f73, [%rd258];
	@%p190 bra 	$L__BB0_255;
	bra.uni 	$L__BB0_254;

$L__BB0_255:
	mov.f32 	%f320, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f73;
  cvt.rn.f16.f32 high, %f320;
  mov.b32 %r2013, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_256;

$L__BB0_252:
	mov.f32 	%f316, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f316;
  cvt.rn.f16.f32 high, %f316;
  mov.b32 %r2013, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_256;

$L__BB0_254:
	mov.f32 	%f317, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f317;
  cvt.rn.f16.f32 high, %f73;
  mov.b32 %r2013, {low,high};}

	// end inline asm

$L__BB0_256:
	add.s32 	%r1201, %r347, 1;
	mul.wide.s32 	%rd259, %r1201, 4;
	add.s64 	%rd260, %rd19, %rd259;
	st.global.u32 	[%rd260], %r2013;
	add.s32 	%r1996, %r1996, 2;

$L__BB0_257:
	@%p171 bra 	$L__BB0_269;

	@%p22 bra 	$L__BB0_260;
	bra.uni 	$L__BB0_259;

$L__BB0_260:
	setp.eq.s32 	%p192, %r256, 0;
	add.s32 	%r1203, %r269, %r276;
	shl.b32 	%r1204, %r1203, 1;
	or.b32  	%r1205, %r1204, 1;
	mul.wide.s32 	%rd261, %r1205, 4;
	add.s64 	%rd262, %rd18, %rd261;
	ld.global.f32 	%f74, [%rd262];
	@%p192 bra 	$L__BB0_262;
	bra.uni 	$L__BB0_261;

$L__BB0_262:
	mov.f32 	%f326, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f74;
  cvt.rn.f16.f32 high, %f326;
  mov.b32 %r2015, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_263;

$L__BB0_259:
	mov.f32 	%f322, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f322;
  cvt.rn.f16.f32 high, %f322;
  mov.b32 %r2015, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_263;

$L__BB0_261:
	mov.f32 	%f323, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f323;
  cvt.rn.f16.f32 high, %f74;
  mov.b32 %r2015, {low,high};}

	// end inline asm

$L__BB0_263:
	add.s32 	%r358, %r1996, %r260;
	mul.wide.s32 	%rd263, %r358, 4;
	add.s64 	%rd264, %rd19, %rd263;
	st.global.u32 	[%rd264], %r2015;
	@%p22 bra 	$L__BB0_265;
	bra.uni 	$L__BB0_264;

$L__BB0_265:
	setp.eq.s32 	%p193, %r256, 0;
	add.s32 	%r1209, %r271, %r276;
	shl.b32 	%r1210, %r1209, 1;
	or.b32  	%r1211, %r1210, 1;
	mul.wide.s32 	%rd265, %r1211, 4;
	add.s64 	%rd266, %rd18, %rd265;
	ld.global.f32 	%f75, [%rd266];
	@%p193 bra 	$L__BB0_267;
	bra.uni 	$L__BB0_266;

$L__BB0_267:
	mov.f32 	%f332, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f75;
  cvt.rn.f16.f32 high, %f332;
  mov.b32 %r2016, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_268;

$L__BB0_264:
	mov.f32 	%f328, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f328;
  cvt.rn.f16.f32 high, %f328;
  mov.b32 %r2016, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_268;

$L__BB0_266:
	mov.f32 	%f329, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f329;
  cvt.rn.f16.f32 high, %f75;
  mov.b32 %r2016, {low,high};}

	// end inline asm

$L__BB0_268:
	add.s32 	%r1214, %r358, 1;
	mul.wide.s32 	%rd267, %r1214, 4;
	add.s64 	%rd268, %rd19, %rd267;
	st.global.u32 	[%rd268], %r2016;
	add.s32 	%r1996, %r1996, 2;

$L__BB0_269:
	or.b32  	%r1215, %r273, %r276;
	setp.gt.s32 	%p194, %r1215, -1;
	and.pred  	%p196, %p154, %p194;
	setp.lt.s32 	%p197, %r273, %r778;
	and.pred  	%p23, %p197, %p196;
	@%p168 bra 	$L__BB0_281;

	@%p23 bra 	$L__BB0_272;
	bra.uni 	$L__BB0_271;

$L__BB0_272:
	setp.eq.s32 	%p199, %r256, 0;
	add.s32 	%r1217, %r272, %r276;
	shl.b32 	%r1218, %r1217, 1;
	mul.wide.s32 	%rd269, %r1218, 4;
	add.s64 	%rd270, %rd18, %rd269;
	ld.global.f32 	%f76, [%rd270];
	@%p199 bra 	$L__BB0_274;
	bra.uni 	$L__BB0_273;

$L__BB0_274:
	mov.f32 	%f338, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f76;
  cvt.rn.f16.f32 high, %f338;
  mov.b32 %r2018, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_275;

$L__BB0_271:
	mov.f32 	%f334, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f334;
  cvt.rn.f16.f32 high, %f334;
  mov.b32 %r2018, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_275;

$L__BB0_273:
	mov.f32 	%f335, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f335;
  cvt.rn.f16.f32 high, %f76;
  mov.b32 %r2018, {low,high};}

	// end inline asm

$L__BB0_275:
	add.s32 	%r369, %r1996, %r260;
	mul.wide.s32 	%rd271, %r369, 4;
	add.s64 	%rd272, %rd19, %rd271;
	st.global.u32 	[%rd272], %r2018;
	@%p23 bra 	$L__BB0_277;
	bra.uni 	$L__BB0_276;

$L__BB0_277:
	setp.eq.s32 	%p200, %r256, 0;
	add.s32 	%r1222, %r274, %r276;
	shl.b32 	%r1223, %r1222, 1;
	mul.wide.s32 	%rd273, %r1223, 4;
	add.s64 	%rd274, %rd18, %rd273;
	ld.global.f32 	%f77, [%rd274];
	@%p200 bra 	$L__BB0_279;
	bra.uni 	$L__BB0_278;

$L__BB0_279:
	mov.f32 	%f344, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f77;
  cvt.rn.f16.f32 high, %f344;
  mov.b32 %r2019, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_280;

$L__BB0_276:
	mov.f32 	%f340, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f340;
  cvt.rn.f16.f32 high, %f340;
  mov.b32 %r2019, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_280;

$L__BB0_278:
	mov.f32 	%f341, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f341;
  cvt.rn.f16.f32 high, %f77;
  mov.b32 %r2019, {low,high};}

	// end inline asm

$L__BB0_280:
	add.s32 	%r1226, %r369, 1;
	mul.wide.s32 	%rd275, %r1226, 4;
	add.s64 	%rd276, %rd19, %rd275;
	st.global.u32 	[%rd276], %r2019;
	add.s32 	%r1996, %r1996, 2;

$L__BB0_281:
	@%p161 bra 	$L__BB0_293;

	@%p23 bra 	$L__BB0_284;
	bra.uni 	$L__BB0_283;

$L__BB0_284:
	setp.eq.s32 	%p202, %r256, 0;
	add.s32 	%r1228, %r272, %r276;
	shl.b32 	%r1229, %r1228, 1;
	or.b32  	%r1230, %r1229, 1;
	mul.wide.s32 	%rd277, %r1230, 4;
	add.s64 	%rd278, %rd18, %rd277;
	ld.global.f32 	%f78, [%rd278];
	@%p202 bra 	$L__BB0_286;
	bra.uni 	$L__BB0_285;

$L__BB0_286:
	mov.f32 	%f350, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f78;
  cvt.rn.f16.f32 high, %f350;
  mov.b32 %r2021, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_287;

$L__BB0_283:
	mov.f32 	%f346, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f346;
  cvt.rn.f16.f32 high, %f346;
  mov.b32 %r2021, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_287;

$L__BB0_285:
	mov.f32 	%f347, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f347;
  cvt.rn.f16.f32 high, %f78;
  mov.b32 %r2021, {low,high};}

	// end inline asm

$L__BB0_287:
	add.s32 	%r380, %r1996, %r260;
	mul.wide.s32 	%rd279, %r380, 4;
	add.s64 	%rd280, %rd19, %rd279;
	st.global.u32 	[%rd280], %r2021;
	@%p23 bra 	$L__BB0_289;
	bra.uni 	$L__BB0_288;

$L__BB0_289:
	setp.eq.s32 	%p203, %r256, 0;
	add.s32 	%r1234, %r274, %r276;
	shl.b32 	%r1235, %r1234, 1;
	or.b32  	%r1236, %r1235, 1;
	mul.wide.s32 	%rd281, %r1236, 4;
	add.s64 	%rd282, %rd18, %rd281;
	ld.global.f32 	%f79, [%rd282];
	@%p203 bra 	$L__BB0_291;
	bra.uni 	$L__BB0_290;

$L__BB0_291:
	mov.f32 	%f356, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f79;
  cvt.rn.f16.f32 high, %f356;
  mov.b32 %r2022, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_292;

$L__BB0_288:
	mov.f32 	%f352, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f352;
  cvt.rn.f16.f32 high, %f352;
  mov.b32 %r2022, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_292;

$L__BB0_290:
	mov.f32 	%f353, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f353;
  cvt.rn.f16.f32 high, %f79;
  mov.b32 %r2022, {low,high};}

	// end inline asm

$L__BB0_292:
	add.s32 	%r1239, %r380, 1;
	mul.wide.s32 	%rd283, %r1239, 4;
	add.s64 	%rd284, %rd19, %rd283;
	st.global.u32 	[%rd284], %r2022;
	add.s32 	%r1996, %r1996, 2;

$L__BB0_293:
	add.s64 	%rd574, %rd574, 4;
	setp.ne.s64 	%p204, %rd574, %rd286;
	@%p204 bra 	$L__BB0_173;

$L__BB0_294:
	add.s32 	%r1992, %r1992, %r47;
	setp.lt.s32 	%p205, %r1992, %r778;
	@%p205 bra 	$L__BB0_171;

$L__BB0_295:
	add.s32 	%r1986, %r1986, %r804;
	setp.lt.s32 	%p206, %r1986, %r777;
	@%p206 bra 	$L__BB0_169;
	bra.uni 	$L__BB0_296;

$L__BB0_150:
	@%p35 bra 	$L__BB0_296;

	neg.s32 	%r229, %r79;
	mov.u32 	%r1054, 31;
	sub.s32 	%r1055, %r1054, %r45;
	setp.gt.s32 	%p144, %r44, %r45;
	selp.b32 	%r1056, %r45, %r1055, %p144;
	shl.b32 	%r1057, %r1056, 2;
	mov.u32 	%r1058, 2;
	sub.s32 	%r230, %r1057, %r780;
	shl.b32 	%r1059, %r779, 2;
	mov.u32 	%r1060, 128;
	sub.s32 	%r231, %r1060, %r1059;
	sub.s32 	%r1061, %r1058, %r780;
	add.s32 	%r232, %r1061, %r1057;
	add.s32 	%r233, %r777, -1;
	add.s32 	%r234, %r230, 1;
	add.s32 	%r235, %r232, 1;
	rem.s32 	%r1086, %r234, %r231;
	add.s32 	%r1087, %r1086, %r231;
	rem.s32 	%r246, %r1087, %r231;
	rem.s32 	%r1088, %r235, %r231;
	add.s32 	%r1089, %r1088, %r231;
	rem.s32 	%r247, %r1089, %r231;

$L__BB0_152:
	setp.ne.s32 	%p145, %r41, %r229;
	@%p145 bra 	$L__BB0_166;

	shl.b32 	%r237, %r1986, 1;
	rem.s32 	%r1062, %r230, %r231;
	add.s32 	%r1063, %r1062, %r231;
	rem.s32 	%r238, %r1063, %r231;
	rem.s32 	%r1064, %r232, %r231;
	add.s32 	%r1065, %r1064, %r231;
	rem.s32 	%r239, %r1065, %r231;
	@%p144 bra 	$L__BB0_155;
	bra.uni 	$L__BB0_154;

$L__BB0_155:
	mul.lo.s32 	%r1068, %r237, %r231;
	add.s32 	%r1069, %r1068, %r238;
	mul.wide.s32 	%rd186, %r1069, 4;
	add.s64 	%rd187, %rd18, %rd186;
	ld.global.f32 	%f217, [%rd187];
	add.s32 	%r1070, %r1068, %r239;
	mul.wide.s32 	%rd188, %r1070, 4;
	add.s64 	%rd189, %rd18, %rd188;
	ld.global.f32 	%f218, [%rd189];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f217;
  cvt.rn.f16.f32 high, %f218;
  mov.b32 %r1987, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_156;

$L__BB0_154:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f216;
  mov.b32 %r1987, {low,high};}

	// end inline asm

$L__BB0_156:
	shl.b32 	%r1071, %r1986, 5;
	add.s32 	%r1072, %r1071, %r45;
	shl.b32 	%r1073, %r1072, 2;
	mul.wide.s32 	%rd190, %r1073, 4;
	add.s64 	%rd20, %rd19, %rd190;
	st.global.u32 	[%rd20], %r1987;
	@%p144 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_157;

$L__BB0_158:
	add.s32 	%r1076, %r237, 1;
	mul.lo.s32 	%r1077, %r1076, %r231;
	add.s32 	%r1078, %r1077, %r238;
	mul.wide.s32 	%rd191, %r1078, 4;
	add.s64 	%rd192, %rd18, %rd191;
	ld.global.f32 	%f221, [%rd192];
	add.s32 	%r1079, %r1077, %r239;
	mul.wide.s32 	%rd193, %r1079, 4;
	add.s64 	%rd194, %rd18, %rd193;
	ld.global.f32 	%f222, [%rd194];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f221;
  cvt.rn.f16.f32 high, %f222;
  mov.b32 %r1988, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_159;

$L__BB0_157:
	mov.f32 	%f220, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f220;
  cvt.rn.f16.f32 high, %f220;
  mov.b32 %r1988, {low,high};}

	// end inline asm

$L__BB0_159:
	add.s32 	%r1080, %r233, %r1986;
	rem.s32 	%r1081, %r1080, %r777;
	shl.b32 	%r1082, %r1081, 5;
	add.s32 	%r1083, %r1082, %r45;
	shl.b32 	%r1084, %r1083, 2;
	or.b32  	%r1085, %r1084, 2;
	mul.wide.s32 	%rd195, %r1085, 4;
	add.s64 	%rd21, %rd19, %rd195;
	st.global.u32 	[%rd21], %r1988;
	@%p144 bra 	$L__BB0_161;
	bra.uni 	$L__BB0_160;

$L__BB0_161:
	mul.lo.s32 	%r1092, %r237, %r231;
	add.s32 	%r1093, %r1092, %r246;
	mul.wide.s32 	%rd196, %r1093, 4;
	add.s64 	%rd197, %rd18, %rd196;
	ld.global.f32 	%f225, [%rd197];
	add.s32 	%r1094, %r1092, %r247;
	mul.wide.s32 	%rd198, %r1094, 4;
	add.s64 	%rd199, %rd18, %rd198;
	ld.global.f32 	%f226, [%rd199];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f225;
  cvt.rn.f16.f32 high, %f226;
  mov.b32 %r1989, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_162;

$L__BB0_160:
	mov.f32 	%f224, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f224;
  cvt.rn.f16.f32 high, %f224;
  mov.b32 %r1989, {low,high};}

	// end inline asm

$L__BB0_162:
	st.global.u32 	[%rd20+4], %r1989;
	@%p144 bra 	$L__BB0_164;
	bra.uni 	$L__BB0_163;

$L__BB0_164:
	add.s32 	%r1097, %r237, 1;
	mul.lo.s32 	%r1098, %r1097, %r231;
	add.s32 	%r1099, %r1098, %r246;
	mul.wide.s32 	%rd200, %r1099, 4;
	add.s64 	%rd201, %rd18, %rd200;
	ld.global.f32 	%f229, [%rd201];
	add.s32 	%r1100, %r1098, %r247;
	mul.wide.s32 	%rd202, %r1100, 4;
	add.s64 	%rd203, %rd18, %rd202;
	ld.global.f32 	%f230, [%rd203];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f229;
  cvt.rn.f16.f32 high, %f230;
  mov.b32 %r1990, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_165;

$L__BB0_163:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f228;
  mov.b32 %r1990, {low,high};}

	// end inline asm

$L__BB0_165:
	st.global.u32 	[%rd21+4], %r1990;

$L__BB0_166:
	add.s32 	%r1986, %r1986, %r804;
	setp.lt.s32 	%p150, %r1986, %r777;
	@%p150 bra 	$L__BB0_152;

$L__BB0_296:
	add.s32 	%r1241, %r772, -1;
	mad.lo.s32 	%r1242, %r773, 576, 128;
	mul.lo.s32 	%r1243, %r1242, %r1241;
	add.s32 	%r1244, %r69, -64;
	add.s32 	%r1245, %r1244, %r69;
	add.s32 	%r1246, %r773, -1;
	mad.lo.s32 	%r1247, %r1245, %r1246, %r1243;
	mul.lo.s32 	%r1248, %r1241, %r773;
	mul.lo.s32 	%r1249, %r1248, 320;
	mad.lo.s32 	%r1250, %r1244, %r1246, %r1249;
	add.s32 	%r389, %r1250, %r1247;
	setp.lt.s32 	%p207, %r389, 1;
	mov.f32 	%f358, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f358;
  cvt.rn.f16.f32 high, %f358;
  mov.b32 %r2025, {low,high};}

	// end inline asm
	@%p207 bra 	$L__BB0_299;

	mov.u32 	%r2026, 0;
	mov.u32 	%r2024, _ZN6kernel5shmemE;

$L__BB0_298:
	st.shared.u32 	[%r2024], %r2025;
	mov.f32 	%f366, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f366;
  cvt.rn.f16.f32 high, %f366;
  mov.b32 %r1253, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2024+4], %r1253;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f366;
  cvt.rn.f16.f32 high, %f366;
  mov.b32 %r1254, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2024+8], %r1254;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f366;
  cvt.rn.f16.f32 high, %f366;
  mov.b32 %r1255, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2024+12], %r1255;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f366;
  cvt.rn.f16.f32 high, %f366;
  mov.b32 %r2025, {low,high};}

	// end inline asm
	add.s32 	%r2024, %r2024, 16;
	add.s32 	%r2026, %r2026, 4;
	setp.lt.s32 	%p208, %r2026, %r389;
	@%p208 bra 	$L__BB0_298;

$L__BB0_299:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f358;
  cvt.rn.f16.f32 high, %f358;
  mov.b32 %r1258, {low,high};}

	// end inline asm
	mov.u32 	%r1259, 31;
	sub.s32 	%r1260, %r1259, %r45;
	setp.gt.s32 	%p210, %r44, %r45;
	selp.b32 	%r1261, %r45, %r1260, %p210;
	shl.b32 	%r1262, %r1261, 2;
	sub.s32 	%r398, %r1262, %r780;
	shl.b32 	%r1263, %r779, 2;
	mov.u32 	%r1264, 128;
	sub.s32 	%r399, %r1264, %r1263;
	rem.s32 	%r1265, %r398, %r399;
	add.s32 	%r1266, %r1265, %r399;
	rem.s32 	%r400, %r1266, %r399;
	add.s32 	%r1267, %r398, 2;
	rem.s32 	%r1268, %r1267, %r399;
	add.s32 	%r1269, %r1268, %r399;
	rem.s32 	%r401, %r1269, %r399;
	add.s32 	%r1280, %r398, 1;
	rem.s32 	%r1281, %r1280, %r399;
	add.s32 	%r1282, %r1281, %r399;
	rem.s32 	%r402, %r1282, %r399;
	add.s32 	%r1283, %r398, 3;
	rem.s32 	%r1284, %r1283, %r399;
	add.s32 	%r1285, %r1284, %r399;
	rem.s32 	%r403, %r1285, %r399;
	// begin inline asm
	mov.u32 %r1296, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd292, %r1296;
	// begin inline asm
	mov.u32 %r1297, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd293, %r1297;
	bfi.b64 	%rd29, %rd293, %rd292, 32, 32;
	setp.ne.s64 	%p218, %rd29, 0;
	@%p218 bra 	$L__BB0_317;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_317:
	add.s64 	%rd30, %rd29, 4;
	mov.u32 	%r1298, %nctaid.y;
	mov.u32 	%r1299, %nctaid.x;
	mul.lo.s32 	%r1300, %r1299, %r1298;
	mov.u32 	%r1301, %nctaid.z;
	mul.lo.s32 	%r404, %r1300, %r1301;
	neg.s32 	%r1302, %r41;
	add.s32 	%r1303, %r45, %r40;
	setp.ne.s32 	%p219, %r1303, %r1302;
	mov.u32 	%r1304, %ctaid.x;
	add.s32 	%r405, %r1304, %r42;
	neg.s32 	%r406, %r43;
	bar.sync 	0;
	@%p219 bra 	$L__BB0_321;

	setp.eq.s32 	%p220, %r405, %r406;
	mov.u32 	%r1307, -2147483647;
	sub.s32 	%r1308, %r1307, %r404;
	selp.b32 	%r1306, %r1308, 1, %p220;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1305,[%rd30],%r1306;
	// end inline asm

$L__BB0_319:
	ld.volatile.u32 	%r1309, [%rd30];
	xor.b32  	%r1310, %r1309, %r1305;
	setp.gt.s32 	%p221, %r1310, -1;
	@%p221 bra 	$L__BB0_319;

	// begin inline asm
	ld.acquire.gpu.u32 %r1311,[%rd30];
	// end inline asm

$L__BB0_321:
	bar.sync 	0;
	setp.lt.s32 	%p222, %r48, 1;
	@%p222 bra 	$L__BB0_617;

	setp.lt.s32 	%p223, %r400, %r791;
	setp.ge.s32 	%p224, %r400, %r790;
	and.pred  	%p24, %p223, %p224;
	setp.lt.s32 	%p225, %r402, %r791;
	setp.ge.s32 	%p226, %r402, %r790;
	and.pred  	%p25, %p225, %p226;
	setp.lt.s32 	%p227, %r401, %r791;
	setp.ge.s32 	%p228, %r401, %r790;
	and.pred  	%p26, %p227, %p228;
	setp.lt.s32 	%p229, %r403, %r791;
	setp.ge.s32 	%p230, %r403, %r790;
	and.pred  	%p27, %p229, %p230;
	mov.u32 	%r2143, 0;
	mul.wide.s32 	%rd300, %r45, 16;
	mul.wide.s32 	%rd302, %r45, 8;
	mov.u32 	%r2027, %r1258;
	mov.u32 	%r2028, %r1258;
	mov.u32 	%r2158, %r1258;
	mov.u32 	%r2030, %r1258;
	mov.u32 	%r2031, %r1258;
	mov.u32 	%r2243, %r1258;
	mov.u32 	%r2033, %r1258;
	mov.u32 	%r2226, %r1258;
	mov.u32 	%r2035, %r1258;
	mov.u32 	%r2160, %r1258;
	mov.u32 	%r2037, %r1258;
	mov.u32 	%r2228, %r1258;
	mov.u32 	%r2039, %r1258;
	mov.u32 	%r2040, %r1258;
	mov.u32 	%r2041, %r1258;
	mov.u32 	%r2042, %r1258;
	mov.u32 	%r2043, %r1258;
	mov.u32 	%r2044, %r1258;
	mov.u32 	%r2045, %r1258;
	mov.u32 	%r2245, %r1258;
	mov.u32 	%r2047, %r1258;
	mov.u32 	%r2048, %r1258;
	mov.u32 	%r2049, %r1258;
	mov.u32 	%r2050, %r1258;
	mov.u32 	%r2051, %r1258;
	mov.u32 	%r2052, %r1258;
	mov.u32 	%r2053, %r1258;
	mov.u32 	%r2054, %r1258;
	mov.u32 	%r2055, %r1258;
	mov.u32 	%r2056, %r1258;
	mov.u32 	%r2057, %r1258;
	mov.u32 	%r2058, %r1258;
	mov.u32 	%r2059, %r1258;
	mov.u32 	%r2060, %r1258;
	mov.u32 	%r2061, %r1258;
	mov.u32 	%r2062, %r1258;
	mov.u32 	%r2063, %r1258;
	mov.u32 	%r2064, %r1258;
	mov.u32 	%r2065, %r1258;
	mov.u32 	%r2066, %r1258;
	mov.u32 	%r2067, %r1258;
	mov.u32 	%r2068, %r1258;
	mov.u32 	%r2069, %r1258;
	mov.u32 	%r2070, %r1258;
	mov.u32 	%r2250, %r1258;
	mov.u32 	%r2237, %r1258;
	mov.u32 	%r2168, %r1258;
	mov.u32 	%r2074, %r1258;
	mov.u32 	%r2251, %r1258;
	mov.u32 	%r2239, %r1258;
	mov.u32 	%r2170, %r1258;
	mov.u32 	%r2078, %r1258;
	mov.u32 	%r2198, %r1258;
	mov.u32 	%r2080, %r1258;
	mov.u32 	%r2081, %r1258;
	mov.u32 	%r2199, %r1258;
	mov.u32 	%r2083, %r1258;
	mov.u32 	%r2084, %r1258;
	mov.u32 	%r2200, %r1258;
	mov.u32 	%r2201, %r1258;
	mov.u32 	%r2087, %r1258;
	mov.u32 	%r2088, %r1258;
	mov.u32 	%r2089, %r1258;
	mov.u32 	%r2090, %r1258;
	mov.u32 	%r2202, %r1258;
	mov.u32 	%r2203, %r1258;
	mov.u32 	%r2093, %r1258;
	mov.u32 	%r2094, %r1258;
	mov.u32 	%r2095, %r1258;
	mov.u32 	%r2096, %r1258;
	mov.u32 	%r2097, %r1258;
	mov.u32 	%r2098, %r1258;
	mov.u32 	%r2099, %r1258;
	mov.u32 	%r2100, %r1258;
	mov.u32 	%r2101, %r1258;
	mov.u32 	%r2102, %r1258;
	mov.u32 	%r2207, %r1258;
	mov.u32 	%r2104, %r1258;
	mov.u32 	%r2105, %r1258;
	mov.u32 	%r2106, %r1258;
	mov.u32 	%r2107, %r1258;
	mov.u32 	%r2108, %r1258;
	mov.u32 	%r2209, %r1258;
	mov.u32 	%r2110, %r1258;
	mov.u32 	%r2111, %r1258;
	mov.u32 	%r2112, %r1258;
	mov.u32 	%r2113, %r1258;
	mov.u32 	%r2114, %r1258;
	mov.u32 	%r2210, %r1258;
	mov.u32 	%r2116, %r1258;
	mov.u32 	%r2117, %r1258;
	mov.u32 	%r2118, %r1258;
	mov.u32 	%r2119, %r1258;
	mov.u32 	%r2120, %r1258;
	mov.u32 	%r2121, %r1258;
	mov.u32 	%r2211, %r1258;
	mov.u32 	%r2123, %r1258;
	mov.u32 	%r2124, %r1258;
	mov.u32 	%r2125, %r1258;
	mov.u32 	%r2126, %r1258;
	mov.u32 	%r2127, %r1258;
	mov.u32 	%r2128, %r1258;
	mov.u32 	%r2129, %r1258;
	mov.u32 	%r2130, %r1258;
	mov.u32 	%r2131, %r1258;
	mov.u32 	%r2132, %r1258;
	mov.u32 	%r2133, %r1258;
	mov.u32 	%r2134, %r1258;
	mov.u32 	%r2135, %r1258;
	mov.u32 	%r2136, %r1258;
	mov.u32 	%r2137, %r1258;
	mov.u32 	%r2138, %r1258;
	mov.u32 	%r2139, %r1258;
	mov.u32 	%r2140, %r1258;
	mov.u32 	%r2141, %r1258;
	mov.u32 	%r2142, %r1258;
	mov.u32 	%r2144, %r1258;
	mov.u32 	%r2145, %r1258;
	mov.u32 	%r2146, %r1258;
	mov.u32 	%r2147, %r1258;
	mov.u32 	%r2148, %r1258;
	mov.u32 	%r2149, %r1258;
	mov.u32 	%r2150, %r1258;
	mov.u32 	%r2151, %r1258;
	mov.u32 	%r2152, %r1258;
	mov.u32 	%r2153, %r1258;
	mov.u32 	%r2154, %r1258;
	mov.u32 	%r2155, %r1258;
	mov.u32 	%r2159, %r2035;
	mov.u32 	%r2161, %r2039;
	mov.u32 	%r2169, %r2074;
	mov.u32 	%r2171, %r2078;

$L__BB0_323:
	mov.u32 	%r445, %r2151;
	mov.u32 	%r440, %r2150;
	mov.u32 	%r433, %r2148;
	mov.u32 	%r425, %r2146;
	mov.u32 	%r2150, %r2145;
	mov.u32 	%r2151, %r2144;
	mov.u32 	%r519, %r2126;
	mov.u32 	%r518, %r2125;
	mov.u32 	%r515, %r2211;
	mov.u32 	%r514, %r2121;
	mov.u32 	%r512, %r2119;
	mov.u32 	%r511, %r2118;
	mov.u32 	%r508, %r2210;
	mov.u32 	%r507, %r2114;
	mov.u32 	%r505, %r2112;
	mov.u32 	%r502, %r2209;
	mov.u32 	%r499, %r2106;
	mov.u32 	%r496, %r2207;
	mov.u32 	%r2125, %r2096;
	mov.u32 	%r488, %r2095;
	mov.u32 	%r485, %r2093;
	mov.u32 	%r2121, %r2203;
	mov.u32 	%r483, %r2202;
	mov.u32 	%r2118, %r2090;
	mov.u32 	%r481, %r2089;
	mov.u32 	%r478, %r2087;
	mov.u32 	%r2114, %r2201;
	mov.u32 	%r476, %r2200;
	mov.u32 	%r475, %r2084;
	mov.u32 	%r472, %r2199;
	mov.u32 	%r471, %r2081;
	mov.u32 	%r468, %r2198;
	mov.u32 	%r2145, %r2251;
	mov.u32 	%r2144, %r2250;
	mov.u32 	%r459, %r2070;
	mov.u32 	%r455, %r2066;
	mov.u32 	%r2146, %r2065;
	mov.u32 	%r453, %r2064;
	mov.u32 	%r452, %r2063;
	mov.u32 	%r448, %r2059;
	mov.u32 	%r2148, %r2058;
	mov.u32 	%r2126, %r2057;
	mov.u32 	%r444, %r2056;
	mov.u32 	%r2093, %r2055;
	mov.u32 	%r442, %r2054;
	mov.u32 	%r2119, %r2053;
	mov.u32 	%r439, %r2052;
	mov.u32 	%r2087, %r2051;
	mov.u32 	%r2112, %r2050;
	mov.u32 	%r436, %r2049;
	mov.u32 	%r2084, %r2048;
	mov.u32 	%r432, %r2047;
	mov.u32 	%r2051, %r2245;
	mov.u32 	%r2052, %r2045;
	mov.u32 	%r2106, %r2044;
	mov.u32 	%r428, %r2043;
	mov.u32 	%r2081, %r2042;
	mov.u32 	%r424, %r2041;
	mov.u32 	%r2089, %r2040;
	mov.u32 	%r2090, %r2160;
	mov.u32 	%r2055, %r2243;
	mov.u32 	%r413, %r2031;
	mov.u32 	%r412, %r2030;
	mov.u32 	%r2096, %r2158;
	mov.u32 	%r2095, %r2028;
	mov.u32 	%r2056, %r2027;
	not.b32 	%r1314, %r42;
	add.s32 	%r1315, %r774, %r1314;
	mul.lo.s32 	%r1316, %r1315, %r776;
	add.s32 	%r1317, %r2143, %r1316;
	not.b32 	%r1319, %r43;
	add.s32 	%r1320, %r775, %r1319;
	mul.lo.s32 	%r1321, %r1320, %r776;
	add.s32 	%r1322, %r2143, %r1321;
	rem.s32 	%r537, %r1317, %r68;
	rem.s32 	%r538, %r1322, %r850;
	add.s32 	%r1326, %r1316, %r1321;
	add.s32 	%r1327, %r1326, %r777;
	not.b32 	%r1328, %r40;
	add.s32 	%r1329, %r772, %r1328;
	mad.lo.s32 	%r1330, %r1315, %r772, %r1329;
	not.b32 	%r1332, %r41;
	add.s32 	%r1333, %r773, %r1332;
	mad.lo.s32 	%r1334, %r1320, %r773, %r1333;
	add.s32 	%r1335, %r1330, %r1334;
	shl.b32 	%r1336, %r1335, 1;
	add.s32 	%r1337, %r1327, %r1336;
	add.s32 	%r1338, %r2143, %r1337;
	add.s32 	%r1339, %r2143, %r1326;
	div.s32 	%r1340, %r1338, %r777;
	mul.lo.s32 	%r1341, %r1340, %r777;
	sub.s32 	%r1342, %r47, %r777;
	sub.s32 	%r539, %r1338, %r1341;
	sub.s32 	%r1343, %r1330, %r1334;
	shl.b32 	%r1344, %r1343, 1;
	add.s32 	%r1345, %r1344, %r778;
	mad.lo.s32 	%r1346, %r1340, %r47, %r1345;
	mad.lo.s32 	%r1347, %r1340, %r1342, %r1339;
	div.s32 	%r1348, %r1346, %r778;
	mul.lo.s32 	%r1349, %r1348, %r778;
	sub.s32 	%r1352, %r805, %r778;
	sub.s32 	%r540, %r1346, %r1349;
	mad.lo.s32 	%r541, %r1348, %r1352, %r1347;
	ld.param.u64 	%rd297, [%rd1+104];
	cvta.to.global.u64 	%rd31, %rd297;
	setp.ne.s32 	%p231, %r40, 0;
	@%p231 bra 	$L__BB0_328;

	setp.eq.s32 	%p232, %r41, 0;
	mad.lo.s32 	%r1355, %r537, %r775, %r43;
	mul.lo.s32 	%r1356, %r773, %r1355;
	mul.lo.s32 	%r1357, %r1356, 768;
	mad.lo.s32 	%r1358, %r41, 384, %r1357;
	add.s32 	%r1359, %r1358, -64;
	mul.wide.s32 	%rd298, %r1359, 4;
	add.s64 	%rd299, %rd31, %rd298;
	add.s64 	%rd301, %rd299, %rd300;
	ld.global.v4.u32 	{%r2050, %r2044, %r2048, %r2042}, [%rd301+256];
	ld.global.v4.u32 	{%r2171, %r2169, %r2161, %r2159}, [%rd301+1024];
	add.s64 	%rd32, %rd299, %rd302;
	mov.u32 	%r2158, %r2096;
	mov.u32 	%r2160, %r2090;
	@%p232 bra 	$L__BB0_326;

	ld.global.v2.u32 	{%r2158, %r2160}, [%rd32];

$L__BB0_326:
	setp.ne.s32 	%p233, %r41, %r1246;
	ld.global.v2.u32 	{%r2049, %r2043}, [%rd32+768];
	@%p233 bra 	$L__BB0_328;

	ld.global.v2.u32 	{%r2170, %r2168}, [%rd32+1536];

$L__BB0_328:
	setp.ne.s32 	%p234, %r41, 0;
	mov.u32 	%r2028, %r2095;
	mov.u32 	%r2040, %r2089;
	mov.u32 	%r2053, %r2119;
	mov.u32 	%r2057, %r2126;
	mov.u32 	%r2178, %r2062;
	mov.u32 	%r2063, %r452;
	mov.u32 	%r2180, %r2069;
	mov.u32 	%r2070, %r459;
	mov.u32 	%r2182, %r2098;
	mov.u32 	%r2183, %r2100;
	@%p234 bra 	$L__BB0_330;

	not.b32 	%r1933, %r40;
	add.s32 	%r1932, %r772, %r1933;
	mad.lo.s32 	%r1378, %r538, %r774, %r42;
	mul.lo.s32 	%r1382, %r1378, %r853;
	mad.lo.s32 	%r1385, %r1932, 384, %r1382;
	add.s32 	%r1386, %r1385, -64;
	mad.lo.s32 	%r1389, %r855, %r68, %r1386;
	mul.wide.s32 	%rd303, %r1389, 4;
	add.s64 	%rd304, %rd31, %rd303;
	add.s64 	%rd306, %rd304, %rd300;
	ld.global.v4.u32 	{%r2183, %r2182, %r2180, %r2178}, [%rd306+256];
	ld.global.v4.u32 	{%r2057, %r2053, %r2028, %r2040}, [%rd306+1024];
	add.s64 	%rd308, %rd304, %rd302;
	ld.global.v2.u32 	{%r2070, %r2063}, [%rd308+768];
	ld.global.v2.u32 	{%r2158, %r2160}, [%rd308+1536];

$L__BB0_330:
	ld.param.u64 	%rd310, [%rd1+112];
	cvta.to.global.u64 	%rd33, %rd310;
	add.s32 	%r1402, %r777, -1;
	setp.ge.s32 	%p235, %r539, %r1402;
	setp.lt.s32 	%p236, %r539, 2;
	or.pred  	%p237, %p236, %p235;
	setp.lt.s32 	%p238, %r540, 2;
	or.pred  	%p239, %p238, %p237;
	add.s32 	%r1403, %r778, -2;
	setp.ge.s32 	%p240, %r540, %r1403;
	or.pred  	%p241, %p240, %p239;
	mov.u32 	%r2198, %r1258;
	mov.u32 	%r2199, %r1258;
	mov.u32 	%r2200, %r1258;
	mov.u32 	%r2201, %r1258;
	mov.u32 	%r2202, %r1258;
	mov.u32 	%r2203, %r1258;
	mov.u32 	%r2204, %r1258;
	mov.u32 	%r2205, %r1258;
	mov.u32 	%r2206, %r1258;
	mov.u32 	%r2207, %r1258;
	mov.u32 	%r2208, %r1258;
	mov.u32 	%r2209, %r1258;
	mov.u32 	%r2210, %r1258;
	mov.u32 	%r2211, %r1258;
	mov.u32 	%r2212, %r1258;
	mov.u32 	%r2213, %r1258;
	mov.u32 	%r2214, %r1258;
	mov.u32 	%r2215, %r1258;
	mov.u32 	%r2216, %r1258;
	mov.u32 	%r2217, %r1258;
	mov.u32 	%r2218, %r1258;
	mov.u32 	%r2219, %r1258;
	@%p241 bra 	$L__BB0_341;

	mad.lo.s32 	%r604, %r540, %r777, %r539;
	shl.b32 	%r1404, %r604, 6;
	mul.wide.s32 	%rd311, %r1404, 4;
	add.s64 	%rd34, %rd33, %rd311;
	and.pred  	%p244, %p231, %p234;
	mov.u32 	%r2201, %r1258;
	mov.u32 	%r2203, %r1258;
	@%p244 bra 	$L__BB0_333;

	add.s64 	%rd313, %rd34, %rd302;
	ld.global.v2.u32 	{%r2203, %r2201}, [%rd313+256];

$L__BB0_333:
	mov.u32 	%r2206, %r1258;
	mov.u32 	%r2208, %r1258;
	@%p231 bra 	$L__BB0_335;

	shl.b32 	%r1408, %r777, 5;
	cvt.s64.s32 	%rd314, %r1408;
	cvt.s64.s32 	%rd315, %r45;
	add.s64 	%rd316, %rd314, %rd315;
	shl.b64 	%rd317, %rd316, 3;
	add.s64 	%rd318, %rd34, %rd317;
	ld.global.v2.u32 	{%r2208, %r2206}, [%rd318];

$L__BB0_335:
	mov.u32 	%r2213, %r1258;
	mov.u32 	%r2215, %r1258;
	@%p234 bra 	$L__BB0_337;

	shl.b32 	%r1412, %r777, 5;
	neg.s32 	%r1413, %r1412;
	cvt.s64.s32 	%rd319, %r1413;
	cvt.s64.s32 	%rd320, %r45;
	add.s64 	%rd321, %rd319, %rd320;
	shl.b64 	%rd322, %rd321, 3;
	add.s64 	%rd323, %rd34, %rd322;
	ld.global.v2.u32 	{%r2215, %r2213}, [%rd323];

$L__BB0_337:
	shl.b32 	%r1416, %r778, 6;
	shl.b32 	%r1417, %r604, 7;
	mad.lo.s32 	%r1418, %r1416, %r777, %r1417;
	mul.wide.s32 	%rd324, %r1418, 4;
	add.s64 	%rd35, %rd33, %rd324;
	mov.u32 	%r2198, %r1258;
	mov.u32 	%r2199, %r1258;
	mov.u32 	%r2204, %r1258;
	mov.u32 	%r2205, %r1258;
	mov.u32 	%r2207, %r1258;
	mov.u32 	%r2209, %r1258;
	mov.u32 	%r2216, %r1258;
	mov.u32 	%r2217, %r1258;
	@%p231 bra 	$L__BB0_339;

	shl.b32 	%r1419, %r777, 5;
	cvt.s64.s32 	%rd325, %r1419;
	cvt.s64.s32 	%rd326, %r45;
	add.s64 	%rd327, %rd325, %rd326;
	shl.b64 	%rd328, %rd327, 4;
	add.s64 	%rd329, %rd35, %rd328;
	ld.global.v4.u32 	{%r2209, %r2207, %r2199, %r2198}, [%rd329];
	shl.b32 	%r1424, %r777, 6;
	add.s32 	%r1425, %r1424, -32;
	cvt.s64.s32 	%rd330, %r1425;
	add.s64 	%rd331, %rd330, %rd326;
	shl.b64 	%rd332, %rd331, 4;
	add.s64 	%rd333, %rd35, %rd332;
	ld.global.v4.u32 	{%r2217, %r2216, %r2205, %r2204}, [%rd333];

$L__BB0_339:
	mov.u32 	%r2200, %r1258;
	mov.u32 	%r2202, %r1258;
	mov.u32 	%r2210, %r1258;
	mov.u32 	%r2211, %r1258;
	mov.u32 	%r2212, %r1258;
	mov.u32 	%r2214, %r1258;
	mov.u32 	%r2218, %r1258;
	mov.u32 	%r2219, %r1258;
	@%p234 bra 	$L__BB0_341;

	shl.b32 	%r1431, %r777, 5;
	xor.b32  	%r1432, %r1431, -32;
	cvt.s64.s32 	%rd334, %r1432;
	cvt.s64.s32 	%rd335, %r45;
	add.s64 	%rd336, %rd334, %rd335;
	shl.b64 	%rd337, %rd336, 4;
	add.s64 	%rd338, %rd35, %rd337;
	ld.global.v4.u32 	{%r2219, %r2218, %r2214, %r2212}, [%rd338];
	add.s64 	%rd340, %rd35, %rd300;
	ld.global.v4.u32 	{%r2211, %r2210, %r2202, %r2200}, [%rd340];

$L__BB0_341:
	bar.sync 	0;
	ld.param.u64 	%rd342, [%rd1+184];
	cvta.to.global.u64 	%rd36, %rd342;
	add.s32 	%r1441, %r786, -2;
	setp.lt.s32 	%p249, %r539, %r1441;
	add.s32 	%r1442, %r787, 3;
	setp.ge.s32 	%p250, %r539, %r1442;
	or.pred  	%p251, %p249, %p250;
	add.s32 	%r1443, %r788, -2;
	setp.lt.s32 	%p252, %r540, %r1443;
	or.pred  	%p253, %p251, %p252;
	add.s32 	%r1444, %r789, 2;
	setp.ge.s32 	%p254, %r540, %r1444;
	or.pred  	%p255, %p254, %p253;
	setp.lt.s32 	%p256, %r541, %r783;
	or.pred  	%p257, %p256, %p255;
	mad.lo.s32 	%r1445, %r785, %r784, %r783;
	setp.ge.s32 	%p258, %r541, %r1445;
	or.pred  	%p259, %p257, %p258;
	@%p259 bra 	$L__BB0_583;

	sub.s32 	%r663, %r541, %r783;
	rem.s32 	%r1446, %r663, %r784;
	setp.ne.s32 	%p260, %r1446, 0;
	@%p260 bra 	$L__BB0_583;

	div.s32 	%r1447, %r663, %r784;
	mov.u32 	%r1448, 8;
	sub.s32 	%r1449, %r1448, %r786;
	add.s32 	%r1450, %r1449, %r787;
	mul.lo.s32 	%r1451, %r1447, %r1450;
	mov.u32 	%r1452, 4;
	sub.s32 	%r1453, %r1452, %r786;
	add.s32 	%r664, %r1453, %r539;
	sub.s32 	%r1454, %r1452, %r788;
	add.s32 	%r665, %r1454, %r540;
	mul.lo.s32 	%r666, %r1451, 3;
	add.s32 	%r1455, %r664, %r666;
	add.s32 	%r1456, %r1455, -2;
	sub.s32 	%r1457, %r1448, %r788;
	add.s32 	%r1458, %r1457, %r789;
	mul.lo.s32 	%r667, %r1456, %r1458;
	add.s32 	%r1459, %r665, %r667;
	mul.lo.s32 	%r1460, %r1459, %r55;
	sub.s32 	%r668, %r1460, %r790;
	@%p28 bra 	$L__BB0_348;

	not.pred 	%p262, %p24;
	@%p262 bra 	$L__BB0_346;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2142;
  cvt.f32.f16 %f403, low;}

	// end inline asm
	add.s32 	%r1462, %r668, %r400;
	mul.wide.s32 	%rd343, %r1462, 4;
	add.s64 	%rd344, %rd36, %rd343;
	st.global.f32 	[%rd344], %f403;

$L__BB0_346:
	not.pred 	%p263, %p26;
	@%p263 bra 	$L__BB0_348;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2142;
  cvt.f32.f16 %f404, high;}

	// end inline asm
	add.s32 	%r1464, %r668, %r401;
	mul.wide.s32 	%rd345, %r1464, 4;
	add.s64 	%rd346, %rd36, %rd345;
	st.global.f32 	[%rd346], %f404;

$L__BB0_348:
	@%p28 bra 	$L__BB0_353;

	not.pred 	%p265, %p25;
	@%p265 bra 	$L__BB0_351;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2138;
  cvt.f32.f16 %f405, low;}

	// end inline asm
	add.s32 	%r1466, %r668, %r402;
	mul.wide.s32 	%rd347, %r1466, 4;
	add.s64 	%rd348, %rd36, %rd347;
	st.global.f32 	[%rd348], %f405;

$L__BB0_351:
	not.pred 	%p266, %p27;
	@%p266 bra 	$L__BB0_353;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2138;
  cvt.f32.f16 %f406, high;}

	// end inline asm
	add.s32 	%r1468, %r668, %r403;
	mul.wide.s32 	%rd349, %r1468, 4;
	add.s64 	%rd350, %rd36, %rd349;
	st.global.f32 	[%rd350], %f406;

$L__BB0_353:
	mov.u32 	%r1469, 8;
	sub.s32 	%r1470, %r1469, %r786;
	add.s32 	%r1471, %r1470, %r787;
	add.s32 	%r669, %r666, %r1471;
	add.s32 	%r1472, %r664, %r669;
	add.s32 	%r1473, %r1472, -2;
	sub.s32 	%r1474, %r1469, %r788;
	add.s32 	%r1475, %r1474, %r789;
	mad.lo.s32 	%r1476, %r1473, %r1475, %r665;
	mul.lo.s32 	%r1477, %r1476, %r55;
	sub.s32 	%r670, %r1477, %r790;
	@%p28 bra 	$L__BB0_358;

	not.pred 	%p268, %p24;
	@%p268 bra 	$L__BB0_356;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2141;
  cvt.f32.f16 %f407, low;}

	// end inline asm
	add.s32 	%r1479, %r670, %r400;
	mul.wide.s32 	%rd351, %r1479, 4;
	add.s64 	%rd352, %rd36, %rd351;
	st.global.f32 	[%rd352], %f407;

$L__BB0_356:
	not.pred 	%p269, %p26;
	@%p269 bra 	$L__BB0_358;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2141;
  cvt.f32.f16 %f408, high;}

	// end inline asm
	add.s32 	%r1481, %r670, %r401;
	mul.wide.s32 	%rd353, %r1481, 4;
	add.s64 	%rd354, %rd36, %rd353;
	st.global.f32 	[%rd354], %f408;

$L__BB0_358:
	@%p28 bra 	$L__BB0_363;

	not.pred 	%p271, %p25;
	@%p271 bra 	$L__BB0_361;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2137;
  cvt.f32.f16 %f409, low;}

	// end inline asm
	add.s32 	%r1483, %r670, %r402;
	mul.wide.s32 	%rd355, %r1483, 4;
	add.s64 	%rd356, %rd36, %rd355;
	st.global.f32 	[%rd356], %f409;

$L__BB0_361:
	not.pred 	%p272, %p27;
	@%p272 bra 	$L__BB0_363;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2137;
  cvt.f32.f16 %f410, high;}

	// end inline asm
	add.s32 	%r1485, %r670, %r403;
	mul.wide.s32 	%rd357, %r1485, 4;
	add.s64 	%rd358, %rd36, %rd357;
	st.global.f32 	[%rd358], %f410;

$L__BB0_363:
	add.s32 	%r671, %r665, 1;
	add.s32 	%r1486, %r671, %r667;
	mul.lo.s32 	%r1487, %r1486, %r55;
	sub.s32 	%r672, %r1487, %r790;
	@%p28 bra 	$L__BB0_368;

	not.pred 	%p274, %p24;
	@%p274 bra 	$L__BB0_366;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2134;
  cvt.f32.f16 %f411, low;}

	// end inline asm
	add.s32 	%r1489, %r672, %r400;
	mul.wide.s32 	%rd359, %r1489, 4;
	add.s64 	%rd360, %rd36, %rd359;
	st.global.f32 	[%rd360], %f411;

$L__BB0_366:
	not.pred 	%p275, %p26;
	@%p275 bra 	$L__BB0_368;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2134;
  cvt.f32.f16 %f412, high;}

	// end inline asm
	add.s32 	%r1491, %r672, %r401;
	mul.wide.s32 	%rd361, %r1491, 4;
	add.s64 	%rd362, %rd36, %rd361;
	st.global.f32 	[%rd362], %f412;

$L__BB0_368:
	@%p28 bra 	$L__BB0_373;

	not.pred 	%p277, %p25;
	@%p277 bra 	$L__BB0_371;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2132;
  cvt.f32.f16 %f413, low;}

	// end inline asm
	add.s32 	%r1493, %r672, %r402;
	mul.wide.s32 	%rd363, %r1493, 4;
	add.s64 	%rd364, %rd36, %rd363;
	st.global.f32 	[%rd364], %f413;

$L__BB0_371:
	not.pred 	%p278, %p27;
	@%p278 bra 	$L__BB0_373;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2132;
  cvt.f32.f16 %f414, high;}

	// end inline asm
	add.s32 	%r1495, %r672, %r403;
	mul.wide.s32 	%rd365, %r1495, 4;
	add.s64 	%rd366, %rd36, %rd365;
	st.global.f32 	[%rd366], %f414;

$L__BB0_373:
	add.s32 	%r673, %r664, -1;
	add.s32 	%r1496, %r673, %r666;
	mov.u32 	%r1497, 8;
	sub.s32 	%r1498, %r1497, %r788;
	add.s32 	%r1499, %r1498, %r789;
	mul.lo.s32 	%r674, %r1496, %r1499;
	add.s32 	%r1500, %r665, %r674;
	add.s32 	%r1501, %r1500, -1;
	mul.lo.s32 	%r1502, %r1501, %r55;
	sub.s32 	%r675, %r1502, %r790;
	@%p28 bra 	$L__BB0_378;

	not.pred 	%p280, %p24;
	@%p280 bra 	$L__BB0_376;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2100;
  cvt.f32.f16 %f415, low;}

	// end inline asm
	add.s32 	%r1504, %r675, %r400;
	mul.wide.s32 	%rd367, %r1504, 4;
	add.s64 	%rd368, %rd36, %rd367;
	st.global.f32 	[%rd368], %f415;

$L__BB0_376:
	not.pred 	%p281, %p26;
	@%p281 bra 	$L__BB0_378;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2100;
  cvt.f32.f16 %f416, high;}

	// end inline asm
	add.s32 	%r1506, %r675, %r401;
	mul.wide.s32 	%rd369, %r1506, 4;
	add.s64 	%rd370, %rd36, %rd369;
	st.global.f32 	[%rd370], %f416;

$L__BB0_378:
	@%p28 bra 	$L__BB0_383;

	not.pred 	%p283, %p25;
	@%p283 bra 	$L__BB0_381;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2098;
  cvt.f32.f16 %f417, low;}

	// end inline asm
	add.s32 	%r1508, %r675, %r402;
	mul.wide.s32 	%rd371, %r1508, 4;
	add.s64 	%rd372, %rd36, %rd371;
	st.global.f32 	[%rd372], %f417;

$L__BB0_381:
	not.pred 	%p284, %p27;
	@%p284 bra 	$L__BB0_383;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2098;
  cvt.f32.f16 %f418, high;}

	// end inline asm
	add.s32 	%r1510, %r675, %r403;
	mul.wide.s32 	%rd373, %r1510, 4;
	add.s64 	%rd374, %rd36, %rd373;
	st.global.f32 	[%rd374], %f418;

$L__BB0_383:
	add.s32 	%r1943, %r664, -1;
	mov.u32 	%r1511, 8;
	sub.s32 	%r1512, %r1511, %r788;
	add.s32 	%r1513, %r1512, %r789;
	add.s32 	%r1514, %r1943, %r669;
	mul.lo.s32 	%r676, %r1514, %r1513;
	add.s32 	%r1515, %r665, %r676;
	add.s32 	%r1516, %r1515, -1;
	mul.lo.s32 	%r1517, %r1516, %r55;
	sub.s32 	%r677, %r1517, %r790;
	@%p28 bra 	$L__BB0_388;

	not.pred 	%p286, %p24;
	@%p286 bra 	$L__BB0_386;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2130;
  cvt.f32.f16 %f419, low;}

	// end inline asm
	add.s32 	%r1519, %r677, %r400;
	mul.wide.s32 	%rd375, %r1519, 4;
	add.s64 	%rd376, %rd36, %rd375;
	st.global.f32 	[%rd376], %f419;

$L__BB0_386:
	not.pred 	%p287, %p26;
	@%p287 bra 	$L__BB0_388;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2130;
  cvt.f32.f16 %f420, high;}

	// end inline asm
	add.s32 	%r1521, %r677, %r401;
	mul.wide.s32 	%rd377, %r1521, 4;
	add.s64 	%rd378, %rd36, %rd377;
	st.global.f32 	[%rd378], %f420;

$L__BB0_388:
	@%p28 bra 	$L__BB0_393;

	not.pred 	%p289, %p25;
	@%p289 bra 	$L__BB0_391;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2128;
  cvt.f32.f16 %f421, low;}

	// end inline asm
	add.s32 	%r1523, %r677, %r402;
	mul.wide.s32 	%rd379, %r1523, 4;
	add.s64 	%rd380, %rd36, %rd379;
	st.global.f32 	[%rd380], %f421;

$L__BB0_391:
	not.pred 	%p290, %p27;
	@%p290 bra 	$L__BB0_393;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2128;
  cvt.f32.f16 %f422, high;}

	// end inline asm
	add.s32 	%r1525, %r677, %r403;
	mul.wide.s32 	%rd381, %r1525, 4;
	add.s64 	%rd382, %rd36, %rd381;
	st.global.f32 	[%rd382], %f422;

$L__BB0_393:
	mul.lo.s32 	%r1527, %r1500, %r55;
	sub.s32 	%r678, %r1527, %r790;
	@%p28 bra 	$L__BB0_398;

	not.pred 	%p292, %p24;
	@%p292 bra 	$L__BB0_396;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r519;
  cvt.f32.f16 %f423, low;}

	// end inline asm
	add.s32 	%r1529, %r678, %r400;
	mul.wide.s32 	%rd383, %r1529, 4;
	add.s64 	%rd384, %rd36, %rd383;
	st.global.f32 	[%rd384], %f423;

$L__BB0_396:
	not.pred 	%p293, %p26;
	@%p293 bra 	$L__BB0_398;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r519;
  cvt.f32.f16 %f424, high;}

	// end inline asm
	add.s32 	%r1531, %r678, %r401;
	mul.wide.s32 	%rd385, %r1531, 4;
	add.s64 	%rd386, %rd36, %rd385;
	st.global.f32 	[%rd386], %f424;

$L__BB0_398:
	@%p28 bra 	$L__BB0_403;

	not.pred 	%p295, %p25;
	@%p295 bra 	$L__BB0_401;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r512;
  cvt.f32.f16 %f425, low;}

	// end inline asm
	add.s32 	%r1533, %r678, %r402;
	mul.wide.s32 	%rd387, %r1533, 4;
	add.s64 	%rd388, %rd36, %rd387;
	st.global.f32 	[%rd388], %f425;

$L__BB0_401:
	not.pred 	%p296, %p27;
	@%p296 bra 	$L__BB0_403;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r512;
  cvt.f32.f16 %f426, high;}

	// end inline asm
	add.s32 	%r1535, %r678, %r403;
	mul.wide.s32 	%rd389, %r1535, 4;
	add.s64 	%rd390, %rd36, %rd389;
	st.global.f32 	[%rd390], %f426;

$L__BB0_403:
	mul.lo.s32 	%r1537, %r1515, %r55;
	sub.s32 	%r679, %r1537, %r790;
	@%p28 bra 	$L__BB0_408;

	not.pred 	%p298, %p24;
	@%p298 bra 	$L__BB0_406;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r518;
  cvt.f32.f16 %f427, low;}

	// end inline asm
	add.s32 	%r1539, %r679, %r400;
	mul.wide.s32 	%rd391, %r1539, 4;
	add.s64 	%rd392, %rd36, %rd391;
	st.global.f32 	[%rd392], %f427;

$L__BB0_406:
	not.pred 	%p299, %p26;
	@%p299 bra 	$L__BB0_408;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r518;
  cvt.f32.f16 %f428, high;}

	// end inline asm
	add.s32 	%r1541, %r679, %r401;
	mul.wide.s32 	%rd393, %r1541, 4;
	add.s64 	%rd394, %rd36, %rd393;
	st.global.f32 	[%rd394], %f428;

$L__BB0_408:
	@%p28 bra 	$L__BB0_413;

	not.pred 	%p301, %p25;
	@%p301 bra 	$L__BB0_411;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r511;
  cvt.f32.f16 %f429, low;}

	// end inline asm
	add.s32 	%r1543, %r679, %r402;
	mul.wide.s32 	%rd395, %r1543, 4;
	add.s64 	%rd396, %rd36, %rd395;
	st.global.f32 	[%rd396], %f429;

$L__BB0_411:
	not.pred 	%p302, %p27;
	@%p302 bra 	$L__BB0_413;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r511;
  cvt.f32.f16 %f430, high;}

	// end inline asm
	add.s32 	%r1545, %r679, %r403;
	mul.wide.s32 	%rd397, %r1545, 4;
	add.s64 	%rd398, %rd36, %rd397;
	st.global.f32 	[%rd398], %f430;

$L__BB0_413:
	add.s32 	%r1944, %r664, -1;
	mov.u32 	%r1546, 8;
	sub.s32 	%r1547, %r1546, %r786;
	add.s32 	%r1548, %r1547, %r787;
	add.s32 	%r680, %r669, %r1548;
	add.s32 	%r1549, %r1944, %r680;
	sub.s32 	%r1550, %r1546, %r788;
	add.s32 	%r1551, %r1550, %r789;
	mul.lo.s32 	%r681, %r1549, %r1551;
	add.s32 	%r1552, %r665, %r681;
	mul.lo.s32 	%r1553, %r1552, %r55;
	sub.s32 	%r682, %r1553, %r790;
	@%p28 bra 	$L__BB0_418;

	not.pred 	%p304, %p24;
	@%p304 bra 	$L__BB0_416;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2124;
  cvt.f32.f16 %f431, low;}

	// end inline asm
	add.s32 	%r1555, %r682, %r400;
	mul.wide.s32 	%rd399, %r1555, 4;
	add.s64 	%rd400, %rd36, %rd399;
	st.global.f32 	[%rd400], %f431;

$L__BB0_416:
	not.pred 	%p305, %p26;
	@%p305 bra 	$L__BB0_418;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2124;
  cvt.f32.f16 %f432, high;}

	// end inline asm
	add.s32 	%r1557, %r682, %r401;
	mul.wide.s32 	%rd401, %r1557, 4;
	add.s64 	%rd402, %rd36, %rd401;
	st.global.f32 	[%rd402], %f432;

$L__BB0_418:
	@%p28 bra 	$L__BB0_423;

	not.pred 	%p307, %p25;
	@%p307 bra 	$L__BB0_421;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2117;
  cvt.f32.f16 %f433, low;}

	// end inline asm
	add.s32 	%r1559, %r682, %r402;
	mul.wide.s32 	%rd403, %r1559, 4;
	add.s64 	%rd404, %rd36, %rd403;
	st.global.f32 	[%rd404], %f433;

$L__BB0_421:
	not.pred 	%p308, %p27;
	@%p308 bra 	$L__BB0_423;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2117;
  cvt.f32.f16 %f434, high;}

	// end inline asm
	add.s32 	%r1561, %r682, %r403;
	mul.wide.s32 	%rd405, %r1561, 4;
	add.s64 	%rd406, %rd36, %rd405;
	st.global.f32 	[%rd406], %f434;

$L__BB0_423:
	add.s32 	%r1917, %r665, 1;
	add.s32 	%r1562, %r1917, %r674;
	mul.lo.s32 	%r1563, %r1562, %r55;
	sub.s32 	%r683, %r1563, %r790;
	@%p28 bra 	$L__BB0_428;

	not.pred 	%p310, %p24;
	@%p310 bra 	$L__BB0_426;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r505;
  cvt.f32.f16 %f435, low;}

	// end inline asm
	add.s32 	%r1565, %r683, %r400;
	mul.wide.s32 	%rd407, %r1565, 4;
	add.s64 	%rd408, %rd36, %rd407;
	st.global.f32 	[%rd408], %f435;

$L__BB0_426:
	not.pred 	%p311, %p26;
	@%p311 bra 	$L__BB0_428;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r505;
  cvt.f32.f16 %f436, high;}

	// end inline asm
	add.s32 	%r1567, %r683, %r401;
	mul.wide.s32 	%rd409, %r1567, 4;
	add.s64 	%rd410, %rd36, %rd409;
	st.global.f32 	[%rd410], %f436;

$L__BB0_428:
	@%p28 bra 	$L__BB0_433;

	not.pred 	%p313, %p25;
	@%p313 bra 	$L__BB0_431;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r499;
  cvt.f32.f16 %f437, low;}

	// end inline asm
	add.s32 	%r1569, %r683, %r402;
	mul.wide.s32 	%rd411, %r1569, 4;
	add.s64 	%rd412, %rd36, %rd411;
	st.global.f32 	[%rd412], %f437;

$L__BB0_431:
	not.pred 	%p314, %p27;
	@%p314 bra 	$L__BB0_433;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r499;
  cvt.f32.f16 %f438, high;}

	// end inline asm
	add.s32 	%r1571, %r683, %r403;
	mul.wide.s32 	%rd413, %r1571, 4;
	add.s64 	%rd414, %rd36, %rd413;
	st.global.f32 	[%rd414], %f438;

$L__BB0_433:
	add.s32 	%r1918, %r665, 1;
	add.s32 	%r1572, %r1918, %r676;
	mul.lo.s32 	%r1573, %r1572, %r55;
	sub.s32 	%r684, %r1573, %r790;
	@%p28 bra 	$L__BB0_438;

	not.pred 	%p316, %p24;
	@%p316 bra 	$L__BB0_436;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2111;
  cvt.f32.f16 %f439, low;}

	// end inline asm
	add.s32 	%r1575, %r684, %r400;
	mul.wide.s32 	%rd415, %r1575, 4;
	add.s64 	%rd416, %rd36, %rd415;
	st.global.f32 	[%rd416], %f439;

$L__BB0_436:
	not.pred 	%p317, %p26;
	@%p317 bra 	$L__BB0_438;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2111;
  cvt.f32.f16 %f440, high;}

	// end inline asm
	add.s32 	%r1577, %r684, %r401;
	mul.wide.s32 	%rd417, %r1577, 4;
	add.s64 	%rd418, %rd36, %rd417;
	st.global.f32 	[%rd418], %f440;

$L__BB0_438:
	@%p28 bra 	$L__BB0_443;

	not.pred 	%p319, %p25;
	@%p319 bra 	$L__BB0_441;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2105;
  cvt.f32.f16 %f441, low;}

	// end inline asm
	add.s32 	%r1579, %r684, %r402;
	mul.wide.s32 	%rd419, %r1579, 4;
	add.s64 	%rd420, %rd36, %rd419;
	st.global.f32 	[%rd420], %f441;

$L__BB0_441:
	not.pred 	%p320, %p27;
	@%p320 bra 	$L__BB0_443;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2105;
  cvt.f32.f16 %f442, high;}

	// end inline asm
	add.s32 	%r1581, %r684, %r403;
	mul.wide.s32 	%rd421, %r1581, 4;
	add.s64 	%rd422, %rd36, %rd421;
	st.global.f32 	[%rd422], %f442;

$L__BB0_443:
	add.s32 	%r1919, %r665, 1;
	add.s32 	%r1582, %r1919, %r681;
	mul.lo.s32 	%r1583, %r1582, %r55;
	sub.s32 	%r685, %r1583, %r790;
	@%p28 bra 	$L__BB0_448;

	not.pred 	%p322, %p24;
	@%p322 bra 	$L__BB0_446;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2110;
  cvt.f32.f16 %f443, low;}

	// end inline asm
	add.s32 	%r1585, %r685, %r400;
	mul.wide.s32 	%rd423, %r1585, 4;
	add.s64 	%rd424, %rd36, %rd423;
	st.global.f32 	[%rd424], %f443;

$L__BB0_446:
	not.pred 	%p323, %p26;
	@%p323 bra 	$L__BB0_448;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2110;
  cvt.f32.f16 %f444, high;}

	// end inline asm
	add.s32 	%r1587, %r685, %r401;
	mul.wide.s32 	%rd425, %r1587, 4;
	add.s64 	%rd426, %rd36, %rd425;
	st.global.f32 	[%rd426], %f444;

$L__BB0_448:
	@%p28 bra 	$L__BB0_453;

	not.pred 	%p325, %p25;
	@%p325 bra 	$L__BB0_451;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2104;
  cvt.f32.f16 %f445, low;}

	// end inline asm
	add.s32 	%r1589, %r685, %r402;
	mul.wide.s32 	%rd427, %r1589, 4;
	add.s64 	%rd428, %rd36, %rd427;
	st.global.f32 	[%rd428], %f445;

$L__BB0_451:
	not.pred 	%p326, %p27;
	@%p326 bra 	$L__BB0_453;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2104;
  cvt.f32.f16 %f446, high;}

	// end inline asm
	add.s32 	%r1591, %r685, %r403;
	mul.wide.s32 	%rd429, %r1591, 4;
	add.s64 	%rd430, %rd36, %rd429;
	st.global.f32 	[%rd430], %f446;

$L__BB0_453:
	add.s32 	%r686, %r665, 2;
	add.s32 	%r1592, %r686, %r674;
	mul.lo.s32 	%r1593, %r1592, %r55;
	sub.s32 	%r687, %r1593, %r790;
	@%p28 bra 	$L__BB0_458;

	not.pred 	%p328, %p24;
	@%p328 bra 	$L__BB0_456;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2078;
  cvt.f32.f16 %f447, low;}

	// end inline asm
	add.s32 	%r1595, %r687, %r400;
	mul.wide.s32 	%rd431, %r1595, 4;
	add.s64 	%rd432, %rd36, %rd431;
	st.global.f32 	[%rd432], %f447;

$L__BB0_456:
	not.pred 	%p329, %p26;
	@%p329 bra 	$L__BB0_458;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2078;
  cvt.f32.f16 %f448, high;}

	// end inline asm
	add.s32 	%r1597, %r687, %r401;
	mul.wide.s32 	%rd433, %r1597, 4;
	add.s64 	%rd434, %rd36, %rd433;
	st.global.f32 	[%rd434], %f448;

$L__BB0_458:
	@%p28 bra 	$L__BB0_463;

	not.pred 	%p331, %p25;
	@%p331 bra 	$L__BB0_461;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2074;
  cvt.f32.f16 %f449, low;}

	// end inline asm
	add.s32 	%r1599, %r687, %r402;
	mul.wide.s32 	%rd435, %r1599, 4;
	add.s64 	%rd436, %rd36, %rd435;
	st.global.f32 	[%rd436], %f449;

$L__BB0_461:
	not.pred 	%p332, %p27;
	@%p332 bra 	$L__BB0_463;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2074;
  cvt.f32.f16 %f450, high;}

	// end inline asm
	add.s32 	%r1601, %r687, %r403;
	mul.wide.s32 	%rd437, %r1601, 4;
	add.s64 	%rd438, %rd36, %rd437;
	st.global.f32 	[%rd438], %f450;

$L__BB0_463:
	mov.u32 	%r1602, 8;
	sub.s32 	%r1603, %r1602, %r788;
	add.s32 	%r1604, %r1603, %r789;
	mul.lo.s32 	%r688, %r1472, %r1604;
	add.s32 	%r1606, %r665, %r688;
	add.s32 	%r1607, %r1606, -1;
	mul.lo.s32 	%r1608, %r1607, %r55;
	sub.s32 	%r689, %r1608, %r790;
	@%p28 bra 	$L__BB0_468;

	not.pred 	%p334, %p24;
	@%p334 bra 	$L__BB0_466;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r459;
  cvt.f32.f16 %f451, low;}

	// end inline asm
	add.s32 	%r1610, %r689, %r400;
	mul.wide.s32 	%rd439, %r1610, 4;
	add.s64 	%rd440, %rd36, %rd439;
	st.global.f32 	[%rd440], %f451;

$L__BB0_466:
	not.pred 	%p335, %p26;
	@%p335 bra 	$L__BB0_468;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r459;
  cvt.f32.f16 %f452, high;}

	// end inline asm
	add.s32 	%r1612, %r689, %r401;
	mul.wide.s32 	%rd441, %r1612, 4;
	add.s64 	%rd442, %rd36, %rd441;
	st.global.f32 	[%rd442], %f452;

$L__BB0_468:
	@%p28 bra 	$L__BB0_473;

	not.pred 	%p337, %p25;
	@%p337 bra 	$L__BB0_471;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r452;
  cvt.f32.f16 %f453, low;}

	// end inline asm
	add.s32 	%r1614, %r689, %r402;
	mul.wide.s32 	%rd443, %r1614, 4;
	add.s64 	%rd444, %rd36, %rd443;
	st.global.f32 	[%rd444], %f453;

$L__BB0_471:
	not.pred 	%p338, %p27;
	@%p338 bra 	$L__BB0_473;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r452;
  cvt.f32.f16 %f454, high;}

	// end inline asm
	add.s32 	%r1616, %r689, %r403;
	mul.wide.s32 	%rd445, %r1616, 4;
	add.s64 	%rd446, %rd36, %rd445;
	st.global.f32 	[%rd446], %f454;

$L__BB0_473:
	mov.u32 	%r1923, 8;
	sub.s32 	%r1922, %r1923, %r786;
	add.s32 	%r1921, %r1922, %r787;
	add.s32 	%r1920, %r669, %r1921;
	mov.u32 	%r1617, 8;
	sub.s32 	%r1618, %r1617, %r788;
	add.s32 	%r1619, %r1618, %r789;
	add.s32 	%r1620, %r664, %r1920;
	mul.lo.s32 	%r690, %r1620, %r1619;
	add.s32 	%r1621, %r665, %r690;
	add.s32 	%r1622, %r1621, -1;
	mul.lo.s32 	%r1623, %r1622, %r55;
	sub.s32 	%r691, %r1623, %r790;
	@%p28 bra 	$L__BB0_478;

	not.pred 	%p340, %p24;
	@%p340 bra 	$L__BB0_476;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2069;
  cvt.f32.f16 %f455, low;}

	// end inline asm
	add.s32 	%r1625, %r691, %r400;
	mul.wide.s32 	%rd447, %r1625, 4;
	add.s64 	%rd448, %rd36, %rd447;
	st.global.f32 	[%rd448], %f455;

$L__BB0_476:
	not.pred 	%p341, %p26;
	@%p341 bra 	$L__BB0_478;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2069;
  cvt.f32.f16 %f456, high;}

	// end inline asm
	add.s32 	%r1627, %r691, %r401;
	mul.wide.s32 	%rd449, %r1627, 4;
	add.s64 	%rd450, %rd36, %rd449;
	st.global.f32 	[%rd450], %f456;

$L__BB0_478:
	@%p28 bra 	$L__BB0_483;

	not.pred 	%p343, %p25;
	@%p343 bra 	$L__BB0_481;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2062;
  cvt.f32.f16 %f457, low;}

	// end inline asm
	add.s32 	%r1629, %r691, %r402;
	mul.wide.s32 	%rd451, %r1629, 4;
	add.s64 	%rd452, %rd36, %rd451;
	st.global.f32 	[%rd452], %f457;

$L__BB0_481:
	not.pred 	%p344, %p27;
	@%p344 bra 	$L__BB0_483;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2062;
  cvt.f32.f16 %f458, high;}

	// end inline asm
	add.s32 	%r1631, %r691, %r403;
	mul.wide.s32 	%rd453, %r1631, 4;
	add.s64 	%rd454, %rd36, %rd453;
	st.global.f32 	[%rd454], %f458;

$L__BB0_483:
	mov.u32 	%r1632, 8;
	sub.s32 	%r1633, %r1632, %r788;
	add.s32 	%r1634, %r1633, %r789;
	mul.lo.s32 	%r692, %r1455, %r1634;
	add.s32 	%r1636, %r665, %r692;
	mul.lo.s32 	%r1637, %r1636, %r55;
	sub.s32 	%r693, %r1637, %r790;
	@%p28 bra 	$L__BB0_488;

	not.pred 	%p346, %p24;
	@%p346 bra 	$L__BB0_486;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2126;
  cvt.f32.f16 %f459, low;}

	// end inline asm
	add.s32 	%r1639, %r693, %r400;
	mul.wide.s32 	%rd455, %r1639, 4;
	add.s64 	%rd456, %rd36, %rd455;
	st.global.f32 	[%rd456], %f459;

$L__BB0_486:
	not.pred 	%p347, %p26;
	@%p347 bra 	$L__BB0_488;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2126;
  cvt.f32.f16 %f460, high;}

	// end inline asm
	add.s32 	%r1641, %r693, %r401;
	mul.wide.s32 	%rd457, %r1641, 4;
	add.s64 	%rd458, %rd36, %rd457;
	st.global.f32 	[%rd458], %f460;

$L__BB0_488:
	@%p28 bra 	$L__BB0_493;

	not.pred 	%p349, %p25;
	@%p349 bra 	$L__BB0_491;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2119;
  cvt.f32.f16 %f461, low;}

	// end inline asm
	add.s32 	%r1643, %r693, %r402;
	mul.wide.s32 	%rd459, %r1643, 4;
	add.s64 	%rd460, %rd36, %rd459;
	st.global.f32 	[%rd460], %f461;

$L__BB0_491:
	not.pred 	%p350, %p27;
	@%p350 bra 	$L__BB0_493;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2119;
  cvt.f32.f16 %f462, high;}

	// end inline asm
	add.s32 	%r1645, %r693, %r403;
	mul.wide.s32 	%rd461, %r1645, 4;
	add.s64 	%rd462, %rd36, %rd461;
	st.global.f32 	[%rd462], %f462;

$L__BB0_493:
	mul.lo.s32 	%r1647, %r1606, %r55;
	sub.s32 	%r694, %r1647, %r790;
	@%p28 bra 	$L__BB0_498;

	not.pred 	%p352, %p24;
	@%p352 bra 	$L__BB0_496;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2125;
  cvt.f32.f16 %f463, low;}

	// end inline asm
	add.s32 	%r1649, %r694, %r400;
	mul.wide.s32 	%rd463, %r1649, 4;
	add.s64 	%rd464, %rd36, %rd463;
	st.global.f32 	[%rd464], %f463;

$L__BB0_496:
	not.pred 	%p353, %p26;
	@%p353 bra 	$L__BB0_498;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2125;
  cvt.f32.f16 %f464, high;}

	// end inline asm
	add.s32 	%r1651, %r694, %r401;
	mul.wide.s32 	%rd465, %r1651, 4;
	add.s64 	%rd466, %rd36, %rd465;
	st.global.f32 	[%rd466], %f464;

$L__BB0_498:
	@%p28 bra 	$L__BB0_503;

	not.pred 	%p355, %p25;
	@%p355 bra 	$L__BB0_501;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2118;
  cvt.f32.f16 %f465, low;}

	// end inline asm
	add.s32 	%r1653, %r694, %r402;
	mul.wide.s32 	%rd467, %r1653, 4;
	add.s64 	%rd468, %rd36, %rd467;
	st.global.f32 	[%rd468], %f465;

$L__BB0_501:
	not.pred 	%p356, %p27;
	@%p356 bra 	$L__BB0_503;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2118;
  cvt.f32.f16 %f466, high;}

	// end inline asm
	add.s32 	%r1655, %r694, %r403;
	mul.wide.s32 	%rd469, %r1655, 4;
	add.s64 	%rd470, %rd36, %rd469;
	st.global.f32 	[%rd470], %f466;

$L__BB0_503:
	mul.lo.s32 	%r1657, %r1621, %r55;
	sub.s32 	%r695, %r1657, %r790;
	@%p28 bra 	$L__BB0_508;

	not.pred 	%p358, %p24;
	@%p358 bra 	$L__BB0_506;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r488;
  cvt.f32.f16 %f467, low;}

	// end inline asm
	add.s32 	%r1659, %r695, %r400;
	mul.wide.s32 	%rd471, %r1659, 4;
	add.s64 	%rd472, %rd36, %rd471;
	st.global.f32 	[%rd472], %f467;

$L__BB0_506:
	not.pred 	%p359, %p26;
	@%p359 bra 	$L__BB0_508;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r488;
  cvt.f32.f16 %f468, high;}

	// end inline asm
	add.s32 	%r1661, %r695, %r401;
	mul.wide.s32 	%rd473, %r1661, 4;
	add.s64 	%rd474, %rd36, %rd473;
	st.global.f32 	[%rd474], %f468;

$L__BB0_508:
	@%p28 bra 	$L__BB0_513;

	not.pred 	%p361, %p25;
	@%p361 bra 	$L__BB0_511;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r481;
  cvt.f32.f16 %f469, low;}

	// end inline asm
	add.s32 	%r1663, %r695, %r402;
	mul.wide.s32 	%rd475, %r1663, 4;
	add.s64 	%rd476, %rd36, %rd475;
	st.global.f32 	[%rd476], %f469;

$L__BB0_511:
	not.pred 	%p362, %p27;
	@%p362 bra 	$L__BB0_513;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r481;
  cvt.f32.f16 %f470, high;}

	// end inline asm
	add.s32 	%r1665, %r695, %r403;
	mul.wide.s32 	%rd477, %r1665, 4;
	add.s64 	%rd478, %rd36, %rd477;
	st.global.f32 	[%rd478], %f470;

$L__BB0_513:
	add.s32 	%r1924, %r665, 1;
	add.s32 	%r1666, %r1924, %r692;
	mul.lo.s32 	%r1667, %r1666, %r55;
	sub.s32 	%r696, %r1667, %r790;
	@%p28 bra 	$L__BB0_518;

	not.pred 	%p364, %p24;
	@%p364 bra 	$L__BB0_516;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2112;
  cvt.f32.f16 %f471, low;}

	// end inline asm
	add.s32 	%r1669, %r696, %r400;
	mul.wide.s32 	%rd479, %r1669, 4;
	add.s64 	%rd480, %rd36, %rd479;
	st.global.f32 	[%rd480], %f471;

$L__BB0_516:
	not.pred 	%p365, %p26;
	@%p365 bra 	$L__BB0_518;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2112;
  cvt.f32.f16 %f472, high;}

	// end inline asm
	add.s32 	%r1671, %r696, %r401;
	mul.wide.s32 	%rd481, %r1671, 4;
	add.s64 	%rd482, %rd36, %rd481;
	st.global.f32 	[%rd482], %f472;

$L__BB0_518:
	@%p28 bra 	$L__BB0_523;

	not.pred 	%p367, %p25;
	@%p367 bra 	$L__BB0_521;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2106;
  cvt.f32.f16 %f473, low;}

	// end inline asm
	add.s32 	%r1673, %r696, %r402;
	mul.wide.s32 	%rd483, %r1673, 4;
	add.s64 	%rd484, %rd36, %rd483;
	st.global.f32 	[%rd484], %f473;

$L__BB0_521:
	not.pred 	%p368, %p27;
	@%p368 bra 	$L__BB0_523;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2106;
  cvt.f32.f16 %f474, high;}

	// end inline asm
	add.s32 	%r1675, %r696, %r403;
	mul.wide.s32 	%rd485, %r1675, 4;
	add.s64 	%rd486, %rd36, %rd485;
	st.global.f32 	[%rd486], %f474;

$L__BB0_523:
	add.s32 	%r1925, %r665, 1;
	add.s32 	%r1676, %r1925, %r688;
	mul.lo.s32 	%r1677, %r1676, %r55;
	sub.s32 	%r697, %r1677, %r790;
	@%p28 bra 	$L__BB0_528;

	not.pred 	%p370, %p24;
	@%p370 bra 	$L__BB0_526;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r436;
  cvt.f32.f16 %f475, low;}

	// end inline asm
	add.s32 	%r1679, %r697, %r400;
	mul.wide.s32 	%rd487, %r1679, 4;
	add.s64 	%rd488, %rd36, %rd487;
	st.global.f32 	[%rd488], %f475;

$L__BB0_526:
	not.pred 	%p371, %p26;
	@%p371 bra 	$L__BB0_528;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r436;
  cvt.f32.f16 %f476, high;}

	// end inline asm
	add.s32 	%r1681, %r697, %r401;
	mul.wide.s32 	%rd489, %r1681, 4;
	add.s64 	%rd490, %rd36, %rd489;
	st.global.f32 	[%rd490], %f476;

$L__BB0_528:
	@%p28 bra 	$L__BB0_533;

	not.pred 	%p373, %p25;
	@%p373 bra 	$L__BB0_531;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r428;
  cvt.f32.f16 %f477, low;}

	// end inline asm
	add.s32 	%r1683, %r697, %r402;
	mul.wide.s32 	%rd491, %r1683, 4;
	add.s64 	%rd492, %rd36, %rd491;
	st.global.f32 	[%rd492], %f477;

$L__BB0_531:
	not.pred 	%p374, %p27;
	@%p374 bra 	$L__BB0_533;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r428;
  cvt.f32.f16 %f478, high;}

	// end inline asm
	add.s32 	%r1685, %r697, %r403;
	mul.wide.s32 	%rd493, %r1685, 4;
	add.s64 	%rd494, %rd36, %rd493;
	st.global.f32 	[%rd494], %f478;

$L__BB0_533:
	add.s32 	%r1926, %r665, 1;
	add.s32 	%r1686, %r1926, %r690;
	mul.lo.s32 	%r1687, %r1686, %r55;
	sub.s32 	%r698, %r1687, %r790;
	@%p28 bra 	$L__BB0_538;

	not.pred 	%p376, %p24;
	@%p376 bra 	$L__BB0_536;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r475;
  cvt.f32.f16 %f479, low;}

	// end inline asm
	add.s32 	%r1689, %r698, %r400;
	mul.wide.s32 	%rd495, %r1689, 4;
	add.s64 	%rd496, %rd36, %rd495;
	st.global.f32 	[%rd496], %f479;

$L__BB0_536:
	not.pred 	%p377, %p26;
	@%p377 bra 	$L__BB0_538;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r475;
  cvt.f32.f16 %f480, high;}

	// end inline asm
	add.s32 	%r1691, %r698, %r401;
	mul.wide.s32 	%rd497, %r1691, 4;
	add.s64 	%rd498, %rd36, %rd497;
	st.global.f32 	[%rd498], %f480;

$L__BB0_538:
	@%p28 bra 	$L__BB0_543;

	not.pred 	%p379, %p25;
	@%p379 bra 	$L__BB0_541;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r471;
  cvt.f32.f16 %f481, low;}

	// end inline asm
	add.s32 	%r1693, %r698, %r402;
	mul.wide.s32 	%rd499, %r1693, 4;
	add.s64 	%rd500, %rd36, %rd499;
	st.global.f32 	[%rd500], %f481;

$L__BB0_541:
	not.pred 	%p380, %p27;
	@%p380 bra 	$L__BB0_543;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r471;
  cvt.f32.f16 %f482, high;}

	// end inline asm
	add.s32 	%r1695, %r698, %r403;
	mul.wide.s32 	%rd501, %r1695, 4;
	add.s64 	%rd502, %rd36, %rd501;
	st.global.f32 	[%rd502], %f482;

$L__BB0_543:
	add.s32 	%r1945, %r665, 2;
	add.s32 	%r1696, %r1945, %r690;
	mul.lo.s32 	%r1697, %r1696, %r55;
	sub.s32 	%r699, %r1697, %r790;
	@%p28 bra 	$L__BB0_548;

	not.pred 	%p382, %p24;
	@%p382 bra 	$L__BB0_546;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2039;
  cvt.f32.f16 %f483, low;}

	// end inline asm
	add.s32 	%r1699, %r699, %r400;
	mul.wide.s32 	%rd503, %r1699, 4;
	add.s64 	%rd504, %rd36, %rd503;
	st.global.f32 	[%rd504], %f483;

$L__BB0_546:
	not.pred 	%p383, %p26;
	@%p383 bra 	$L__BB0_548;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2039;
  cvt.f32.f16 %f484, high;}

	// end inline asm
	add.s32 	%r1701, %r699, %r401;
	mul.wide.s32 	%rd505, %r1701, 4;
	add.s64 	%rd506, %rd36, %rd505;
	st.global.f32 	[%rd506], %f484;

$L__BB0_548:
	@%p28 bra 	$L__BB0_553;

	not.pred 	%p385, %p25;
	@%p385 bra 	$L__BB0_551;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2035;
  cvt.f32.f16 %f485, low;}

	// end inline asm
	add.s32 	%r1703, %r699, %r402;
	mul.wide.s32 	%rd507, %r1703, 4;
	add.s64 	%rd508, %rd36, %rd507;
	st.global.f32 	[%rd508], %f485;

$L__BB0_551:
	not.pred 	%p386, %p27;
	@%p386 bra 	$L__BB0_553;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2035;
  cvt.f32.f16 %f486, high;}

	// end inline asm
	add.s32 	%r1705, %r699, %r403;
	mul.wide.s32 	%rd509, %r1705, 4;
	add.s64 	%rd510, %rd36, %rd509;
	st.global.f32 	[%rd510], %f486;

$L__BB0_553:
	add.s32 	%r700, %r664, 1;
	add.s32 	%r1706, %r700, %r669;
	mov.u32 	%r1707, 8;
	sub.s32 	%r1708, %r1707, %r788;
	add.s32 	%r1709, %r1708, %r789;
	mad.lo.s32 	%r1710, %r1706, %r1709, %r665;
	mul.lo.s32 	%r1711, %r1710, %r55;
	sub.s32 	%r701, %r1711, %r790;
	@%p28 bra 	$L__BB0_558;

	not.pred 	%p388, %p24;
	@%p388 bra 	$L__BB0_556;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2096;
  cvt.f32.f16 %f487, low;}

	// end inline asm
	add.s32 	%r1713, %r701, %r400;
	mul.wide.s32 	%rd511, %r1713, 4;
	add.s64 	%rd512, %rd36, %rd511;
	st.global.f32 	[%rd512], %f487;

$L__BB0_556:
	not.pred 	%p389, %p26;
	@%p389 bra 	$L__BB0_558;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2096;
  cvt.f32.f16 %f488, high;}

	// end inline asm
	add.s32 	%r1715, %r701, %r401;
	mul.wide.s32 	%rd513, %r1715, 4;
	add.s64 	%rd514, %rd36, %rd513;
	st.global.f32 	[%rd514], %f488;

$L__BB0_558:
	@%p28 bra 	$L__BB0_563;

	not.pred 	%p391, %p25;
	@%p391 bra 	$L__BB0_561;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2090;
  cvt.f32.f16 %f489, low;}

	// end inline asm
	add.s32 	%r1717, %r701, %r402;
	mul.wide.s32 	%rd515, %r1717, 4;
	add.s64 	%rd516, %rd36, %rd515;
	st.global.f32 	[%rd516], %f489;

$L__BB0_561:
	not.pred 	%p392, %p27;
	@%p392 bra 	$L__BB0_563;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2090;
  cvt.f32.f16 %f490, high;}

	// end inline asm
	add.s32 	%r1719, %r701, %r403;
	mul.wide.s32 	%rd517, %r1719, 4;
	add.s64 	%rd518, %rd36, %rd517;
	st.global.f32 	[%rd518], %f490;

$L__BB0_563:
	mov.u32 	%r1930, 8;
	sub.s32 	%r1929, %r1930, %r786;
	add.s32 	%r1928, %r1929, %r787;
	add.s32 	%r1927, %r669, %r1928;
	mov.u32 	%r1720, 8;
	sub.s32 	%r1721, %r1720, %r788;
	add.s32 	%r1722, %r1721, %r789;
	add.s32 	%r1723, %r700, %r1927;
	mul.lo.s32 	%r702, %r1723, %r1722;
	add.s32 	%r1724, %r665, %r702;
	mul.lo.s32 	%r1725, %r1724, %r55;
	sub.s32 	%r703, %r1725, %r790;
	@%p28 bra 	$L__BB0_568;

	not.pred 	%p394, %p24;
	@%p394 bra 	$L__BB0_566;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2095;
  cvt.f32.f16 %f491, low;}

	// end inline asm
	add.s32 	%r1727, %r703, %r400;
	mul.wide.s32 	%rd519, %r1727, 4;
	add.s64 	%rd520, %rd36, %rd519;
	st.global.f32 	[%rd520], %f491;

$L__BB0_566:
	not.pred 	%p395, %p26;
	@%p395 bra 	$L__BB0_568;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2095;
  cvt.f32.f16 %f492, high;}

	// end inline asm
	add.s32 	%r1729, %r703, %r401;
	mul.wide.s32 	%rd521, %r1729, 4;
	add.s64 	%rd522, %rd36, %rd521;
	st.global.f32 	[%rd522], %f492;

$L__BB0_568:
	@%p28 bra 	$L__BB0_573;

	not.pred 	%p397, %p25;
	@%p397 bra 	$L__BB0_571;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2089;
  cvt.f32.f16 %f493, low;}

	// end inline asm
	add.s32 	%r1731, %r703, %r402;
	mul.wide.s32 	%rd523, %r1731, 4;
	add.s64 	%rd524, %rd36, %rd523;
	st.global.f32 	[%rd524], %f493;

$L__BB0_571:
	not.pred 	%p398, %p27;
	@%p398 bra 	$L__BB0_573;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2089;
  cvt.f32.f16 %f494, high;}

	// end inline asm
	add.s32 	%r1733, %r703, %r403;
	mul.wide.s32 	%rd525, %r1733, 4;
	add.s64 	%rd526, %rd36, %rd525;
	st.global.f32 	[%rd526], %f494;

$L__BB0_573:
	add.s32 	%r1931, %r665, 1;
	add.s32 	%r1734, %r1931, %r702;
	mul.lo.s32 	%r1735, %r1734, %r55;
	sub.s32 	%r704, %r1735, %r790;
	@%p28 bra 	$L__BB0_578;

	not.pred 	%p400, %p24;
	@%p400 bra 	$L__BB0_576;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2084;
  cvt.f32.f16 %f495, low;}

	// end inline asm
	add.s32 	%r1737, %r704, %r400;
	mul.wide.s32 	%rd527, %r1737, 4;
	add.s64 	%rd528, %rd36, %rd527;
	st.global.f32 	[%rd528], %f495;

$L__BB0_576:
	not.pred 	%p401, %p26;
	@%p401 bra 	$L__BB0_578;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2084;
  cvt.f32.f16 %f496, high;}

	// end inline asm
	add.s32 	%r1739, %r704, %r401;
	mul.wide.s32 	%rd529, %r1739, 4;
	add.s64 	%rd530, %rd36, %rd529;
	st.global.f32 	[%rd530], %f496;

$L__BB0_578:
	@%p28 bra 	$L__BB0_583;

	not.pred 	%p403, %p25;
	@%p403 bra 	$L__BB0_581;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2081;
  cvt.f32.f16 %f497, low;}

	// end inline asm
	add.s32 	%r1741, %r704, %r402;
	mul.wide.s32 	%rd531, %r1741, 4;
	add.s64 	%rd532, %rd36, %rd531;
	st.global.f32 	[%rd532], %f497;

$L__BB0_581:
	not.pred 	%p404, %p27;
	@%p404 bra 	$L__BB0_583;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2081;
  cvt.f32.f16 %f498, high;}

	// end inline asm
	add.s32 	%r1743, %r704, %r403;
	mul.wide.s32 	%rd533, %r1743, 4;
	add.s64 	%rd534, %rd36, %rd533;
	st.global.f32 	[%rd534], %f498;

$L__BB0_583:
	setp.ne.s32 	%p405, %r40, %r1241;
	@%p405 bra 	$L__BB0_585;

	ld.param.u64 	%rd571, [%rd1+104];
	cvta.to.global.u64 	%rd570, %rd571;
	mad.lo.s32 	%r1745, %r537, %r775, %r43;
	mul.lo.s32 	%r1746, %r773, %r1745;
	mul.lo.s32 	%r1747, %r1746, 768;
	mad.lo.s32 	%r1749, %r41, 384, %r1747;
	add.s32 	%r1750, %r1749, -64;
	mul.wide.s32 	%rd536, %r1750, 4;
	add.s64 	%rd537, %rd570, %rd536;
	add.s64 	%rd539, %rd537, %rd300;
	st.global.v4.u32 	[%rd539+256], {%r2100, %r2098, %r2069, %r2062};
	st.global.v4.u32 	[%rd539+1024], {%r2142, %r2138, %r2124, %r2117};
	add.s64 	%rd541, %rd537, %rd302;
	st.global.v2.u32 	[%rd541+768], {%r2130, %r2128};
	st.global.v2.u32 	[%rd541+1536], {%r2141, %r2137};

$L__BB0_585:
	setp.ne.s32 	%p406, %r41, %r1246;
	@%p406 bra 	$L__BB0_590;

	ld.param.u64 	%rd569, [%rd1+104];
	cvta.to.global.u64 	%rd568, %rd569;
	not.b32 	%r1942, %r40;
	add.s32 	%r1941, %r772, %r1942;
	setp.eq.s32 	%p407, %r40, %r1241;
	mad.lo.s32 	%r1753, %r538, %r774, %r42;
	mul.lo.s32 	%r1757, %r1753, %r853;
	mad.lo.s32 	%r1760, %r1941, 384, %r1757;
	add.s32 	%r1761, %r1760, -64;
	mad.lo.s32 	%r1764, %r855, %r68, %r1761;
	mul.wide.s32 	%rd542, %r1764, 4;
	add.s64 	%rd543, %rd568, %rd542;
	add.s64 	%rd545, %rd543, %rd300;
	st.global.v4.u32 	[%rd545+256], {%r2134, %r2132, %r2110, %r2104};
	st.global.v4.u32 	[%rd545+1024], {%r2078, %r2074, %r2039, %r2035};
	add.s64 	%rd39, %rd543, %rd302;
	@%p407 bra 	$L__BB0_588;

	st.global.v2.u32 	[%rd39], {%r2141, %r2137};

$L__BB0_588:
	st.global.v2.u32 	[%rd39+768], {%r2111, %r2105};
	@%p231 bra 	$L__BB0_590;

	st.global.v2.u32 	[%rd39+1536], {%r2170, %r2168};

$L__BB0_590:
	setp.ge.s32 	%p409, %r40, %r1241;
	@%p409 bra 	$L__BB0_592;

	add.s32 	%r1940, %r69, %r69;
	mul.lo.s32 	%r1765, %r773, 320;
	mul.lo.s32 	%r1767, %r41, 320;
	mad.lo.s32 	%r1768, %r1765, %r40, %r1767;
	add.s32 	%r1771, %r1940, -64;
	mad.lo.s32 	%r1776, %r1771, %r1246, %r1243;
	add.s32 	%r1777, %r1768, %r1776;
	shl.b32 	%r1778, %r1777, 2;
	mov.u32 	%r1779, _ZN6kernel5shmemE;
	add.s32 	%r1780, %r1779, %r1778;
	shl.b32 	%r1781, %r45, 4;
	add.s32 	%r1782, %r1780, %r1781;
	st.shared.v4.u32 	[%r1782], {%r2219, %r2218, %r2214, %r2212};
	shl.b32 	%r1783, %r45, 3;
	add.s32 	%r1784, %r1780, %r1783;
	st.shared.v2.u32 	[%r1784+512], {%r2129, %r2127};
	st.shared.v4.u32 	[%r1782+768], {%r2140, %r2136, %r2120, %r2113};

$L__BB0_592:
	setp.ge.s32 	%p410, %r41, %r1246;
	@%p410 bra 	$L__BB0_596;

	not.b32 	%r1939, %r40;
	add.s32 	%r1938, %r772, %r1939;
	mad.lo.s32 	%r1790, %r1938, 384, %r1249;
	mad.lo.s32 	%r1794, %r1244, %r41, %r1790;
	add.s32 	%r1800, %r1794, %r1247;
	shl.b32 	%r1801, %r1800, 2;
	mov.u32 	%r1802, _ZN6kernel5shmemE;
	add.s32 	%r1803, %r1802, %r1801;
	shl.b32 	%r1804, %r45, 3;
	add.s32 	%r1805, %r1803, %r1804;
	@%p409 bra 	$L__BB0_595;

	add.s32 	%r1915, %r1805, -256;
	st.shared.v2.u32 	[%r1915], {%r2139, %r2135};

$L__BB0_595:
	shl.b32 	%r1825, %r45, 4;
	add.s32 	%r1826, %r1803, %r1825;
	st.shared.v4.u32 	[%r1826], {%r2133, %r2131, %r2107, %r2101};
	add.s32 	%r1916, %r1805, -256;
	st.shared.v2.u32 	[%r1916+768], {%r2108, %r2102};
	st.shared.v4.u32 	[%r1826+768], {%r2217, %r2216, %r2205, %r2204};

$L__BB0_596:
	bar.sync 	0;
	ld.param.u64 	%rd547, [%rd1+104];
	cvta.to.global.u64 	%rd40, %rd547;
	mov.u32 	%r2243, %r2055;
	mov.u32 	%r2225, %r2033;
	mov.u32 	%r2227, %r2037;
	mov.u32 	%r2041, %r424;
	mov.u32 	%r2245, %r2051;
	mov.u32 	%r2047, %r432;
	mov.u32 	%r2054, %r442;
	mov.u32 	%r2058, %r2148;
	mov.u32 	%r2064, %r453;
	mov.u32 	%r2065, %r2146;
	mov.u32 	%r2250, %r2144;
	mov.u32 	%r2251, %r2145;
	@%p231 bra 	$L__BB0_600;

	setp.eq.s32 	%p413, %r41, 0;
	mad.lo.s32 	%r1829, %r537, %r775, %r43;
	mad.lo.s32 	%r1830, %r1829, 768, 384;
	mul.lo.s32 	%r1831, %r1830, %r773;
	mad.lo.s32 	%r1832, %r41, 384, %r1831;
	add.s32 	%r1833, %r1832, -128;
	mul.wide.s32 	%rd548, %r1833, 4;
	add.s64 	%rd549, %rd40, %rd548;
	add.s64 	%rd551, %rd549, %rd300;
	add.s64 	%rd41, %rd551, 512;
	mov.u32 	%r2243, %r2055;
	mov.u32 	%r2245, %r2051;
	mov.u32 	%r2250, %r2144;
	mov.u32 	%r2251, %r2145;
	@%p413 bra 	$L__BB0_599;

	ld.global.v4.u32 	{%r2250, %r2251, %r2243, %r2245}, [%rd41+-512];

$L__BB0_599:
	ld.global.v4.u32 	{%r2058, %r2065, %r2054, %r2064}, [%rd41];
	ld.global.v4.u32 	{%r2047, %r2041, %r2227, %r2225}, [%rd41+512];
	ld.global.v4.u32 	{%r2228, %r2226, %r2239, %r2237}, [%rd41+1024];

$L__BB0_600:
	mov.u32 	%r2027, %r2056;
	mov.u32 	%r2030, %r412;
	mov.u32 	%r2031, %r413;
	mov.u32 	%r2045, %r2052;
	mov.u32 	%r2059, %r448;
	mov.u32 	%r2247, %r2060;
	mov.u32 	%r2066, %r455;
	mov.u32 	%r2249, %r2067;
	@%p234 bra 	$L__BB0_602;

	not.b32 	%r1937, %r40;
	add.s32 	%r1936, %r772, %r1937;
	mad.lo.s32 	%r1851, %r538, %r774, %r42;
	mad.lo.s32 	%r1857, %r1936, 384, %r69;
	mad.lo.s32 	%r1858, %r1851, %r853, %r1857;
	mad.lo.s32 	%r1861, %r855, %r68, %r1858;
	mul.wide.s32 	%rd552, %r1861, 4;
	add.s64 	%rd553, %rd40, %rd552;
	add.s64 	%rd555, %rd553, %rd300;
	ld.global.v4.u32 	{%r2249, %r2247, %r2031, %r2030}, [%rd555+512];
	ld.global.v4.u32 	{%r2066, %r2059, %r2027, %r2045}, [%rd555+1024];
	ld.global.v4.u32 	{%r2250, %r2251, %r2243, %r2245}, [%rd555+1536];

$L__BB0_602:
	setp.ne.s32 	%p424, %r40, %r1241;
	add.s32 	%r769, %r2143, 1;
	bar.sync 	0;
	ld.param.u64 	%rd556, [%rd1+104];
	cvta.to.global.u64 	%rd42, %rd556;
	@%p424 bra 	$L__BB0_604;

	mad.lo.s32 	%r1875, %r537, %r775, %r43;
	mad.lo.s32 	%r1876, %r1875, 768, 384;
	mul.lo.s32 	%r1877, %r1876, %r773;
	mad.lo.s32 	%r1879, %r41, 384, %r1877;
	add.s32 	%r1880, %r1879, -128;
	mul.wide.s32 	%rd557, %r1880, 4;
	add.s64 	%rd558, %rd42, %rd557;
	add.s64 	%rd560, %rd558, %rd300;
	st.global.v4.u32 	[%rd560+512], {%r2067, %r2060, %r2068, %r2061};
	st.global.v4.u32 	[%rd560+1024], {%r2099, %r2097, %r2094, %r2088};
	st.global.v4.u32 	[%rd560+1536], {%r2155, %r2154, %r2123, %r2116};

$L__BB0_604:
	setp.ne.s32 	%p425, %r41, %r1246;
	@%p425 bra 	$L__BB0_607;

	not.b32 	%r1935, %r40;
	add.s32 	%r1934, %r772, %r1935;
	mad.lo.s32 	%r1882, %r538, %r774, %r42;
	mad.lo.s32 	%r1888, %r1934, 384, %r69;
	mad.lo.s32 	%r1889, %r1882, %r853, %r1888;
	mad.lo.s32 	%r1892, %r855, %r68, %r1889;
	mul.wide.s32 	%rd561, %r1892, 4;
	add.s64 	%rd562, %rd42, %rd561;
	add.s64 	%rd43, %rd562, %rd300;
	st.global.v4.u32 	[%rd43], {%r2155, %r2154, %r2123, %r2116};
	st.global.v4.u32 	[%rd43+512], {%r2153, %r2152, %r2149, %r2147};
	st.global.v4.u32 	[%rd43+1024], {%r2083, %r2080, %r2037, %r2033};
	@%p231 bra 	$L__BB0_607;

	st.global.v4.u32 	[%rd43+1536], {%r2228, %r2226, %r2239, %r2237};

$L__BB0_607:
	rem.s32 	%r1893, %r2143, %r776;
	setp.eq.s32 	%p418, %r1893, 0;
	@%p418 bra 	$L__BB0_609;

	bar.sync 	0;
	bra.uni 	$L__BB0_616;

$L__BB0_609:
	@%p218 bra 	$L__BB0_611;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_611:
	bar.sync 	0;
	@%p219 bra 	$L__BB0_615;

	membar.gl;
	setp.eq.s32 	%p421, %r405, %r406;
	mov.u32 	%r1909, -2147483647;
	sub.s32 	%r1910, %r1909, %r404;
	selp.b32 	%r1898, %r1910, 1, %p421;
	// begin inline asm
	atom.add.release.gpu.u32 %r1897,[%rd30],%r1898;
	// end inline asm

$L__BB0_613:
	ld.volatile.u32 	%r1911, [%rd30];
	xor.b32  	%r1912, %r1911, %r1897;
	setp.gt.s32 	%p422, %r1912, -1;
	@%p422 bra 	$L__BB0_613;

	// begin inline asm
	ld.acquire.gpu.u32 %r1913,[%rd30];
	// end inline asm

$L__BB0_615:
	bar.sync 	0;

$L__BB0_616:
	setp.lt.s32 	%p423, %r769, %r48;
	mov.u32 	%r2033, %r2225;
	mov.u32 	%r2035, %r2159;
	mov.u32 	%r2037, %r2227;
	mov.u32 	%r2039, %r2161;
	mov.u32 	%r2060, %r2247;
	mov.u32 	%r2061, %r412;
	mov.u32 	%r2062, %r2178;
	mov.u32 	%r2067, %r2249;
	mov.u32 	%r2068, %r413;
	mov.u32 	%r2069, %r2180;
	mov.u32 	%r2074, %r2169;
	mov.u32 	%r2078, %r2171;
	mov.u32 	%r2080, %r424;
	mov.u32 	%r2083, %r432;
	mov.u32 	%r2088, %r439;
	mov.u32 	%r2094, %r444;
	mov.u32 	%r2097, %r448;
	mov.u32 	%r2098, %r2182;
	mov.u32 	%r2099, %r455;
	mov.u32 	%r2100, %r2183;
	mov.u32 	%r2101, %r468;
	mov.u32 	%r2102, %r2206;
	mov.u32 	%r2104, %r471;
	mov.u32 	%r2105, %r428;
	mov.u32 	%r2107, %r472;
	mov.u32 	%r2108, %r2208;
	mov.u32 	%r2110, %r475;
	mov.u32 	%r2111, %r436;
	mov.u32 	%r2113, %r476;
	mov.u32 	%r2116, %r478;
	mov.u32 	%r2117, %r481;
	mov.u32 	%r2120, %r483;
	mov.u32 	%r2123, %r485;
	mov.u32 	%r2124, %r488;
	mov.u32 	%r2127, %r2213;
	mov.u32 	%r2128, %r452;
	mov.u32 	%r2129, %r2215;
	mov.u32 	%r2130, %r459;
	mov.u32 	%r2131, %r496;
	mov.u32 	%r2132, %r499;
	mov.u32 	%r2133, %r502;
	mov.u32 	%r2134, %r505;
	mov.u32 	%r2135, %r507;
	mov.u32 	%r2136, %r508;
	mov.u32 	%r2137, %r511;
	mov.u32 	%r2138, %r512;
	mov.u32 	%r2139, %r514;
	mov.u32 	%r2140, %r515;
	mov.u32 	%r2141, %r518;
	mov.u32 	%r2142, %r519;
	mov.u32 	%r2143, %r769;
	mov.u32 	%r2147, %r453;
	mov.u32 	%r2149, %r442;
	mov.u32 	%r2152, %r425;
	mov.u32 	%r2153, %r433;
	mov.u32 	%r2154, %r440;
	mov.u32 	%r2155, %r445;
	@%p423 bra 	$L__BB0_323;

$L__BB0_617:
	ret;

}

