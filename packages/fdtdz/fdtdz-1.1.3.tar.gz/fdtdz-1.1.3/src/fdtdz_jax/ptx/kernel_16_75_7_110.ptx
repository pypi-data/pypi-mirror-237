//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[192]
)
{
	.reg .pred 	%p<445>;
	.reg .f32 	%f<513>;
	.reg .b32 	%r<2690>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<579>;


	mov.b64 	%rd42, _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd42;
	ld.param.v2.u32 	{%r918, %r919}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r920, %r921}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r922, %r923}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r924, %r925}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r926, %r927}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r928, %r929}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r930, %r931}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	ld.param.v2.u32 	{%r932, %r933}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+56];
	ld.param.v2.u32 	{%r934, %r935}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+64];
	ld.param.v2.u32 	{%r936, %r937}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+72];
	ld.param.v2.u32 	{%r938, %r939}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+80];
	ld.param.v2.u32 	{%r940, %r941}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+88];
	ld.param.v2.u32 	{%r942, %r943}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+96];
	mov.u32 	%r40, %tid.y;
	mov.u32 	%r41, %tid.z;
	mov.u32 	%r42, %ctaid.y;
	mov.u32 	%r43, %ctaid.z;
	mov.u32 	%r944, 32;
	sub.s32 	%r44, %r944, %r925;
	mov.u32 	%r45, %tid.x;
	setp.le.s32 	%p28, %r44, %r45;
	add.s32 	%r945, %r931, -1;
	add.s32 	%r946, %r929, %r923;
	add.s32 	%r947, %r946, %r924;
	add.s32 	%r948, %r947, 1;
	mad.lo.s32 	%r949, %r945, %r930, %r948;
	mul.lo.s32 	%r950, %r918, %r920;
	shl.b32 	%r46, %r950, 1;
	shl.b32 	%r951, %r950, 2;
	div.s32 	%r952, %r949, %r951;
	add.s32 	%r953, %r952, 1;
	mul.lo.s32 	%r954, %r953, %r924;
	mul.lo.s32 	%r955, %r919, %r921;
	shl.b32 	%r47, %r955, 1;
	div.s32 	%r956, %r954, %r47;
	add.s32 	%r957, %r956, 1;
	mul.lo.s32 	%r48, %r957, %r923;
	ld.param.u64 	%rd43, [%rd1+184];
	cvta.to.global.u64 	%rd2, %rd43;
	mad.lo.s32 	%r960, %r920, %r43, %r42;
	mad.lo.s32 	%r961, %r960, %r919, %r41;
	mad.lo.s32 	%r962, %r961, %r918, %r40;
	shl.b32 	%r49, %r962, 5;
	add.s32 	%r2316, %r49, %r45;
	mul.lo.s32 	%r963, %r955, %r950;
	shl.b32 	%r53, %r963, 5;
	mov.u32 	%r964, 8;
	sub.s32 	%r965, %r964, %r932;
	add.s32 	%r966, %r965, %r933;
	sub.s32 	%r967, %r964, %r934;
	add.s32 	%r968, %r967, %r935;
	sub.s32 	%r54, %r937, %r936;
	mul.lo.s32 	%r969, %r931, %r54;
	mul.lo.s32 	%r970, %r969, %r968;
	mul.lo.s32 	%r971, %r970, %r966;
	mul.lo.s32 	%r55, %r971, 3;
	setp.ge.s32 	%p29, %r2316, %r55;
	@%p29 bra 	$L__BB0_9;

	add.s32 	%r972, %r935, 8;
	sub.s32 	%r973, %r972, %r934;
	mul.lo.s32 	%r974, %r931, %r973;
	add.s32 	%r975, %r933, 8;
	sub.s32 	%r976, %r975, %r932;
	mul.lo.s32 	%r977, %r974, %r976;
	mul.lo.s32 	%r978, %r977, %r54;
	not.b32 	%r979, %r45;
	mad.lo.s32 	%r980, %r978, 3, %r979;
	sub.s32 	%r981, %r980, %r49;
	mul.lo.s32 	%r982, %r955, %r918;
	mul.lo.s32 	%r983, %r982, %r920;
	shl.b32 	%r984, %r983, 5;
	div.u32 	%r56, %r981, %r984;
	add.s32 	%r985, %r56, 1;
	and.b32  	%r2313, %r985, 3;
	setp.eq.s32 	%p30, %r2313, 0;
	mov.u32 	%r2314, %r2316;
	@%p30 bra 	$L__BB0_6;

	mov.u32 	%r2314, %r2316;

$L__BB0_5:
	.pragma "nounroll";
	mul.wide.s32 	%rd44, %r2314, 4;
	add.s64 	%rd45, %rd2, %rd44;
	mov.u32 	%r986, 0;
	st.global.u32 	[%rd45], %r986;
	add.s32 	%r2314, %r2314, %r53;
	add.s32 	%r2313, %r2313, -1;
	setp.ne.s32 	%p31, %r2313, 0;
	@%p31 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p32, %r56, 3;
	@%p32 bra 	$L__BB0_9;

	mul.wide.s32 	%rd48, %r53, 4;

$L__BB0_8:
	mul.wide.s32 	%rd46, %r2314, 4;
	add.s64 	%rd47, %rd2, %rd46;
	mov.u32 	%r987, 0;
	st.global.u32 	[%rd47], %r987;
	add.s64 	%rd49, %rd47, %rd48;
	st.global.u32 	[%rd49], %r987;
	add.s32 	%r988, %r2314, %r53;
	add.s32 	%r989, %r988, %r53;
	add.s64 	%rd50, %rd49, %rd48;
	st.global.u32 	[%rd50], %r987;
	add.s32 	%r990, %r989, %r53;
	add.s64 	%rd51, %rd50, %rd48;
	st.global.u32 	[%rd51], %r987;
	add.s32 	%r2314, %r990, %r53;
	setp.lt.s32 	%p33, %r2314, %r55;
	@%p33 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd52, [%rd1+104];
	cvta.to.global.u64 	%rd3, %rd52;
	sub.s32 	%r991, %r924, %r46;
	div.s32 	%r992, %r991, %r47;
	mul.lo.s32 	%r993, %r992, %r923;
	sub.s32 	%r65, %r993, %r46;
	sub.s32 	%r994, %r923, %r47;
	mul.lo.s32 	%r995, %r994, %r920;
	mul.lo.s32 	%r66, %r918, 384;
	add.s32 	%r996, %r66, %r66;
	add.s32 	%r997, %r996, 128;
	mul.lo.s32 	%r999, %r955, 768;
	mul.lo.s32 	%r1000, %r995, %r997;
	mad.lo.s32 	%r67, %r999, %r65, %r1000;
	bra.uni 	$L__BB0_10;

$L__BB0_647:
	mov.f32 	%f500, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f500;
  cvt.rn.f16.f32 high, %f500;
  mov.b32 %r2287, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd564, %r2316, 4;
	add.s64 	%rd565, %rd3, %rd564;
	st.global.u32 	[%rd565], %r2287;
	add.s32 	%r2316, %r2316, %r53;

$L__BB0_10:
	setp.lt.s32 	%p34, %r2316, %r67;
	@%p34 bra 	$L__BB0_647;

	ld.param.u64 	%rd53, [%rd1+144];
	cvta.to.global.u64 	%rd5, %rd53;
	ld.param.u64 	%rd54, [%rd1+112];
	cvta.to.global.u64 	%rd6, %rd54;
	ld.param.u64 	%rd55, [%rd1+152];
	cvta.to.global.u64 	%rd7, %rd55;
	mad.lo.s32 	%r2352, %r918, %r42, %r40;
	mul.lo.s32 	%r76, %r919, %r43;
	add.s32 	%r77, %r76, %r41;
	setp.ge.s32 	%p35, %r2352, %r923;
	@%p35 bra 	$L__BB0_65;

	mov.u32 	%r1001, 31;
	sub.s32 	%r1002, %r1001, %r45;
	setp.gt.s32 	%p36, %r44, %r45;
	selp.b32 	%r1003, %r45, %r1002, %p36;
	shl.b32 	%r1004, %r1003, 2;
	mov.u32 	%r1005, 2;
	sub.s32 	%r78, %r1004, %r926;
	shl.b32 	%r1006, %r925, 2;
	mov.u32 	%r1007, 128;
	sub.s32 	%r79, %r1007, %r1006;
	sub.s32 	%r1008, %r1005, %r926;
	add.s32 	%r80, %r1008, %r1004;
	ld.param.f32 	%f83, [%rd1+136];
	rcp.rn.f32 	%f1, %f83;
	sub.s32 	%r81, %r933, %r932;
	sub.s32 	%r82, %r935, %r934;
	add.s32 	%r83, %r933, -1;
	add.s32 	%r84, %r935, -1;
	add.s32 	%r85, %r937, -1;
	mul.lo.s32 	%r1009, %r924, %r923;
	shl.b32 	%r86, %r1009, 6;
	add.s32 	%r87, %r923, -1;
	selp.f32 	%f2, 0f00000000, 0f3F800000, %p36;
	add.s32 	%r88, %r78, 1;
	add.s32 	%r89, %r80, 1;
	shl.b32 	%r90, %r45, 1;
	or.b32  	%r91, %r90, 1;
	shr.u32 	%r1010, %r91, 31;
	add.s32 	%r1011, %r91, %r1010;
	shr.s32 	%r93, %r1011, 1;
	and.b32  	%r1012, %r1011, -2;
	sub.s32 	%r1013, %r91, %r1012;
	add.s32 	%r92, %r1013, %r86;
	rem.s32 	%r1072, %r88, %r79;
	add.s32 	%r1073, %r1072, %r79;
	rem.s32 	%r1074, %r1073, %r79;
	rem.s32 	%r1075, %r89, %r79;
	add.s32 	%r1076, %r1075, %r79;
	rem.s32 	%r1077, %r1076, %r79;
	mov.u32 	%r2317, %r2352;

$L__BB0_13:
	setp.ge.s32 	%p37, %r77, %r924;
	@%p37 bra 	$L__BB0_64;

	setp.ge.s32 	%p38, %r2317, %r938;
	setp.lt.s32 	%p39, %r2317, %r939;
	and.pred  	%p1, %p39, %p38;
	setp.lt.s32 	%p40, %r2317, %r933;
	setp.ge.s32 	%p41, %r2317, %r932;
	and.pred  	%p2, %p40, %p41;
	selp.b32 	%r1014, %r2317, %r83, %p40;
	setp.lt.s32 	%p42, %r2317, %r932;
	selp.b32 	%r1015, %r932, %r1014, %p42;
	sub.s32 	%r1016, %r1015, %r932;
	add.s32 	%r95, %r87, %r2317;
	rem.s32 	%r1017, %r78, %r79;
	add.s32 	%r1018, %r1017, %r79;
	rem.s32 	%r96, %r1018, %r79;
	rem.s32 	%r1019, %r80, %r79;
	add.s32 	%r1020, %r1019, %r79;
	rem.s32 	%r97, %r1020, %r79;
	setp.lt.s32 	%p43, %r96, %r937;
	sub.s32 	%r98, %r96, %r936;
	setp.lt.s32 	%p44, %r96, %r936;
	selp.b32 	%r1021, %r96, %r85, %p43;
	selp.b32 	%r1022, %r936, %r1021, %p44;
	sub.s32 	%r99, %r1022, %r936;
	setp.lt.s32 	%p45, %r97, %r937;
	sub.s32 	%r100, %r97, %r936;
	setp.lt.s32 	%p46, %r97, %r936;
	selp.b32 	%r1023, %r97, %r85, %p45;
	selp.b32 	%r1024, %r936, %r1023, %p46;
	sub.s32 	%r101, %r1024, %r936;
	sub.s32 	%r1025, %r2317, %r932;
	mul.lo.s32 	%r102, %r1025, %r82;
	mul.lo.s32 	%r103, %r1016, %r82;
	add.s32 	%r1026, %r1025, %r81;
	mul.lo.s32 	%r104, %r1026, %r82;
	add.s32 	%r1027, %r1016, %r81;
	mul.lo.s32 	%r105, %r1027, %r82;
	add.s32 	%r1028, %r1026, %r81;
	mul.lo.s32 	%r106, %r1028, %r82;
	add.s32 	%r1029, %r1027, %r81;
	mul.lo.s32 	%r107, %r1029, %r82;
	mov.u32 	%r2318, %r77;

$L__BB0_15:
	setp.ge.s32 	%p47, %r2318, %r940;
	and.pred  	%p48, %p1, %p47;
	setp.lt.s32 	%p49, %r2318, %r941;
	and.pred  	%p3, %p49, %p48;
	setp.ge.s32 	%p50, %r2318, %r934;
	and.pred  	%p51, %p2, %p50;
	setp.lt.s32 	%p52, %r2318, %r935;
	and.pred  	%p4, %p52, %p51;
	sub.s32 	%r109, %r2318, %r934;
	selp.b32 	%r1030, %r2318, %r84, %p52;
	setp.lt.s32 	%p53, %r2318, %r934;
	selp.b32 	%r1031, %r934, %r1030, %p53;
	sub.s32 	%r110, %r1031, %r934;
	mul.lo.s32 	%r111, %r2318, %r923;
	add.s32 	%r112, %r111, %r2317;
	shl.b32 	%r113, %r112, 6;
	setp.ge.s32 	%p54, %r96, %r942;
	and.pred  	%p55, %p3, %p54;
	setp.lt.s32 	%p56, %r96, %r943;
	and.pred  	%p57, %p56, %p55;
	setp.ge.s32 	%p58, %r96, %r936;
	and.pred  	%p59, %p4, %p58;
	and.pred  	%p5, %p43, %p59;
	setp.ge.s32 	%p61, %r97, %r936;
	and.pred  	%p62, %p4, %p61;
	and.pred  	%p6, %p45, %p62;
	mul.wide.s32 	%rd56, %r112, 4;
	add.s64 	%rd8, %rd7, %rd56;
	ld.global.f32 	%f84, [%rd8];
	fma.rn.f32 	%f3, %f84, 0f3F000000, %f1;
	and.pred  	%p7, %p36, %p57;
	not.pred 	%p65, %p7;
	mov.f32 	%f501, %f2;
	@%p65 bra 	$L__BB0_19;

	@%p5 bra 	$L__BB0_18;
	bra.uni 	$L__BB0_17;

$L__BB0_18:
	add.s32 	%r1034, %r109, %r102;
	mad.lo.s32 	%r1035, %r1034, %r54, %r98;
	mul.wide.s32 	%rd59, %r1035, 4;
	add.s64 	%rd60, %rd5, %rd59;
	ld.global.f32 	%f501, [%rd60];
	bra.uni 	$L__BB0_19;

$L__BB0_17:
	add.s32 	%r1032, %r110, %r103;
	mad.lo.s32 	%r1033, %r1032, %r54, %r99;
	mul.wide.s32 	%rd57, %r1033, 4;
	add.s64 	%rd58, %rd5, %rd57;
	ld.global.f32 	%f501, [%rd58];

$L__BB0_19:
	setp.lt.s32 	%p67, %r97, %r943;
	setp.ge.s32 	%p68, %r97, %r942;
	and.pred  	%p69, %p3, %p68;
	and.pred  	%p70, %p67, %p69;
	and.pred  	%p8, %p36, %p70;
	not.pred 	%p71, %p8;
	mov.f32 	%f502, %f2;
	@%p71 bra 	$L__BB0_23;

	@%p6 bra 	$L__BB0_22;
	bra.uni 	$L__BB0_21;

$L__BB0_22:
	add.s32 	%r1038, %r109, %r102;
	mad.lo.s32 	%r1039, %r1038, %r54, %r100;
	mul.wide.s32 	%rd63, %r1039, 4;
	add.s64 	%rd64, %rd5, %rd63;
	ld.global.f32 	%f502, [%rd64];
	bra.uni 	$L__BB0_23;

$L__BB0_21:
	add.s32 	%r1036, %r110, %r103;
	mad.lo.s32 	%r1037, %r1036, %r54, %r101;
	mul.wide.s32 	%rd61, %r1037, 4;
	add.s64 	%rd62, %rd5, %rd61;
	ld.global.f32 	%f502, [%rd62];

$L__BB0_23:
	div.rn.f32 	%f86, %f502, %f3;
	div.rn.f32 	%f85, %f501, %f3;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f85;
  cvt.rn.f16.f32 high, %f86;
  mov.b32 %r1040, {low,high};}

	// end inline asm
	shl.b32 	%r114, %r112, 5;
	add.s32 	%r1041, %r114, %r45;
	shl.b32 	%r1042, %r1041, 2;
	add.s32 	%r1043, %r86, %r1042;
	mul.wide.s32 	%rd65, %r1043, 4;
	add.s64 	%rd66, %rd6, %rd65;
	st.global.u32 	[%rd66], %r1040;
	add.s32 	%r115, %r924, %r2318;
	mad.lo.s32 	%r1044, %r115, %r923, %r2317;
	mul.wide.s32 	%rd67, %r1044, 4;
	add.s64 	%rd9, %rd7, %rd67;
	ld.global.f32 	%f87, [%rd9];
	fma.rn.f32 	%f10, %f87, 0f3F000000, %f1;
	mov.f32 	%f503, %f2;
	@%p65 bra 	$L__BB0_27;

	@%p5 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_25;

$L__BB0_26:
	add.s32 	%r1047, %r109, %r104;
	mad.lo.s32 	%r1048, %r1047, %r54, %r98;
	mul.wide.s32 	%rd70, %r1048, 4;
	add.s64 	%rd71, %rd5, %rd70;
	ld.global.f32 	%f503, [%rd71];
	bra.uni 	$L__BB0_27;

$L__BB0_25:
	add.s32 	%r1045, %r110, %r105;
	mad.lo.s32 	%r1046, %r1045, %r54, %r99;
	mul.wide.s32 	%rd68, %r1046, 4;
	add.s64 	%rd69, %rd5, %rd68;
	ld.global.f32 	%f503, [%rd69];

$L__BB0_27:
	mov.f32 	%f504, %f2;
	@%p71 bra 	$L__BB0_31;

	@%p6 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_29;

$L__BB0_30:
	add.s32 	%r1051, %r109, %r104;
	mad.lo.s32 	%r1052, %r1051, %r54, %r100;
	mul.wide.s32 	%rd74, %r1052, 4;
	add.s64 	%rd75, %rd5, %rd74;
	ld.global.f32 	%f504, [%rd75];
	bra.uni 	$L__BB0_31;

$L__BB0_29:
	add.s32 	%r1049, %r110, %r105;
	mad.lo.s32 	%r1050, %r1049, %r54, %r101;
	mul.wide.s32 	%rd72, %r1050, 4;
	add.s64 	%rd73, %rd5, %rd72;
	ld.global.f32 	%f504, [%rd73];

$L__BB0_31:
	div.rn.f32 	%f89, %f504, %f10;
	div.rn.f32 	%f88, %f503, %f10;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f88;
  cvt.rn.f16.f32 high, %f89;
  mov.b32 %r1053, {low,high};}

	// end inline asm
	add.s32 	%r1054, %r90, %r113;
	mul.wide.s32 	%rd76, %r1054, 4;
	add.s64 	%rd77, %rd6, %rd76;
	st.global.u32 	[%rd77], %r1053;
	add.s32 	%r1055, %r115, %r924;
	mad.lo.s32 	%r1056, %r1055, %r923, %r2317;
	mul.wide.s32 	%rd78, %r1056, 4;
	add.s64 	%rd10, %rd7, %rd78;
	ld.global.f32 	%f90, [%rd10];
	fma.rn.f32 	%f17, %f90, 0f3F000000, %f1;
	mov.f32 	%f505, %f2;
	@%p65 bra 	$L__BB0_35;

	@%p5 bra 	$L__BB0_34;
	bra.uni 	$L__BB0_33;

$L__BB0_34:
	add.s32 	%r1059, %r109, %r106;
	mad.lo.s32 	%r1060, %r1059, %r54, %r98;
	mul.wide.s32 	%rd81, %r1060, 4;
	add.s64 	%rd82, %rd5, %rd81;
	ld.global.f32 	%f505, [%rd82];
	bra.uni 	$L__BB0_35;

$L__BB0_33:
	add.s32 	%r1057, %r110, %r107;
	mad.lo.s32 	%r1058, %r1057, %r54, %r99;
	mul.wide.s32 	%rd79, %r1058, 4;
	add.s64 	%rd80, %rd5, %rd79;
	ld.global.f32 	%f505, [%rd80];

$L__BB0_35:
	mov.f32 	%f506, %f2;
	@%p71 bra 	$L__BB0_39;

	@%p6 bra 	$L__BB0_38;
	bra.uni 	$L__BB0_37;

$L__BB0_38:
	add.s32 	%r1063, %r109, %r106;
	mad.lo.s32 	%r1064, %r1063, %r54, %r100;
	mul.wide.s32 	%rd85, %r1064, 4;
	add.s64 	%rd86, %rd5, %rd85;
	ld.global.f32 	%f506, [%rd86];
	bra.uni 	$L__BB0_39;

$L__BB0_37:
	add.s32 	%r1061, %r110, %r107;
	mad.lo.s32 	%r1062, %r1061, %r54, %r101;
	mul.wide.s32 	%rd83, %r1062, 4;
	add.s64 	%rd84, %rd5, %rd83;
	ld.global.f32 	%f506, [%rd84];

$L__BB0_39:
	div.rn.f32 	%f92, %f506, %f17;
	div.rn.f32 	%f91, %f505, %f17;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f91;
  cvt.rn.f16.f32 high, %f92;
  mov.b32 %r1065, {low,high};}

	// end inline asm
	rem.s32 	%r1066, %r95, %r923;
	add.s32 	%r1067, %r1066, %r111;
	shl.b32 	%r116, %r1067, 5;
	add.s32 	%r1068, %r116, %r45;
	shl.b32 	%r1069, %r1068, 2;
	add.s32 	%r1070, %r86, %r1069;
	add.s32 	%r1071, %r1070, 2;
	mul.wide.s32 	%rd87, %r1071, 4;
	add.s64 	%rd88, %rd6, %rd87;
	st.global.u32 	[%rd88], %r1065;
	setp.ge.s32 	%p76, %r1074, %r942;
	and.pred  	%p77, %p3, %p76;
	setp.lt.s32 	%p78, %r1074, %r943;
	and.pred  	%p79, %p78, %p77;
	setp.ge.s32 	%p80, %r1074, %r936;
	and.pred  	%p81, %p4, %p80;
	setp.lt.s32 	%p82, %r1074, %r937;
	and.pred  	%p9, %p82, %p81;
	setp.ge.s32 	%p83, %r1077, %r942;
	and.pred  	%p84, %p3, %p83;
	setp.lt.s32 	%p85, %r1077, %r943;
	and.pred  	%p10, %p85, %p84;
	sub.s32 	%r117, %r1074, %r936;
	setp.lt.s32 	%p86, %r1074, %r936;
	selp.b32 	%r1078, %r1074, %r85, %p82;
	selp.b32 	%r1079, %r936, %r1078, %p86;
	sub.s32 	%r118, %r1079, %r936;
	setp.ge.s32 	%p87, %r1077, %r936;
	and.pred  	%p88, %p4, %p87;
	setp.lt.s32 	%p89, %r1077, %r937;
	and.pred  	%p11, %p89, %p88;
	sub.s32 	%r119, %r1077, %r936;
	setp.lt.s32 	%p90, %r1077, %r936;
	selp.b32 	%r1080, %r1077, %r85, %p89;
	selp.b32 	%r1081, %r936, %r1080, %p90;
	sub.s32 	%r120, %r1081, %r936;
	ld.global.f32 	%f93, [%rd8];
	fma.rn.f32 	%f24, %f93, 0f3F000000, %f1;
	and.pred  	%p12, %p36, %p79;
	not.pred 	%p92, %p12;
	mov.f32 	%f507, %f2;
	@%p92 bra 	$L__BB0_43;

	@%p9 bra 	$L__BB0_42;
	bra.uni 	$L__BB0_41;

$L__BB0_42:
	add.s32 	%r1084, %r109, %r102;
	mad.lo.s32 	%r1085, %r1084, %r54, %r117;
	mul.wide.s32 	%rd91, %r1085, 4;
	add.s64 	%rd92, %rd5, %rd91;
	ld.global.f32 	%f507, [%rd92];
	bra.uni 	$L__BB0_43;

$L__BB0_41:
	add.s32 	%r1082, %r110, %r103;
	mad.lo.s32 	%r1083, %r1082, %r54, %r118;
	mul.wide.s32 	%rd89, %r1083, 4;
	add.s64 	%rd90, %rd5, %rd89;
	ld.global.f32 	%f507, [%rd90];

$L__BB0_43:
	and.pred  	%p13, %p36, %p10;
	not.pred 	%p94, %p13;
	mov.f32 	%f508, %f2;
	@%p94 bra 	$L__BB0_47;

	@%p11 bra 	$L__BB0_46;
	bra.uni 	$L__BB0_45;

$L__BB0_46:
	add.s32 	%r1088, %r109, %r102;
	mad.lo.s32 	%r1089, %r1088, %r54, %r119;
	mul.wide.s32 	%rd95, %r1089, 4;
	add.s64 	%rd96, %rd5, %rd95;
	ld.global.f32 	%f508, [%rd96];
	bra.uni 	$L__BB0_47;

$L__BB0_45:
	add.s32 	%r1086, %r110, %r103;
	mad.lo.s32 	%r1087, %r1086, %r54, %r120;
	mul.wide.s32 	%rd93, %r1087, 4;
	add.s64 	%rd94, %rd5, %rd93;
	ld.global.f32 	%f508, [%rd94];

$L__BB0_47:
	div.rn.f32 	%f95, %f508, %f24;
	div.rn.f32 	%f94, %f507, %f24;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f94;
  cvt.rn.f16.f32 high, %f95;
  mov.b32 %r1090, {low,high};}

	// end inline asm
	add.s32 	%r1091, %r114, %r93;
	shl.b32 	%r1092, %r1091, 2;
	add.s32 	%r1093, %r92, %r1092;
	mul.wide.s32 	%rd97, %r1093, 4;
	add.s64 	%rd98, %rd6, %rd97;
	st.global.u32 	[%rd98], %r1090;
	ld.global.f32 	%f96, [%rd9];
	fma.rn.f32 	%f31, %f96, 0f3F000000, %f1;
	mov.f32 	%f509, %f2;
	@%p92 bra 	$L__BB0_51;

	@%p9 bra 	$L__BB0_50;
	bra.uni 	$L__BB0_49;

$L__BB0_50:
	add.s32 	%r1096, %r109, %r104;
	mad.lo.s32 	%r1097, %r1096, %r54, %r117;
	mul.wide.s32 	%rd101, %r1097, 4;
	add.s64 	%rd102, %rd5, %rd101;
	ld.global.f32 	%f509, [%rd102];
	bra.uni 	$L__BB0_51;

$L__BB0_49:
	add.s32 	%r1094, %r110, %r105;
	mad.lo.s32 	%r1095, %r1094, %r54, %r118;
	mul.wide.s32 	%rd99, %r1095, 4;
	add.s64 	%rd100, %rd5, %rd99;
	ld.global.f32 	%f509, [%rd100];

$L__BB0_51:
	mov.f32 	%f510, %f2;
	@%p94 bra 	$L__BB0_55;

	@%p11 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_53;

$L__BB0_54:
	add.s32 	%r1100, %r109, %r104;
	mad.lo.s32 	%r1101, %r1100, %r54, %r119;
	mul.wide.s32 	%rd105, %r1101, 4;
	add.s64 	%rd106, %rd5, %rd105;
	ld.global.f32 	%f510, [%rd106];
	bra.uni 	$L__BB0_55;

$L__BB0_53:
	add.s32 	%r1098, %r110, %r105;
	mad.lo.s32 	%r1099, %r1098, %r54, %r120;
	mul.wide.s32 	%rd103, %r1099, 4;
	add.s64 	%rd104, %rd5, %rd103;
	ld.global.f32 	%f510, [%rd104];

$L__BB0_55:
	div.rn.f32 	%f98, %f510, %f31;
	div.rn.f32 	%f97, %f509, %f31;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f97;
  cvt.rn.f16.f32 high, %f98;
  mov.b32 %r1102, {low,high};}

	// end inline asm
	add.s32 	%r1103, %r91, %r113;
	mul.wide.s32 	%rd107, %r1103, 4;
	add.s64 	%rd108, %rd6, %rd107;
	st.global.u32 	[%rd108], %r1102;
	ld.global.f32 	%f99, [%rd10];
	fma.rn.f32 	%f38, %f99, 0f3F000000, %f1;
	mov.f32 	%f511, %f2;
	@%p92 bra 	$L__BB0_59;

	@%p9 bra 	$L__BB0_58;
	bra.uni 	$L__BB0_57;

$L__BB0_58:
	add.s32 	%r1106, %r109, %r106;
	mad.lo.s32 	%r1107, %r1106, %r54, %r117;
	mul.wide.s32 	%rd111, %r1107, 4;
	add.s64 	%rd112, %rd5, %rd111;
	ld.global.f32 	%f511, [%rd112];
	bra.uni 	$L__BB0_59;

$L__BB0_57:
	add.s32 	%r1104, %r110, %r107;
	mad.lo.s32 	%r1105, %r1104, %r54, %r118;
	mul.wide.s32 	%rd109, %r1105, 4;
	add.s64 	%rd110, %rd5, %rd109;
	ld.global.f32 	%f511, [%rd110];

$L__BB0_59:
	mov.f32 	%f512, %f2;
	@%p94 bra 	$L__BB0_63;

	@%p11 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_61;

$L__BB0_62:
	add.s32 	%r1110, %r109, %r106;
	mad.lo.s32 	%r1111, %r1110, %r54, %r119;
	mul.wide.s32 	%rd115, %r1111, 4;
	add.s64 	%rd116, %rd5, %rd115;
	ld.global.f32 	%f512, [%rd116];
	bra.uni 	$L__BB0_63;

$L__BB0_61:
	add.s32 	%r1108, %r110, %r107;
	mad.lo.s32 	%r1109, %r1108, %r54, %r120;
	mul.wide.s32 	%rd113, %r1109, 4;
	add.s64 	%rd114, %rd5, %rd113;
	ld.global.f32 	%f512, [%rd114];

$L__BB0_63:
	div.rn.f32 	%f101, %f512, %f38;
	div.rn.f32 	%f100, %f511, %f38;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f100;
  cvt.rn.f16.f32 high, %f101;
  mov.b32 %r1112, {low,high};}

	// end inline asm
	add.s32 	%r1113, %r116, %r93;
	shl.b32 	%r1114, %r1113, 2;
	add.s32 	%r1115, %r92, %r1114;
	add.s32 	%r1116, %r1115, 2;
	mul.wide.s32 	%rd117, %r1116, 4;
	add.s64 	%rd118, %rd6, %rd117;
	st.global.u32 	[%rd118], %r1112;
	add.s32 	%r2318, %r2318, %r955;
	setp.lt.s32 	%p99, %r2318, %r924;
	@%p99 bra 	$L__BB0_15;

$L__BB0_64:
	add.s32 	%r2317, %r2317, %r950;
	setp.lt.s32 	%p100, %r2317, %r923;
	@%p100 bra 	$L__BB0_13;

$L__BB0_65:
	ld.param.u64 	%rd119, [%rd1+120];
	cvta.to.global.u64 	%rd11, %rd119;
	@%p35 bra 	$L__BB0_149;

	shl.b32 	%r123, %r77, 1;
	ld.param.f32 	%f102, [%rd1+136];
	rcp.rn.f32 	%f45, %f102;
	mov.u64 	%rd120, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd182, %rd120, 24;
	mov.u32 	%r2319, %r2352;

$L__BB0_67:
	setp.ge.s32 	%p102, %r123, %r924;
	@%p102 bra 	$L__BB0_148;

	mov.u32 	%r2320, %r123;

$L__BB0_69:
	setp.ne.s32 	%p103, %r45, 0;
	@%p103 bra 	$L__BB0_147;

	shr.u32 	%r1118, %r2320, 31;
	add.s32 	%r1119, %r2320, %r1118;
	shr.s32 	%r1120, %r1119, 1;
	mad.lo.s32 	%r1121, %r1120, %r923, %r2319;
	shl.b32 	%r127, %r1121, 5;
	add.s32 	%r128, %r2320, -2;
	mul.lo.s32 	%r129, %r128, %r923;
	add.s32 	%r1122, %r924, %r128;
	mul.lo.s32 	%r130, %r1122, %r923;
	add.s32 	%r1123, %r1122, %r924;
	mul.lo.s32 	%r131, %r1123, %r923;
	add.s32 	%r132, %r129, %r923;
	add.s32 	%r133, %r2320, -1;
	add.s32 	%r1124, %r924, %r133;
	mul.lo.s32 	%r134, %r1124, %r923;
	add.s32 	%r1125, %r1124, %r924;
	mul.lo.s32 	%r135, %r1125, %r923;
	add.s32 	%r1126, %r924, %r2320;
	mul.lo.s32 	%r136, %r1126, %r923;
	add.s32 	%r1127, %r1126, %r924;
	mul.lo.s32 	%r137, %r1127, %r923;
	mul.lo.s32 	%r138, %r2320, %r923;
	add.s32 	%r139, %r138, %r923;
	add.s32 	%r140, %r2320, 1;
	add.s32 	%r1128, %r924, %r140;
	mul.lo.s32 	%r141, %r1128, %r923;
	add.s32 	%r1129, %r1128, %r924;
	mul.lo.s32 	%r142, %r1129, %r923;
	add.s32 	%r143, %r139, %r923;
	add.s32 	%r144, %r2320, 2;
	add.s32 	%r1130, %r924, %r144;
	mul.lo.s32 	%r145, %r1130, %r923;
	add.s32 	%r1131, %r1130, %r924;
	mul.lo.s32 	%r146, %r1131, %r923;
	mov.u32 	%r2323, 0;
	mov.u64 	%rd576, %rd120;

$L__BB0_71:
	ld.global.nc.u32 	%r1132, [%rd576];
	cvt.rn.f64.s32 	%fd1, %r1132;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r148, %r1132, %r2319;
	setp.lt.s32 	%p104, %r148, %r923;
	or.b32  	%r1133, %r128, %r148;
	setp.gt.s32 	%p105, %r1133, -1;
	and.pred  	%p106, %p104, %p105;
	setp.lt.s32 	%p107, %r128, %r924;
	and.pred  	%p14, %p107, %p106;
	cvt.rn.f32.f64 	%f103, %fd3;
	add.f32 	%f104, %f103, 0f3E800000;
	abs.f32 	%f46, %f104;
	add.f32 	%f105, %f46, 0f40200000;
	setp.geu.f32 	%p108, %f105, 0f40000000;
	@%p108 bra 	$L__BB0_76;

	@%p14 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_73;

$L__BB0_74:
	add.s32 	%r1136, %r129, %r148;
	mul.wide.s32 	%rd121, %r1136, 4;
	add.s64 	%rd122, %rd7, %rd121;
	ld.global.f32 	%f109, [%rd122];
	mul.f32 	%f110, %f109, 0f3F000000;
	sub.f32 	%f111, %f45, %f110;
	add.f32 	%f112, %f45, %f110;
	div.rn.f32 	%f108, %f111, %f112;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f108;
  mov.b32 %r2322, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_75;

$L__BB0_73:
	mov.f32 	%f107, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f107;
  cvt.rn.f16.f32 high, %f107;
  mov.b32 %r2322, {low,high};}

	// end inline asm

$L__BB0_75:
	add.s32 	%r1137, %r2323, %r127;
	mul.wide.s32 	%rd123, %r1137, 4;
	add.s64 	%rd124, %rd11, %rd123;
	st.global.u32 	[%rd124], %r2322;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_76:
	cvt.rn.f32.f64 	%f113, %fd1;
	add.f32 	%f114, %f113, 0f3E800000;
	abs.f32 	%f47, %f114;
	add.f32 	%f48, %f47, 0f40000000;
	setp.geu.f32 	%p109, %f48, 0f40000000;
	@%p109 bra 	$L__BB0_81;

	@%p14 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_78;

$L__BB0_79:
	add.s32 	%r1140, %r130, %r148;
	mul.wide.s32 	%rd125, %r1140, 4;
	add.s64 	%rd126, %rd7, %rd125;
	ld.global.f32 	%f118, [%rd126];
	mul.f32 	%f119, %f118, 0f3F000000;
	sub.f32 	%f120, %f45, %f119;
	add.f32 	%f121, %f45, %f119;
	div.rn.f32 	%f117, %f120, %f121;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f117;
  mov.b32 %r2324, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_80;

$L__BB0_78:
	mov.f32 	%f116, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f116;
  cvt.rn.f16.f32 high, %f116;
  mov.b32 %r2324, {low,high};}

	// end inline asm

$L__BB0_80:
	add.s32 	%r1141, %r2323, %r127;
	mul.wide.s32 	%rd127, %r1141, 4;
	add.s64 	%rd128, %rd11, %rd127;
	st.global.u32 	[%rd128], %r2324;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_81:
	add.f32 	%f122, %f47, 0f40200000;
	setp.geu.f32 	%p110, %f122, 0f40000000;
	@%p110 bra 	$L__BB0_86;

	@%p14 bra 	$L__BB0_84;
	bra.uni 	$L__BB0_83;

$L__BB0_84:
	add.s32 	%r1144, %r131, %r148;
	mul.wide.s32 	%rd129, %r1144, 4;
	add.s64 	%rd130, %rd7, %rd129;
	ld.global.f32 	%f126, [%rd130];
	mul.f32 	%f127, %f126, 0f3F000000;
	sub.f32 	%f128, %f45, %f127;
	add.f32 	%f129, %f45, %f127;
	div.rn.f32 	%f125, %f128, %f129;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f125;
  mov.b32 %r2326, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_85;

$L__BB0_83:
	mov.f32 	%f124, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f124;
  cvt.rn.f16.f32 high, %f124;
  mov.b32 %r2326, {low,high};}

	// end inline asm

$L__BB0_85:
	add.s32 	%r1145, %r2323, %r127;
	mul.wide.s32 	%rd131, %r1145, 4;
	add.s64 	%rd132, %rd11, %rd131;
	st.global.u32 	[%rd132], %r2326;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_86:
	or.b32  	%r1146, %r133, %r148;
	setp.gt.s32 	%p111, %r1146, -1;
	and.pred  	%p113, %p104, %p111;
	setp.le.s32 	%p114, %r2320, %r924;
	and.pred  	%p15, %p114, %p113;
	add.f32 	%f49, %f46, 0f3FC00000;
	setp.geu.f32 	%p115, %f49, 0f40000000;
	@%p115 bra 	$L__BB0_91;

	@%p15 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_88;

$L__BB0_89:
	add.s32 	%r1149, %r132, %r148;
	mul.wide.s32 	%rd133, %r1149, 4;
	add.s64 	%rd134, %rd7, %rd133;
	ld.global.f32 	%f133, [%rd134];
	mul.f32 	%f134, %f133, 0f3F000000;
	sub.f32 	%f135, %f45, %f134;
	add.f32 	%f136, %f45, %f134;
	div.rn.f32 	%f132, %f135, %f136;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f132;
  mov.b32 %r2328, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_90;

$L__BB0_88:
	mov.f32 	%f131, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f131;
  cvt.rn.f16.f32 high, %f131;
  mov.b32 %r2328, {low,high};}

	// end inline asm

$L__BB0_90:
	add.s32 	%r1150, %r2323, %r127;
	mul.wide.s32 	%rd135, %r1150, 4;
	add.s64 	%rd136, %rd11, %rd135;
	st.global.u32 	[%rd136], %r2328;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_91:
	add.f32 	%f50, %f47, 0f3F800000;
	setp.geu.f32 	%p116, %f50, 0f40000000;
	@%p116 bra 	$L__BB0_96;

	@%p15 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_93;

$L__BB0_94:
	add.s32 	%r1153, %r134, %r148;
	mul.wide.s32 	%rd137, %r1153, 4;
	add.s64 	%rd138, %rd7, %rd137;
	ld.global.f32 	%f140, [%rd138];
	mul.f32 	%f141, %f140, 0f3F000000;
	sub.f32 	%f142, %f45, %f141;
	add.f32 	%f143, %f45, %f141;
	div.rn.f32 	%f139, %f142, %f143;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f139;
  mov.b32 %r2330, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_95;

$L__BB0_93:
	mov.f32 	%f138, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f138;
  cvt.rn.f16.f32 high, %f138;
  mov.b32 %r2330, {low,high};}

	// end inline asm

$L__BB0_95:
	add.s32 	%r1154, %r2323, %r127;
	mul.wide.s32 	%rd139, %r1154, 4;
	add.s64 	%rd140, %rd11, %rd139;
	st.global.u32 	[%rd140], %r2330;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_96:
	add.f32 	%f51, %f47, 0f3FC00000;
	setp.geu.f32 	%p117, %f51, 0f40000000;
	@%p117 bra 	$L__BB0_101;

	@%p15 bra 	$L__BB0_99;
	bra.uni 	$L__BB0_98;

$L__BB0_99:
	add.s32 	%r1157, %r135, %r148;
	mul.wide.s32 	%rd141, %r1157, 4;
	add.s64 	%rd142, %rd7, %rd141;
	ld.global.f32 	%f147, [%rd142];
	mul.f32 	%f148, %f147, 0f3F000000;
	sub.f32 	%f149, %f45, %f148;
	add.f32 	%f150, %f45, %f148;
	div.rn.f32 	%f146, %f149, %f150;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f146;
  mov.b32 %r2332, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_100;

$L__BB0_98:
	mov.f32 	%f145, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f145;
  cvt.rn.f16.f32 high, %f145;
  mov.b32 %r2332, {low,high};}

	// end inline asm

$L__BB0_100:
	add.s32 	%r1158, %r2323, %r127;
	mul.wide.s32 	%rd143, %r1158, 4;
	add.s64 	%rd144, %rd11, %rd143;
	st.global.u32 	[%rd144], %r2332;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_101:
	or.b32  	%r1159, %r2320, %r148;
	setp.gt.s32 	%p118, %r1159, -1;
	and.pred  	%p120, %p104, %p118;
	setp.lt.s32 	%p121, %r2320, %r924;
	and.pred  	%p16, %p121, %p120;
	add.f32 	%f52, %f46, 0f3F000000;
	setp.geu.f32 	%p122, %f52, 0f40000000;
	@%p122 bra 	$L__BB0_106;

	@%p16 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_103;

$L__BB0_104:
	add.s32 	%r1162, %r138, %r148;
	mul.wide.s32 	%rd145, %r1162, 4;
	add.s64 	%rd146, %rd7, %rd145;
	ld.global.f32 	%f154, [%rd146];
	mul.f32 	%f155, %f154, 0f3F000000;
	sub.f32 	%f156, %f45, %f155;
	add.f32 	%f157, %f45, %f155;
	div.rn.f32 	%f153, %f156, %f157;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f153;
  mov.b32 %r2334, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_105;

$L__BB0_103:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f152;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r2334, {low,high};}

	// end inline asm

$L__BB0_105:
	add.s32 	%r1163, %r2323, %r127;
	mul.wide.s32 	%rd147, %r1163, 4;
	add.s64 	%rd148, %rd11, %rd147;
	st.global.u32 	[%rd148], %r2334;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_106:
	add.f32 	%f158, %f47, 0f00000000;
	setp.geu.f32 	%p123, %f158, 0f40000000;
	@%p123 bra 	$L__BB0_111;

	@%p16 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_108;

$L__BB0_109:
	add.s32 	%r1166, %r136, %r148;
	mul.wide.s32 	%rd149, %r1166, 4;
	add.s64 	%rd150, %rd7, %rd149;
	ld.global.f32 	%f162, [%rd150];
	mul.f32 	%f163, %f162, 0f3F000000;
	sub.f32 	%f164, %f45, %f163;
	add.f32 	%f165, %f45, %f163;
	div.rn.f32 	%f161, %f164, %f165;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f161;
  mov.b32 %r2336, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_110;

$L__BB0_108:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f160;
  mov.b32 %r2336, {low,high};}

	// end inline asm

$L__BB0_110:
	add.s32 	%r1167, %r2323, %r127;
	mul.wide.s32 	%rd151, %r1167, 4;
	add.s64 	%rd152, %rd11, %rd151;
	st.global.u32 	[%rd152], %r2336;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_111:
	add.f32 	%f53, %f47, 0f3F000000;
	setp.geu.f32 	%p124, %f53, 0f40000000;
	@%p124 bra 	$L__BB0_116;

	@%p16 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_113;

$L__BB0_114:
	add.s32 	%r1170, %r137, %r148;
	mul.wide.s32 	%rd153, %r1170, 4;
	add.s64 	%rd154, %rd7, %rd153;
	ld.global.f32 	%f169, [%rd154];
	mul.f32 	%f170, %f169, 0f3F000000;
	sub.f32 	%f171, %f45, %f170;
	add.f32 	%f172, %f45, %f170;
	div.rn.f32 	%f168, %f171, %f172;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f168;
  mov.b32 %r2338, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_115;

$L__BB0_113:
	mov.f32 	%f167, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f167;
  cvt.rn.f16.f32 high, %f167;
  mov.b32 %r2338, {low,high};}

	// end inline asm

$L__BB0_115:
	add.s32 	%r1171, %r2323, %r127;
	mul.wide.s32 	%rd155, %r1171, 4;
	add.s64 	%rd156, %rd11, %rd155;
	st.global.u32 	[%rd156], %r2338;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_116:
	or.b32  	%r1172, %r140, %r148;
	setp.gt.s32 	%p125, %r1172, -1;
	and.pred  	%p127, %p104, %p125;
	setp.lt.s32 	%p128, %r140, %r924;
	and.pred  	%p17, %p128, %p127;
	@%p122 bra 	$L__BB0_121;

	@%p17 bra 	$L__BB0_119;
	bra.uni 	$L__BB0_118;

$L__BB0_119:
	add.s32 	%r1175, %r139, %r148;
	mul.wide.s32 	%rd157, %r1175, 4;
	add.s64 	%rd158, %rd7, %rd157;
	ld.global.f32 	%f176, [%rd158];
	mul.f32 	%f177, %f176, 0f3F000000;
	sub.f32 	%f178, %f45, %f177;
	add.f32 	%f179, %f45, %f177;
	div.rn.f32 	%f175, %f178, %f179;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f175;
  mov.b32 %r2340, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_120;

$L__BB0_118:
	mov.f32 	%f174, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f174;
  cvt.rn.f16.f32 high, %f174;
  mov.b32 %r2340, {low,high};}

	// end inline asm

$L__BB0_120:
	add.s32 	%r1176, %r2323, %r127;
	mul.wide.s32 	%rd159, %r1176, 4;
	add.s64 	%rd160, %rd11, %rd159;
	st.global.u32 	[%rd160], %r2340;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_121:
	@%p116 bra 	$L__BB0_126;

	@%p17 bra 	$L__BB0_124;
	bra.uni 	$L__BB0_123;

$L__BB0_124:
	add.s32 	%r1179, %r141, %r148;
	mul.wide.s32 	%rd161, %r1179, 4;
	add.s64 	%rd162, %rd7, %rd161;
	ld.global.f32 	%f183, [%rd162];
	mul.f32 	%f184, %f183, 0f3F000000;
	sub.f32 	%f185, %f45, %f184;
	add.f32 	%f186, %f45, %f184;
	div.rn.f32 	%f182, %f185, %f186;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f182;
  mov.b32 %r2342, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_125;

$L__BB0_123:
	mov.f32 	%f181, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f181;
  cvt.rn.f16.f32 high, %f181;
  mov.b32 %r2342, {low,high};}

	// end inline asm

$L__BB0_125:
	add.s32 	%r1180, %r2323, %r127;
	mul.wide.s32 	%rd163, %r1180, 4;
	add.s64 	%rd164, %rd11, %rd163;
	st.global.u32 	[%rd164], %r2342;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_126:
	@%p124 bra 	$L__BB0_131;

	@%p17 bra 	$L__BB0_129;
	bra.uni 	$L__BB0_128;

$L__BB0_129:
	add.s32 	%r1183, %r142, %r148;
	mul.wide.s32 	%rd165, %r1183, 4;
	add.s64 	%rd166, %rd7, %rd165;
	ld.global.f32 	%f190, [%rd166];
	mul.f32 	%f191, %f190, 0f3F000000;
	sub.f32 	%f192, %f45, %f191;
	add.f32 	%f193, %f45, %f191;
	div.rn.f32 	%f189, %f192, %f193;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f189;
  mov.b32 %r2344, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_130;

$L__BB0_128:
	mov.f32 	%f188, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f188;
  cvt.rn.f16.f32 high, %f188;
  mov.b32 %r2344, {low,high};}

	// end inline asm

$L__BB0_130:
	add.s32 	%r1184, %r2323, %r127;
	mul.wide.s32 	%rd167, %r1184, 4;
	add.s64 	%rd168, %rd11, %rd167;
	st.global.u32 	[%rd168], %r2344;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_131:
	or.b32  	%r1185, %r144, %r148;
	setp.gt.s32 	%p132, %r1185, -1;
	and.pred  	%p134, %p104, %p132;
	setp.lt.s32 	%p135, %r144, %r924;
	and.pred  	%p18, %p135, %p134;
	@%p115 bra 	$L__BB0_136;

	@%p18 bra 	$L__BB0_134;
	bra.uni 	$L__BB0_133;

$L__BB0_134:
	add.s32 	%r1188, %r143, %r148;
	mul.wide.s32 	%rd169, %r1188, 4;
	add.s64 	%rd170, %rd7, %rd169;
	ld.global.f32 	%f197, [%rd170];
	mul.f32 	%f198, %f197, 0f3F000000;
	sub.f32 	%f199, %f45, %f198;
	add.f32 	%f200, %f45, %f198;
	div.rn.f32 	%f196, %f199, %f200;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f196;
  mov.b32 %r2346, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_135;

$L__BB0_133:
	mov.f32 	%f195, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f195;
  cvt.rn.f16.f32 high, %f195;
  mov.b32 %r2346, {low,high};}

	// end inline asm

$L__BB0_135:
	add.s32 	%r1189, %r2323, %r127;
	mul.wide.s32 	%rd171, %r1189, 4;
	add.s64 	%rd172, %rd11, %rd171;
	st.global.u32 	[%rd172], %r2346;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_136:
	@%p109 bra 	$L__BB0_141;

	@%p18 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_138;

$L__BB0_139:
	add.s32 	%r1192, %r145, %r148;
	mul.wide.s32 	%rd173, %r1192, 4;
	add.s64 	%rd174, %rd7, %rd173;
	ld.global.f32 	%f204, [%rd174];
	mul.f32 	%f205, %f204, 0f3F000000;
	sub.f32 	%f206, %f45, %f205;
	add.f32 	%f207, %f45, %f205;
	div.rn.f32 	%f203, %f206, %f207;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f203;
  mov.b32 %r2348, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_140;

$L__BB0_138:
	mov.f32 	%f202, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f202;
  cvt.rn.f16.f32 high, %f202;
  mov.b32 %r2348, {low,high};}

	// end inline asm

$L__BB0_140:
	add.s32 	%r1193, %r2323, %r127;
	mul.wide.s32 	%rd175, %r1193, 4;
	add.s64 	%rd176, %rd11, %rd175;
	st.global.u32 	[%rd176], %r2348;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_141:
	@%p117 bra 	$L__BB0_146;

	@%p18 bra 	$L__BB0_144;
	bra.uni 	$L__BB0_143;

$L__BB0_144:
	add.s32 	%r1196, %r146, %r148;
	mul.wide.s32 	%rd177, %r1196, 4;
	add.s64 	%rd178, %rd7, %rd177;
	ld.global.f32 	%f211, [%rd178];
	mul.f32 	%f212, %f211, 0f3F000000;
	sub.f32 	%f213, %f45, %f212;
	add.f32 	%f214, %f45, %f212;
	div.rn.f32 	%f210, %f213, %f214;
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f210;
  mov.b32 %r2350, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_145;

$L__BB0_143:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r2350, {low,high};}

	// end inline asm

$L__BB0_145:
	add.s32 	%r1197, %r2323, %r127;
	mul.wide.s32 	%rd179, %r1197, 4;
	add.s64 	%rd180, %rd11, %rd179;
	st.global.u32 	[%rd180], %r2350;
	add.s32 	%r2323, %r2323, 1;

$L__BB0_146:
	add.s64 	%rd576, %rd576, 4;
	setp.ne.s64 	%p139, %rd576, %rd182;
	@%p139 bra 	$L__BB0_71;

$L__BB0_147:
	add.s32 	%r2320, %r2320, %r47;
	setp.lt.s32 	%p140, %r2320, %r924;
	@%p140 bra 	$L__BB0_69;

$L__BB0_148:
	add.s32 	%r2319, %r2319, %r950;
	setp.lt.s32 	%p141, %r2319, %r923;
	@%p141 bra 	$L__BB0_67;

$L__BB0_149:
	setp.eq.s32 	%p142, %r927, 1;
	ld.param.u64 	%rd183, [%rd1+160];
	cvta.to.global.u64 	%rd14, %rd183;
	ld.param.u64 	%rd184, [%rd1+128];
	cvta.to.global.u64 	%rd15, %rd184;
	@%p142 bra 	$L__BB0_167;
	bra.uni 	$L__BB0_150;

$L__BB0_167:
	@%p35 bra 	$L__BB0_296;

	shl.b32 	%r252, %r77, 1;
	shr.u32 	%r1245, %r928, 31;
	add.s32 	%r1246, %r928, %r1245;
	shr.u32 	%r1247, %r1246, 1;
	and.b32  	%r253, %r1247, 1;
	mov.u64 	%rd204, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;

$L__BB0_169:
	setp.ge.s32 	%p152, %r252, %r924;
	@%p152 bra 	$L__BB0_295;

	mov.u32 	%r2358, %r252;

$L__BB0_171:
	setp.ne.s32 	%p153, %r45, 0;
	@%p153 bra 	$L__BB0_294;

	shr.u32 	%r1249, %r2358, 31;
	add.s32 	%r1250, %r2358, %r1249;
	shr.s32 	%r1251, %r1250, 1;
	mad.lo.s32 	%r1252, %r1251, %r923, %r2352;
	shl.b32 	%r257, %r1252, 5;
	add.s32 	%r258, %r2358, -2;
	mul.lo.s32 	%r259, %r258, %r923;
	add.s32 	%r1253, %r924, %r258;
	mul.lo.s32 	%r260, %r1253, %r923;
	add.s32 	%r261, %r259, %r923;
	add.s32 	%r262, %r2358, -1;
	add.s32 	%r1254, %r924, %r262;
	mul.lo.s32 	%r263, %r1254, %r923;
	add.s32 	%r1255, %r924, %r2358;
	mul.lo.s32 	%r264, %r1255, %r923;
	mul.lo.s32 	%r265, %r2358, %r923;
	add.s32 	%r266, %r265, %r923;
	add.s32 	%r267, %r2358, 1;
	add.s32 	%r1256, %r924, %r267;
	mul.lo.s32 	%r268, %r1256, %r923;
	add.s32 	%r269, %r266, %r923;
	add.s32 	%r270, %r2358, 2;
	add.s32 	%r1257, %r924, %r270;
	mul.lo.s32 	%r271, %r1257, %r923;
	mov.u32 	%r2362, 0;
	mov.u64 	%rd577, 24;
	mov.u64 	%rd578, %rd204;

$L__BB0_173:
	ld.global.nc.u32 	%r1258, [%rd578];
	cvt.rn.f64.s32 	%fd2, %r1258;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r273, %r1258, %r2352;
	setp.lt.s32 	%p154, %r273, %r923;
	or.b32  	%r1259, %r258, %r273;
	setp.gt.s32 	%p155, %r1259, -1;
	and.pred  	%p156, %p154, %p155;
	setp.lt.s32 	%p157, %r258, %r924;
	and.pred  	%p19, %p157, %p156;
	cvt.rn.f32.f64 	%f231, %fd4;
	add.f32 	%f232, %f231, 0f3E800000;
	abs.f32 	%f54, %f232;
	add.f32 	%f233, %f54, 0f40200000;
	setp.geu.f32 	%p158, %f233, 0f40000000;
	@%p158 bra 	$L__BB0_185;

	@%p19 bra 	$L__BB0_176;
	bra.uni 	$L__BB0_175;

$L__BB0_176:
	setp.eq.s32 	%p159, %r253, 0;
	add.s32 	%r1261, %r259, %r273;
	shl.b32 	%r1262, %r1261, 1;
	mul.wide.s32 	%rd205, %r1262, 4;
	add.s64 	%rd206, %rd14, %rd205;
	ld.global.f32 	%f55, [%rd206];
	@%p159 bra 	$L__BB0_178;
	bra.uni 	$L__BB0_177;

$L__BB0_178:
	mov.f32 	%f239, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f239;
  mov.b32 %r2360, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_179;

$L__BB0_175:
	mov.f32 	%f235, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f235;
  cvt.rn.f16.f32 high, %f235;
  mov.b32 %r2360, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_179;

$L__BB0_177:
	mov.f32 	%f236, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f236;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r2360, {low,high};}

	// end inline asm

$L__BB0_179:
	add.s32 	%r278, %r2362, %r257;
	mul.wide.s32 	%rd207, %r278, 4;
	add.s64 	%rd208, %rd15, %rd207;
	st.global.u32 	[%rd208], %r2360;
	@%p19 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_180;

$L__BB0_181:
	setp.eq.s32 	%p160, %r253, 0;
	add.s32 	%r1266, %r260, %r273;
	shl.b32 	%r1267, %r1266, 1;
	mul.wide.s32 	%rd209, %r1267, 4;
	add.s64 	%rd210, %rd14, %rd209;
	ld.global.f32 	%f56, [%rd210];
	@%p160 bra 	$L__BB0_183;
	bra.uni 	$L__BB0_182;

$L__BB0_183:
	mov.f32 	%f245, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f56;
  cvt.rn.f16.f32 high, %f245;
  mov.b32 %r2361, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_184;

$L__BB0_180:
	mov.f32 	%f241, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f241;
  cvt.rn.f16.f32 high, %f241;
  mov.b32 %r2361, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_184;

$L__BB0_182:
	mov.f32 	%f242, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f242;
  cvt.rn.f16.f32 high, %f56;
  mov.b32 %r2361, {low,high};}

	// end inline asm

$L__BB0_184:
	add.s32 	%r1270, %r278, 1;
	mul.wide.s32 	%rd211, %r1270, 4;
	add.s64 	%rd212, %rd15, %rd211;
	st.global.u32 	[%rd212], %r2361;
	add.s32 	%r2362, %r2362, 2;

$L__BB0_185:
	cvt.rn.f32.f64 	%f246, %fd2;
	add.f32 	%f247, %f246, 0f3E800000;
	abs.f32 	%f57, %f247;
	add.f32 	%f58, %f57, 0f40000000;
	setp.geu.f32 	%p161, %f58, 0f40000000;
	@%p161 bra 	$L__BB0_197;

	@%p19 bra 	$L__BB0_188;
	bra.uni 	$L__BB0_187;

$L__BB0_188:
	setp.eq.s32 	%p162, %r253, 0;
	add.s32 	%r1272, %r259, %r273;
	shl.b32 	%r1273, %r1272, 1;
	or.b32  	%r1274, %r1273, 1;
	mul.wide.s32 	%rd213, %r1274, 4;
	add.s64 	%rd214, %rd14, %rd213;
	ld.global.f32 	%f59, [%rd214];
	@%p162 bra 	$L__BB0_190;
	bra.uni 	$L__BB0_189;

$L__BB0_190:
	mov.f32 	%f253, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f59;
  cvt.rn.f16.f32 high, %f253;
  mov.b32 %r2363, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_191;

$L__BB0_187:
	mov.f32 	%f249, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f249;
  cvt.rn.f16.f32 high, %f249;
  mov.b32 %r2363, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_191;

$L__BB0_189:
	mov.f32 	%f250, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f250;
  cvt.rn.f16.f32 high, %f59;
  mov.b32 %r2363, {low,high};}

	// end inline asm

$L__BB0_191:
	add.s32 	%r289, %r2362, %r257;
	mul.wide.s32 	%rd215, %r289, 4;
	add.s64 	%rd216, %rd15, %rd215;
	st.global.u32 	[%rd216], %r2363;
	@%p19 bra 	$L__BB0_193;
	bra.uni 	$L__BB0_192;

$L__BB0_193:
	setp.eq.s32 	%p163, %r253, 0;
	add.s32 	%r1278, %r260, %r273;
	shl.b32 	%r1279, %r1278, 1;
	or.b32  	%r1280, %r1279, 1;
	mul.wide.s32 	%rd217, %r1280, 4;
	add.s64 	%rd218, %rd14, %rd217;
	ld.global.f32 	%f60, [%rd218];
	@%p163 bra 	$L__BB0_195;
	bra.uni 	$L__BB0_194;

$L__BB0_195:
	mov.f32 	%f259, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f60;
  cvt.rn.f16.f32 high, %f259;
  mov.b32 %r2364, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_196;

$L__BB0_192:
	mov.f32 	%f255, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f255;
  cvt.rn.f16.f32 high, %f255;
  mov.b32 %r2364, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_196;

$L__BB0_194:
	mov.f32 	%f256, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f256;
  cvt.rn.f16.f32 high, %f60;
  mov.b32 %r2364, {low,high};}

	// end inline asm

$L__BB0_196:
	add.s32 	%r1283, %r289, 1;
	mul.wide.s32 	%rd219, %r1283, 4;
	add.s64 	%rd220, %rd15, %rd219;
	st.global.u32 	[%rd220], %r2364;
	add.s32 	%r2362, %r2362, 2;

$L__BB0_197:
	or.b32  	%r1284, %r262, %r273;
	setp.gt.s32 	%p164, %r1284, -1;
	and.pred  	%p166, %p154, %p164;
	setp.le.s32 	%p167, %r2358, %r924;
	and.pred  	%p20, %p167, %p166;
	add.f32 	%f61, %f54, 0f3FC00000;
	setp.geu.f32 	%p168, %f61, 0f40000000;
	@%p168 bra 	$L__BB0_209;

	@%p20 bra 	$L__BB0_200;
	bra.uni 	$L__BB0_199;

$L__BB0_200:
	setp.eq.s32 	%p169, %r253, 0;
	add.s32 	%r1286, %r261, %r273;
	shl.b32 	%r1287, %r1286, 1;
	mul.wide.s32 	%rd221, %r1287, 4;
	add.s64 	%rd222, %rd14, %rd221;
	ld.global.f32 	%f62, [%rd222];
	@%p169 bra 	$L__BB0_202;
	bra.uni 	$L__BB0_201;

$L__BB0_202:
	mov.f32 	%f265, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f62;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r2366, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_203;

$L__BB0_199:
	mov.f32 	%f261, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f261;
  cvt.rn.f16.f32 high, %f261;
  mov.b32 %r2366, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_203;

$L__BB0_201:
	mov.f32 	%f262, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f262;
  cvt.rn.f16.f32 high, %f62;
  mov.b32 %r2366, {low,high};}

	// end inline asm

$L__BB0_203:
	add.s32 	%r300, %r2362, %r257;
	mul.wide.s32 	%rd223, %r300, 4;
	add.s64 	%rd224, %rd15, %rd223;
	st.global.u32 	[%rd224], %r2366;
	@%p20 bra 	$L__BB0_205;
	bra.uni 	$L__BB0_204;

$L__BB0_205:
	setp.eq.s32 	%p170, %r253, 0;
	add.s32 	%r1291, %r263, %r273;
	shl.b32 	%r1292, %r1291, 1;
	mul.wide.s32 	%rd225, %r1292, 4;
	add.s64 	%rd226, %rd14, %rd225;
	ld.global.f32 	%f63, [%rd226];
	@%p170 bra 	$L__BB0_207;
	bra.uni 	$L__BB0_206;

$L__BB0_207:
	mov.f32 	%f271, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f63;
  cvt.rn.f16.f32 high, %f271;
  mov.b32 %r2367, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_208;

$L__BB0_204:
	mov.f32 	%f267, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f267;
  cvt.rn.f16.f32 high, %f267;
  mov.b32 %r2367, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_208;

$L__BB0_206:
	mov.f32 	%f268, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f268;
  cvt.rn.f16.f32 high, %f63;
  mov.b32 %r2367, {low,high};}

	// end inline asm

$L__BB0_208:
	add.s32 	%r1295, %r300, 1;
	mul.wide.s32 	%rd227, %r1295, 4;
	add.s64 	%rd228, %rd15, %rd227;
	st.global.u32 	[%rd228], %r2367;
	add.s32 	%r2362, %r2362, 2;

$L__BB0_209:
	add.f32 	%f64, %f57, 0f3F800000;
	setp.geu.f32 	%p171, %f64, 0f40000000;
	@%p171 bra 	$L__BB0_221;

	@%p20 bra 	$L__BB0_212;
	bra.uni 	$L__BB0_211;

$L__BB0_212:
	setp.eq.s32 	%p172, %r253, 0;
	add.s32 	%r1297, %r261, %r273;
	shl.b32 	%r1298, %r1297, 1;
	or.b32  	%r1299, %r1298, 1;
	mul.wide.s32 	%rd229, %r1299, 4;
	add.s64 	%rd230, %rd14, %rd229;
	ld.global.f32 	%f65, [%rd230];
	@%p172 bra 	$L__BB0_214;
	bra.uni 	$L__BB0_213;

$L__BB0_214:
	mov.f32 	%f277, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f65;
  cvt.rn.f16.f32 high, %f277;
  mov.b32 %r2369, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_215;

$L__BB0_211:
	mov.f32 	%f273, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f273;
  cvt.rn.f16.f32 high, %f273;
  mov.b32 %r2369, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_215;

$L__BB0_213:
	mov.f32 	%f274, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f274;
  cvt.rn.f16.f32 high, %f65;
  mov.b32 %r2369, {low,high};}

	// end inline asm

$L__BB0_215:
	add.s32 	%r311, %r2362, %r257;
	mul.wide.s32 	%rd231, %r311, 4;
	add.s64 	%rd232, %rd15, %rd231;
	st.global.u32 	[%rd232], %r2369;
	@%p20 bra 	$L__BB0_217;
	bra.uni 	$L__BB0_216;

$L__BB0_217:
	setp.eq.s32 	%p173, %r253, 0;
	add.s32 	%r1303, %r263, %r273;
	shl.b32 	%r1304, %r1303, 1;
	or.b32  	%r1305, %r1304, 1;
	mul.wide.s32 	%rd233, %r1305, 4;
	add.s64 	%rd234, %rd14, %rd233;
	ld.global.f32 	%f66, [%rd234];
	@%p173 bra 	$L__BB0_219;
	bra.uni 	$L__BB0_218;

$L__BB0_219:
	mov.f32 	%f283, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f66;
  cvt.rn.f16.f32 high, %f283;
  mov.b32 %r2370, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_220;

$L__BB0_216:
	mov.f32 	%f279, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f279;
  cvt.rn.f16.f32 high, %f279;
  mov.b32 %r2370, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_220;

$L__BB0_218:
	mov.f32 	%f280, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f280;
  cvt.rn.f16.f32 high, %f66;
  mov.b32 %r2370, {low,high};}

	// end inline asm

$L__BB0_220:
	add.s32 	%r1308, %r311, 1;
	mul.wide.s32 	%rd235, %r1308, 4;
	add.s64 	%rd236, %rd15, %rd235;
	st.global.u32 	[%rd236], %r2370;
	add.s32 	%r2362, %r2362, 2;

$L__BB0_221:
	or.b32  	%r1309, %r2358, %r273;
	setp.gt.s32 	%p174, %r1309, -1;
	and.pred  	%p176, %p154, %p174;
	setp.lt.s32 	%p177, %r2358, %r924;
	and.pred  	%p21, %p177, %p176;
	add.f32 	%f67, %f54, 0f3F000000;
	setp.geu.f32 	%p178, %f67, 0f40000000;
	@%p178 bra 	$L__BB0_233;

	@%p21 bra 	$L__BB0_224;
	bra.uni 	$L__BB0_223;

$L__BB0_224:
	setp.eq.s32 	%p179, %r253, 0;
	add.s32 	%r1311, %r265, %r273;
	shl.b32 	%r1312, %r1311, 1;
	mul.wide.s32 	%rd237, %r1312, 4;
	add.s64 	%rd238, %rd14, %rd237;
	ld.global.f32 	%f68, [%rd238];
	@%p179 bra 	$L__BB0_226;
	bra.uni 	$L__BB0_225;

$L__BB0_226:
	mov.f32 	%f289, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f68;
  cvt.rn.f16.f32 high, %f289;
  mov.b32 %r2372, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_227;

$L__BB0_223:
	mov.f32 	%f285, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f285;
  cvt.rn.f16.f32 high, %f285;
  mov.b32 %r2372, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_227;

$L__BB0_225:
	mov.f32 	%f286, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f286;
  cvt.rn.f16.f32 high, %f68;
  mov.b32 %r2372, {low,high};}

	// end inline asm

$L__BB0_227:
	add.s32 	%r322, %r2362, %r257;
	mul.wide.s32 	%rd239, %r322, 4;
	add.s64 	%rd240, %rd15, %rd239;
	st.global.u32 	[%rd240], %r2372;
	@%p21 bra 	$L__BB0_229;
	bra.uni 	$L__BB0_228;

$L__BB0_229:
	setp.eq.s32 	%p180, %r253, 0;
	add.s32 	%r1316, %r264, %r273;
	shl.b32 	%r1317, %r1316, 1;
	mul.wide.s32 	%rd241, %r1317, 4;
	add.s64 	%rd242, %rd14, %rd241;
	ld.global.f32 	%f69, [%rd242];
	@%p180 bra 	$L__BB0_231;
	bra.uni 	$L__BB0_230;

$L__BB0_231:
	mov.f32 	%f295, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f69;
  cvt.rn.f16.f32 high, %f295;
  mov.b32 %r2373, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_232;

$L__BB0_228:
	mov.f32 	%f291, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f291;
  cvt.rn.f16.f32 high, %f291;
  mov.b32 %r2373, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_232;

$L__BB0_230:
	mov.f32 	%f292, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f292;
  cvt.rn.f16.f32 high, %f69;
  mov.b32 %r2373, {low,high};}

	// end inline asm

$L__BB0_232:
	add.s32 	%r1320, %r322, 1;
	mul.wide.s32 	%rd243, %r1320, 4;
	add.s64 	%rd244, %rd15, %rd243;
	st.global.u32 	[%rd244], %r2373;
	add.s32 	%r2362, %r2362, 2;

$L__BB0_233:
	add.f32 	%f296, %f57, 0f00000000;
	setp.geu.f32 	%p181, %f296, 0f40000000;
	@%p181 bra 	$L__BB0_245;

	@%p21 bra 	$L__BB0_236;
	bra.uni 	$L__BB0_235;

$L__BB0_236:
	setp.eq.s32 	%p182, %r253, 0;
	add.s32 	%r1322, %r265, %r273;
	shl.b32 	%r1323, %r1322, 1;
	or.b32  	%r1324, %r1323, 1;
	mul.wide.s32 	%rd245, %r1324, 4;
	add.s64 	%rd246, %rd14, %rd245;
	ld.global.f32 	%f70, [%rd246];
	@%p182 bra 	$L__BB0_238;
	bra.uni 	$L__BB0_237;

$L__BB0_238:
	mov.f32 	%f302, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f70;
  cvt.rn.f16.f32 high, %f302;
  mov.b32 %r2375, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_239;

$L__BB0_235:
	mov.f32 	%f298, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f298;
  cvt.rn.f16.f32 high, %f298;
  mov.b32 %r2375, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_239;

$L__BB0_237:
	mov.f32 	%f299, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f299;
  cvt.rn.f16.f32 high, %f70;
  mov.b32 %r2375, {low,high};}

	// end inline asm

$L__BB0_239:
	add.s32 	%r333, %r2362, %r257;
	mul.wide.s32 	%rd247, %r333, 4;
	add.s64 	%rd248, %rd15, %rd247;
	st.global.u32 	[%rd248], %r2375;
	@%p21 bra 	$L__BB0_241;
	bra.uni 	$L__BB0_240;

$L__BB0_241:
	setp.eq.s32 	%p183, %r253, 0;
	add.s32 	%r1328, %r264, %r273;
	shl.b32 	%r1329, %r1328, 1;
	or.b32  	%r1330, %r1329, 1;
	mul.wide.s32 	%rd249, %r1330, 4;
	add.s64 	%rd250, %rd14, %rd249;
	ld.global.f32 	%f71, [%rd250];
	@%p183 bra 	$L__BB0_243;
	bra.uni 	$L__BB0_242;

$L__BB0_243:
	mov.f32 	%f308, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f71;
  cvt.rn.f16.f32 high, %f308;
  mov.b32 %r2376, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_244;

$L__BB0_240:
	mov.f32 	%f304, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f304;
  cvt.rn.f16.f32 high, %f304;
  mov.b32 %r2376, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_244;

$L__BB0_242:
	mov.f32 	%f305, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f305;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r2376, {low,high};}

	// end inline asm

$L__BB0_244:
	add.s32 	%r1333, %r333, 1;
	mul.wide.s32 	%rd251, %r1333, 4;
	add.s64 	%rd252, %rd15, %rd251;
	st.global.u32 	[%rd252], %r2376;
	add.s32 	%r2362, %r2362, 2;

$L__BB0_245:
	or.b32  	%r1334, %r267, %r273;
	setp.gt.s32 	%p184, %r1334, -1;
	and.pred  	%p186, %p154, %p184;
	setp.lt.s32 	%p187, %r267, %r924;
	and.pred  	%p22, %p187, %p186;
	@%p178 bra 	$L__BB0_257;

	@%p22 bra 	$L__BB0_248;
	bra.uni 	$L__BB0_247;

$L__BB0_248:
	setp.eq.s32 	%p189, %r253, 0;
	add.s32 	%r1336, %r266, %r273;
	shl.b32 	%r1337, %r1336, 1;
	mul.wide.s32 	%rd253, %r1337, 4;
	add.s64 	%rd254, %rd14, %rd253;
	ld.global.f32 	%f72, [%rd254];
	@%p189 bra 	$L__BB0_250;
	bra.uni 	$L__BB0_249;

$L__BB0_250:
	mov.f32 	%f314, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f72;
  cvt.rn.f16.f32 high, %f314;
  mov.b32 %r2378, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_251;

$L__BB0_247:
	mov.f32 	%f310, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f310;
  cvt.rn.f16.f32 high, %f310;
  mov.b32 %r2378, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_251;

$L__BB0_249:
	mov.f32 	%f311, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f311;
  cvt.rn.f16.f32 high, %f72;
  mov.b32 %r2378, {low,high};}

	// end inline asm

$L__BB0_251:
	add.s32 	%r344, %r2362, %r257;
	mul.wide.s32 	%rd255, %r344, 4;
	add.s64 	%rd256, %rd15, %rd255;
	st.global.u32 	[%rd256], %r2378;
	@%p22 bra 	$L__BB0_253;
	bra.uni 	$L__BB0_252;

$L__BB0_253:
	setp.eq.s32 	%p190, %r253, 0;
	add.s32 	%r1341, %r268, %r273;
	shl.b32 	%r1342, %r1341, 1;
	mul.wide.s32 	%rd257, %r1342, 4;
	add.s64 	%rd258, %rd14, %rd257;
	ld.global.f32 	%f73, [%rd258];
	@%p190 bra 	$L__BB0_255;
	bra.uni 	$L__BB0_254;

$L__BB0_255:
	mov.f32 	%f320, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f73;
  cvt.rn.f16.f32 high, %f320;
  mov.b32 %r2379, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_256;

$L__BB0_252:
	mov.f32 	%f316, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f316;
  cvt.rn.f16.f32 high, %f316;
  mov.b32 %r2379, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_256;

$L__BB0_254:
	mov.f32 	%f317, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f317;
  cvt.rn.f16.f32 high, %f73;
  mov.b32 %r2379, {low,high};}

	// end inline asm

$L__BB0_256:
	add.s32 	%r1345, %r344, 1;
	mul.wide.s32 	%rd259, %r1345, 4;
	add.s64 	%rd260, %rd15, %rd259;
	st.global.u32 	[%rd260], %r2379;
	add.s32 	%r2362, %r2362, 2;

$L__BB0_257:
	@%p171 bra 	$L__BB0_269;

	@%p22 bra 	$L__BB0_260;
	bra.uni 	$L__BB0_259;

$L__BB0_260:
	setp.eq.s32 	%p192, %r253, 0;
	add.s32 	%r1347, %r266, %r273;
	shl.b32 	%r1348, %r1347, 1;
	or.b32  	%r1349, %r1348, 1;
	mul.wide.s32 	%rd261, %r1349, 4;
	add.s64 	%rd262, %rd14, %rd261;
	ld.global.f32 	%f74, [%rd262];
	@%p192 bra 	$L__BB0_262;
	bra.uni 	$L__BB0_261;

$L__BB0_262:
	mov.f32 	%f326, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f74;
  cvt.rn.f16.f32 high, %f326;
  mov.b32 %r2381, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_263;

$L__BB0_259:
	mov.f32 	%f322, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f322;
  cvt.rn.f16.f32 high, %f322;
  mov.b32 %r2381, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_263;

$L__BB0_261:
	mov.f32 	%f323, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f323;
  cvt.rn.f16.f32 high, %f74;
  mov.b32 %r2381, {low,high};}

	// end inline asm

$L__BB0_263:
	add.s32 	%r355, %r2362, %r257;
	mul.wide.s32 	%rd263, %r355, 4;
	add.s64 	%rd264, %rd15, %rd263;
	st.global.u32 	[%rd264], %r2381;
	@%p22 bra 	$L__BB0_265;
	bra.uni 	$L__BB0_264;

$L__BB0_265:
	setp.eq.s32 	%p193, %r253, 0;
	add.s32 	%r1353, %r268, %r273;
	shl.b32 	%r1354, %r1353, 1;
	or.b32  	%r1355, %r1354, 1;
	mul.wide.s32 	%rd265, %r1355, 4;
	add.s64 	%rd266, %rd14, %rd265;
	ld.global.f32 	%f75, [%rd266];
	@%p193 bra 	$L__BB0_267;
	bra.uni 	$L__BB0_266;

$L__BB0_267:
	mov.f32 	%f332, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f75;
  cvt.rn.f16.f32 high, %f332;
  mov.b32 %r2382, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_268;

$L__BB0_264:
	mov.f32 	%f328, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f328;
  cvt.rn.f16.f32 high, %f328;
  mov.b32 %r2382, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_268;

$L__BB0_266:
	mov.f32 	%f329, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f329;
  cvt.rn.f16.f32 high, %f75;
  mov.b32 %r2382, {low,high};}

	// end inline asm

$L__BB0_268:
	add.s32 	%r1358, %r355, 1;
	mul.wide.s32 	%rd267, %r1358, 4;
	add.s64 	%rd268, %rd15, %rd267;
	st.global.u32 	[%rd268], %r2382;
	add.s32 	%r2362, %r2362, 2;

$L__BB0_269:
	or.b32  	%r1359, %r270, %r273;
	setp.gt.s32 	%p194, %r1359, -1;
	and.pred  	%p196, %p154, %p194;
	setp.lt.s32 	%p197, %r270, %r924;
	and.pred  	%p23, %p197, %p196;
	@%p168 bra 	$L__BB0_281;

	@%p23 bra 	$L__BB0_272;
	bra.uni 	$L__BB0_271;

$L__BB0_272:
	setp.eq.s32 	%p199, %r253, 0;
	add.s32 	%r1361, %r269, %r273;
	shl.b32 	%r1362, %r1361, 1;
	mul.wide.s32 	%rd269, %r1362, 4;
	add.s64 	%rd270, %rd14, %rd269;
	ld.global.f32 	%f76, [%rd270];
	@%p199 bra 	$L__BB0_274;
	bra.uni 	$L__BB0_273;

$L__BB0_274:
	mov.f32 	%f338, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f76;
  cvt.rn.f16.f32 high, %f338;
  mov.b32 %r2384, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_275;

$L__BB0_271:
	mov.f32 	%f334, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f334;
  cvt.rn.f16.f32 high, %f334;
  mov.b32 %r2384, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_275;

$L__BB0_273:
	mov.f32 	%f335, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f335;
  cvt.rn.f16.f32 high, %f76;
  mov.b32 %r2384, {low,high};}

	// end inline asm

$L__BB0_275:
	add.s32 	%r366, %r2362, %r257;
	mul.wide.s32 	%rd271, %r366, 4;
	add.s64 	%rd272, %rd15, %rd271;
	st.global.u32 	[%rd272], %r2384;
	@%p23 bra 	$L__BB0_277;
	bra.uni 	$L__BB0_276;

$L__BB0_277:
	setp.eq.s32 	%p200, %r253, 0;
	add.s32 	%r1366, %r271, %r273;
	shl.b32 	%r1367, %r1366, 1;
	mul.wide.s32 	%rd273, %r1367, 4;
	add.s64 	%rd274, %rd14, %rd273;
	ld.global.f32 	%f77, [%rd274];
	@%p200 bra 	$L__BB0_279;
	bra.uni 	$L__BB0_278;

$L__BB0_279:
	mov.f32 	%f344, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f77;
  cvt.rn.f16.f32 high, %f344;
  mov.b32 %r2385, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_280;

$L__BB0_276:
	mov.f32 	%f340, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f340;
  cvt.rn.f16.f32 high, %f340;
  mov.b32 %r2385, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_280;

$L__BB0_278:
	mov.f32 	%f341, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f341;
  cvt.rn.f16.f32 high, %f77;
  mov.b32 %r2385, {low,high};}

	// end inline asm

$L__BB0_280:
	add.s32 	%r1370, %r366, 1;
	mul.wide.s32 	%rd275, %r1370, 4;
	add.s64 	%rd276, %rd15, %rd275;
	st.global.u32 	[%rd276], %r2385;
	add.s32 	%r2362, %r2362, 2;

$L__BB0_281:
	@%p161 bra 	$L__BB0_293;

	@%p23 bra 	$L__BB0_284;
	bra.uni 	$L__BB0_283;

$L__BB0_284:
	setp.eq.s32 	%p202, %r253, 0;
	add.s32 	%r1372, %r269, %r273;
	shl.b32 	%r1373, %r1372, 1;
	or.b32  	%r1374, %r1373, 1;
	mul.wide.s32 	%rd277, %r1374, 4;
	add.s64 	%rd278, %rd14, %rd277;
	ld.global.f32 	%f78, [%rd278];
	@%p202 bra 	$L__BB0_286;
	bra.uni 	$L__BB0_285;

$L__BB0_286:
	mov.f32 	%f350, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f78;
  cvt.rn.f16.f32 high, %f350;
  mov.b32 %r2387, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_287;

$L__BB0_283:
	mov.f32 	%f346, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f346;
  cvt.rn.f16.f32 high, %f346;
  mov.b32 %r2387, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_287;

$L__BB0_285:
	mov.f32 	%f347, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f347;
  cvt.rn.f16.f32 high, %f78;
  mov.b32 %r2387, {low,high};}

	// end inline asm

$L__BB0_287:
	add.s32 	%r377, %r2362, %r257;
	mul.wide.s32 	%rd279, %r377, 4;
	add.s64 	%rd280, %rd15, %rd279;
	st.global.u32 	[%rd280], %r2387;
	@%p23 bra 	$L__BB0_289;
	bra.uni 	$L__BB0_288;

$L__BB0_289:
	setp.eq.s32 	%p203, %r253, 0;
	add.s32 	%r1378, %r271, %r273;
	shl.b32 	%r1379, %r1378, 1;
	or.b32  	%r1380, %r1379, 1;
	mul.wide.s32 	%rd281, %r1380, 4;
	add.s64 	%rd282, %rd14, %rd281;
	ld.global.f32 	%f79, [%rd282];
	@%p203 bra 	$L__BB0_291;
	bra.uni 	$L__BB0_290;

$L__BB0_291:
	mov.f32 	%f356, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f79;
  cvt.rn.f16.f32 high, %f356;
  mov.b32 %r2388, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_292;

$L__BB0_288:
	mov.f32 	%f352, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f352;
  cvt.rn.f16.f32 high, %f352;
  mov.b32 %r2388, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_292;

$L__BB0_290:
	mov.f32 	%f353, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f353;
  cvt.rn.f16.f32 high, %f79;
  mov.b32 %r2388, {low,high};}

	// end inline asm

$L__BB0_292:
	add.s32 	%r1383, %r377, 1;
	mul.wide.s32 	%rd283, %r1383, 4;
	add.s64 	%rd284, %rd15, %rd283;
	st.global.u32 	[%rd284], %r2388;
	add.s32 	%r2362, %r2362, 2;

$L__BB0_293:
	add.s64 	%rd578, %rd578, 4;
	add.s64 	%rd577, %rd577, -4;
	setp.ne.s64 	%p204, %rd577, 0;
	@%p204 bra 	$L__BB0_173;

$L__BB0_294:
	add.s32 	%r2358, %r2358, %r47;
	setp.lt.s32 	%p205, %r2358, %r924;
	@%p205 bra 	$L__BB0_171;

$L__BB0_295:
	add.s32 	%r2352, %r2352, %r950;
	setp.lt.s32 	%p206, %r2352, %r923;
	@%p206 bra 	$L__BB0_169;
	bra.uni 	$L__BB0_296;

$L__BB0_150:
	@%p35 bra 	$L__BB0_296;

	neg.s32 	%r226, %r76;
	mov.u32 	%r1198, 31;
	sub.s32 	%r1199, %r1198, %r45;
	setp.gt.s32 	%p144, %r44, %r45;
	selp.b32 	%r1200, %r45, %r1199, %p144;
	shl.b32 	%r1201, %r1200, 2;
	mov.u32 	%r1202, 2;
	sub.s32 	%r227, %r1201, %r926;
	shl.b32 	%r1203, %r925, 2;
	mov.u32 	%r1204, 128;
	sub.s32 	%r228, %r1204, %r1203;
	sub.s32 	%r1205, %r1202, %r926;
	add.s32 	%r229, %r1205, %r1201;
	add.s32 	%r230, %r923, -1;
	add.s32 	%r231, %r227, 1;
	add.s32 	%r232, %r229, 1;
	rem.s32 	%r1230, %r231, %r228;
	add.s32 	%r1231, %r1230, %r228;
	rem.s32 	%r243, %r1231, %r228;
	rem.s32 	%r1232, %r232, %r228;
	add.s32 	%r1233, %r1232, %r228;
	rem.s32 	%r244, %r1233, %r228;

$L__BB0_152:
	setp.ne.s32 	%p145, %r41, %r226;
	@%p145 bra 	$L__BB0_166;

	shl.b32 	%r234, %r2352, 1;
	rem.s32 	%r1206, %r227, %r228;
	add.s32 	%r1207, %r1206, %r228;
	rem.s32 	%r235, %r1207, %r228;
	rem.s32 	%r1208, %r229, %r228;
	add.s32 	%r1209, %r1208, %r228;
	rem.s32 	%r236, %r1209, %r228;
	@%p144 bra 	$L__BB0_155;
	bra.uni 	$L__BB0_154;

$L__BB0_155:
	mul.lo.s32 	%r1212, %r234, %r228;
	add.s32 	%r1213, %r1212, %r235;
	mul.wide.s32 	%rd185, %r1213, 4;
	add.s64 	%rd186, %rd14, %rd185;
	ld.global.f32 	%f217, [%rd186];
	add.s32 	%r1214, %r1212, %r236;
	mul.wide.s32 	%rd187, %r1214, 4;
	add.s64 	%rd188, %rd14, %rd187;
	ld.global.f32 	%f218, [%rd188];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f217;
  cvt.rn.f16.f32 high, %f218;
  mov.b32 %r2353, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_156;

$L__BB0_154:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f216;
  mov.b32 %r2353, {low,high};}

	// end inline asm

$L__BB0_156:
	shl.b32 	%r1215, %r2352, 5;
	add.s32 	%r1216, %r1215, %r45;
	shl.b32 	%r1217, %r1216, 2;
	mul.wide.s32 	%rd189, %r1217, 4;
	add.s64 	%rd16, %rd15, %rd189;
	st.global.u32 	[%rd16], %r2353;
	@%p144 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_157;

$L__BB0_158:
	add.s32 	%r1220, %r234, 1;
	mul.lo.s32 	%r1221, %r1220, %r228;
	add.s32 	%r1222, %r1221, %r235;
	mul.wide.s32 	%rd190, %r1222, 4;
	add.s64 	%rd191, %rd14, %rd190;
	ld.global.f32 	%f221, [%rd191];
	add.s32 	%r1223, %r1221, %r236;
	mul.wide.s32 	%rd192, %r1223, 4;
	add.s64 	%rd193, %rd14, %rd192;
	ld.global.f32 	%f222, [%rd193];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f221;
  cvt.rn.f16.f32 high, %f222;
  mov.b32 %r2354, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_159;

$L__BB0_157:
	mov.f32 	%f220, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f220;
  cvt.rn.f16.f32 high, %f220;
  mov.b32 %r2354, {low,high};}

	// end inline asm

$L__BB0_159:
	add.s32 	%r1224, %r230, %r2352;
	rem.s32 	%r1225, %r1224, %r923;
	shl.b32 	%r1226, %r1225, 5;
	add.s32 	%r1227, %r1226, %r45;
	shl.b32 	%r1228, %r1227, 2;
	or.b32  	%r1229, %r1228, 2;
	mul.wide.s32 	%rd194, %r1229, 4;
	add.s64 	%rd17, %rd15, %rd194;
	st.global.u32 	[%rd17], %r2354;
	@%p144 bra 	$L__BB0_161;
	bra.uni 	$L__BB0_160;

$L__BB0_161:
	mul.lo.s32 	%r1236, %r234, %r228;
	add.s32 	%r1237, %r1236, %r243;
	mul.wide.s32 	%rd195, %r1237, 4;
	add.s64 	%rd196, %rd14, %rd195;
	ld.global.f32 	%f225, [%rd196];
	add.s32 	%r1238, %r1236, %r244;
	mul.wide.s32 	%rd197, %r1238, 4;
	add.s64 	%rd198, %rd14, %rd197;
	ld.global.f32 	%f226, [%rd198];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f225;
  cvt.rn.f16.f32 high, %f226;
  mov.b32 %r2355, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_162;

$L__BB0_160:
	mov.f32 	%f224, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f224;
  cvt.rn.f16.f32 high, %f224;
  mov.b32 %r2355, {low,high};}

	// end inline asm

$L__BB0_162:
	st.global.u32 	[%rd16+4], %r2355;
	@%p144 bra 	$L__BB0_164;
	bra.uni 	$L__BB0_163;

$L__BB0_164:
	add.s32 	%r1241, %r234, 1;
	mul.lo.s32 	%r1242, %r1241, %r228;
	add.s32 	%r1243, %r1242, %r243;
	mul.wide.s32 	%rd199, %r1243, 4;
	add.s64 	%rd200, %rd14, %rd199;
	ld.global.f32 	%f229, [%rd200];
	add.s32 	%r1244, %r1242, %r244;
	mul.wide.s32 	%rd201, %r1244, 4;
	add.s64 	%rd202, %rd14, %rd201;
	ld.global.f32 	%f230, [%rd202];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f229;
  cvt.rn.f16.f32 high, %f230;
  mov.b32 %r2356, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_165;

$L__BB0_163:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f228;
  mov.b32 %r2356, {low,high};}

	// end inline asm

$L__BB0_165:
	st.global.u32 	[%rd17+4], %r2356;

$L__BB0_166:
	add.s32 	%r2352, %r2352, %r950;
	setp.lt.s32 	%p150, %r2352, %r923;
	@%p150 bra 	$L__BB0_152;

$L__BB0_296:
	add.s32 	%r1385, %r918, -1;
	mad.lo.s32 	%r1386, %r919, 576, 128;
	mul.lo.s32 	%r1387, %r1386, %r1385;
	add.s32 	%r1388, %r66, -64;
	add.s32 	%r1389, %r1388, %r66;
	add.s32 	%r1390, %r919, -1;
	mad.lo.s32 	%r1391, %r1389, %r1390, %r1387;
	mul.lo.s32 	%r1392, %r1385, %r919;
	mul.lo.s32 	%r1393, %r1392, 320;
	mad.lo.s32 	%r1394, %r1388, %r1390, %r1393;
	add.s32 	%r386, %r1394, %r1391;
	setp.lt.s32 	%p207, %r386, 1;
	mov.f32 	%f358, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f358;
  cvt.rn.f16.f32 high, %f358;
  mov.b32 %r2391, {low,high};}

	// end inline asm
	@%p207 bra 	$L__BB0_299;

	mov.u32 	%r2392, 0;
	mov.u32 	%r2390, _ZN6kernel5shmemE;

$L__BB0_298:
	st.shared.u32 	[%r2390], %r2391;
	mov.f32 	%f366, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f366;
  cvt.rn.f16.f32 high, %f366;
  mov.b32 %r1397, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2390+4], %r1397;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f366;
  cvt.rn.f16.f32 high, %f366;
  mov.b32 %r1398, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2390+8], %r1398;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f366;
  cvt.rn.f16.f32 high, %f366;
  mov.b32 %r1399, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2390+12], %r1399;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f366;
  cvt.rn.f16.f32 high, %f366;
  mov.b32 %r2391, {low,high};}

	// end inline asm
	add.s32 	%r2390, %r2390, 16;
	add.s32 	%r2392, %r2392, 4;
	setp.lt.s32 	%p208, %r2392, %r386;
	@%p208 bra 	$L__BB0_298;

$L__BB0_299:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f358;
  cvt.rn.f16.f32 high, %f358;
  mov.b32 %r1402, {low,high};}

	// end inline asm
	mov.u32 	%r1403, 31;
	sub.s32 	%r1404, %r1403, %r45;
	setp.gt.s32 	%p210, %r44, %r45;
	selp.b32 	%r1405, %r45, %r1404, %p210;
	shl.b32 	%r1406, %r1405, 2;
	sub.s32 	%r395, %r1406, %r926;
	shl.b32 	%r1407, %r925, 2;
	mov.u32 	%r1408, 128;
	sub.s32 	%r396, %r1408, %r1407;
	rem.s32 	%r1409, %r395, %r396;
	add.s32 	%r1410, %r1409, %r396;
	rem.s32 	%r397, %r1410, %r396;
	add.s32 	%r1411, %r395, 2;
	rem.s32 	%r1412, %r1411, %r396;
	add.s32 	%r1413, %r1412, %r396;
	rem.s32 	%r398, %r1413, %r396;
	add.s32 	%r1424, %r395, 1;
	rem.s32 	%r1425, %r1424, %r396;
	add.s32 	%r1426, %r1425, %r396;
	rem.s32 	%r399, %r1426, %r396;
	add.s32 	%r1427, %r395, 3;
	rem.s32 	%r1428, %r1427, %r396;
	add.s32 	%r1429, %r1428, %r396;
	rem.s32 	%r400, %r1429, %r396;
	// begin inline asm
	mov.u32 %r1440, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd290, %r1440;
	// begin inline asm
	mov.u32 %r1441, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd291, %r1441;
	bfi.b64 	%rd27, %rd291, %rd290, 32, 32;
	setp.ne.s64 	%p218, %rd27, 0;
	@%p218 bra 	$L__BB0_317;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_317:
	add.s64 	%rd28, %rd27, 4;
	mov.u32 	%r1442, %nctaid.y;
	mov.u32 	%r1443, %nctaid.x;
	mul.lo.s32 	%r1444, %r1443, %r1442;
	mov.u32 	%r1445, %nctaid.z;
	mul.lo.s32 	%r401, %r1444, %r1445;
	neg.s32 	%r1446, %r41;
	add.s32 	%r1447, %r45, %r40;
	setp.ne.s32 	%p219, %r1447, %r1446;
	mov.u32 	%r1448, %ctaid.x;
	add.s32 	%r402, %r1448, %r42;
	neg.s32 	%r403, %r43;
	bar.sync 	0;
	@%p219 bra 	$L__BB0_321;

	setp.eq.s32 	%p220, %r402, %r403;
	mov.u32 	%r1451, -2147483647;
	sub.s32 	%r1452, %r1451, %r401;
	selp.b32 	%r1450, %r1452, 1, %p220;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1449,[%rd28],%r1450;
	// end inline asm

$L__BB0_319:
	ld.volatile.u32 	%r1453, [%rd28];
	xor.b32  	%r1454, %r1453, %r1449;
	setp.gt.s32 	%p221, %r1454, -1;
	@%p221 bra 	$L__BB0_319;

	// begin inline asm
	ld.acquire.gpu.u32 %r1455,[%rd28];
	// end inline asm

$L__BB0_321:
	bar.sync 	0;
	setp.lt.s32 	%p222, %r48, 1;
	@%p222 bra 	$L__BB0_646;

	setp.lt.s32 	%p223, %r397, %r937;
	setp.ge.s32 	%p224, %r397, %r936;
	and.pred  	%p24, %p223, %p224;
	setp.lt.s32 	%p225, %r399, %r937;
	setp.ge.s32 	%p226, %r399, %r936;
	and.pred  	%p25, %p225, %p226;
	setp.lt.s32 	%p227, %r398, %r937;
	setp.ge.s32 	%p228, %r398, %r936;
	and.pred  	%p26, %p227, %p228;
	setp.lt.s32 	%p229, %r400, %r937;
	setp.ge.s32 	%p230, %r400, %r936;
	and.pred  	%p27, %p229, %p230;
	mov.u32 	%r2521, 0;
	mul.wide.s32 	%rd298, %r45, 16;
	mul.wide.s32 	%rd300, %r45, 8;
	mov.u32 	%r2393, %r1402;
	mov.u32 	%r2394, %r1402;
	mov.u32 	%r2646, %r1402;
	mov.u32 	%r2574, %r1402;
	mov.u32 	%r2397, %r1402;
	mov.u32 	%r2398, %r1402;
	mov.u32 	%r2681, %r1402;
	mov.u32 	%r2548, %r1402;
	mov.u32 	%r2549, %r1402;
	mov.u32 	%r2402, %r1402;
	mov.u32 	%r2576, %r1402;
	mov.u32 	%r2550, %r1402;
	mov.u32 	%r2551, %r1402;
	mov.u32 	%r2406, %r1402;
	mov.u32 	%r2649, %r1402;
	mov.u32 	%r2408, %r1402;
	mov.u32 	%r2409, %r1402;
	mov.u32 	%r2410, %r1402;
	mov.u32 	%r2411, %r1402;
	mov.u32 	%r2643, %r1402;
	mov.u32 	%r2638, %r1402;
	mov.u32 	%r2639, %r1402;
	mov.u32 	%r2415, %r1402;
	mov.u32 	%r2683, %r1402;
	mov.u32 	%r2417, %r1402;
	mov.u32 	%r2418, %r1402;
	mov.u32 	%r2419, %r1402;
	mov.u32 	%r2642, %r1402;
	mov.u32 	%r2640, %r1402;
	mov.u32 	%r2641, %r1402;
	mov.u32 	%r2423, %r1402;
	mov.u32 	%r2564, %r1402;
	mov.u32 	%r2425, %r1402;
	mov.u32 	%r2650, %r1402;
	mov.u32 	%r2554, %r1402;
	mov.u32 	%r2428, %r1402;
	mov.u32 	%r2560, %r1402;
	mov.u32 	%r2430, %r1402;
	mov.u32 	%r2651, %r1402;
	mov.u32 	%r2555, %r1402;
	mov.u32 	%r2433, %r1402;
	mov.u32 	%r2567, %r1402;
	mov.u32 	%r2435, %r1402;
	mov.u32 	%r2436, %r1402;
	mov.u32 	%r2653, %r1402;
	mov.u32 	%r2556, %r1402;
	mov.u32 	%r2557, %r1402;
	mov.u32 	%r2440, %r1402;
	mov.u32 	%r2569, %r1402;
	mov.u32 	%r2442, %r1402;
	mov.u32 	%r2443, %r1402;
	mov.u32 	%r2655, %r1402;
	mov.u32 	%r2570, %r1402;
	mov.u32 	%r2558, %r1402;
	mov.u32 	%r2584, %r1402;
	mov.u32 	%r2448, %r1402;
	mov.u32 	%r2571, %r1402;
	mov.u32 	%r2559, %r1402;
	mov.u32 	%r2586, %r1402;
	mov.u32 	%r2452, %r1402;
	mov.u32 	%r2614, %r1402;
	mov.u32 	%r2454, %r1402;
	mov.u32 	%r2455, %r1402;
	mov.u32 	%r2456, %r1402;
	mov.u32 	%r2615, %r1402;
	mov.u32 	%r2458, %r1402;
	mov.u32 	%r2459, %r1402;
	mov.u32 	%r2460, %r1402;
	mov.u32 	%r2616, %r1402;
	mov.u32 	%r2617, %r1402;
	mov.u32 	%r2463, %r1402;
	mov.u32 	%r2464, %r1402;
	mov.u32 	%r2465, %r1402;
	mov.u32 	%r2466, %r1402;
	mov.u32 	%r2467, %r1402;
	mov.u32 	%r2618, %r1402;
	mov.u32 	%r2619, %r1402;
	mov.u32 	%r2470, %r1402;
	mov.u32 	%r2471, %r1402;
	mov.u32 	%r2472, %r1402;
	mov.u32 	%r2473, %r1402;
	mov.u32 	%r2474, %r1402;
	mov.u32 	%r2475, %r1402;
	mov.u32 	%r2476, %r1402;
	mov.u32 	%r2477, %r1402;
	mov.u32 	%r2478, %r1402;
	mov.u32 	%r2479, %r1402;
	mov.u32 	%r2480, %r1402;
	mov.u32 	%r2623, %r1402;
	mov.u32 	%r2482, %r1402;
	mov.u32 	%r2483, %r1402;
	mov.u32 	%r2484, %r1402;
	mov.u32 	%r2485, %r1402;
	mov.u32 	%r2486, %r1402;
	mov.u32 	%r2625, %r1402;
	mov.u32 	%r2488, %r1402;
	mov.u32 	%r2489, %r1402;
	mov.u32 	%r2490, %r1402;
	mov.u32 	%r2491, %r1402;
	mov.u32 	%r2492, %r1402;
	mov.u32 	%r2626, %r1402;
	mov.u32 	%r2494, %r1402;
	mov.u32 	%r2495, %r1402;
	mov.u32 	%r2496, %r1402;
	mov.u32 	%r2497, %r1402;
	mov.u32 	%r2498, %r1402;
	mov.u32 	%r2499, %r1402;
	mov.u32 	%r2627, %r1402;
	mov.u32 	%r2501, %r1402;
	mov.u32 	%r2502, %r1402;
	mov.u32 	%r2503, %r1402;
	mov.u32 	%r2504, %r1402;
	mov.u32 	%r2505, %r1402;
	mov.u32 	%r2506, %r1402;
	mov.u32 	%r2507, %r1402;
	mov.u32 	%r2508, %r1402;
	mov.u32 	%r2509, %r1402;
	mov.u32 	%r2510, %r1402;
	mov.u32 	%r2511, %r1402;
	mov.u32 	%r2512, %r1402;
	mov.u32 	%r2513, %r1402;
	mov.u32 	%r2514, %r1402;
	mov.u32 	%r2515, %r1402;
	mov.u32 	%r2516, %r1402;
	mov.u32 	%r2517, %r1402;
	mov.u32 	%r2518, %r1402;
	mov.u32 	%r2519, %r1402;
	mov.u32 	%r2520, %r1402;

$L__BB0_323:
	mov.u32 	%r516, %r2504;
	mov.u32 	%r515, %r2503;
	mov.u32 	%r512, %r2627;
	mov.u32 	%r511, %r2499;
	mov.u32 	%r509, %r2497;
	mov.u32 	%r508, %r2496;
	mov.u32 	%r505, %r2626;
	mov.u32 	%r504, %r2492;
	mov.u32 	%r502, %r2490;
	mov.u32 	%r499, %r2625;
	mov.u32 	%r496, %r2484;
	mov.u32 	%r493, %r2623;
	mov.u32 	%r2503, %r2474;
	mov.u32 	%r485, %r2473;
	mov.u32 	%r482, %r2470;
	mov.u32 	%r2499, %r2619;
	mov.u32 	%r480, %r2618;
	mov.u32 	%r2496, %r2467;
	mov.u32 	%r478, %r2466;
	mov.u32 	%r475, %r2463;
	mov.u32 	%r2492, %r2617;
	mov.u32 	%r473, %r2616;
	mov.u32 	%r472, %r2460;
	mov.u32 	%r469, %r2615;
	mov.u32 	%r468, %r2456;
	mov.u32 	%r465, %r2614;
	mov.u32 	%r456, %r2655;
	mov.u32 	%r2568, %r2440;
	mov.u32 	%r449, %r2653;
	mov.u32 	%r2566, %r2433;
	mov.u32 	%r2504, %r2651;
	mov.u32 	%r442, %r2430;
	mov.u32 	%r441, %r2560;
	mov.u32 	%r2470, %r2428;
	mov.u32 	%r2497, %r2650;
	mov.u32 	%r437, %r2425;
	mov.u32 	%r436, %r2564;
	mov.u32 	%r2463, %r2423;
	mov.u32 	%r2490, %r2641;
	mov.u32 	%r433, %r2640;
	mov.u32 	%r2460, %r2642;
	mov.u32 	%r430, %r2418;
	mov.u32 	%r2553, %r2417;
	mov.u32 	%r2423, %r2683;
	mov.u32 	%r2564, %r2415;
	mov.u32 	%r2484, %r2639;
	mov.u32 	%r425, %r2638;
	mov.u32 	%r2456, %r2643;
	mov.u32 	%r422, %r2410;
	mov.u32 	%r2552, %r2409;
	mov.u32 	%r2425, %r2408;
	mov.u32 	%r2466, %r2649;
	mov.u32 	%r2467, %r2576;
	mov.u32 	%r2428, %r2681;
	mov.u32 	%r2562, %r2398;
	mov.u32 	%r2561, %r2397;
	mov.u32 	%r2474, %r2574;
	mov.u32 	%r2473, %r2646;
	mov.u32 	%r2430, %r2394;
	mov.u32 	%r2560, %r2393;
	not.b32 	%r1458, %r42;
	add.s32 	%r1459, %r920, %r1458;
	mul.lo.s32 	%r1460, %r1459, %r922;
	add.s32 	%r1461, %r2521, %r1460;
	not.b32 	%r1463, %r43;
	add.s32 	%r1464, %r921, %r1463;
	mul.lo.s32 	%r1465, %r1464, %r922;
	add.s32 	%r1466, %r2521, %r1465;
	rem.s32 	%r534, %r1461, %r65;
	rem.s32 	%r535, %r1466, %r994;
	add.s32 	%r1470, %r1460, %r1465;
	add.s32 	%r1471, %r1470, %r923;
	not.b32 	%r1472, %r40;
	add.s32 	%r1473, %r918, %r1472;
	mad.lo.s32 	%r1474, %r1459, %r918, %r1473;
	not.b32 	%r1475, %r41;
	add.s32 	%r1476, %r919, %r1475;
	mad.lo.s32 	%r1477, %r1464, %r919, %r1476;
	add.s32 	%r1478, %r1474, %r1477;
	shl.b32 	%r1479, %r1478, 1;
	add.s32 	%r1480, %r1471, %r1479;
	add.s32 	%r1481, %r2521, %r1480;
	add.s32 	%r1482, %r2521, %r1470;
	div.s32 	%r1483, %r1481, %r923;
	mul.lo.s32 	%r1484, %r1483, %r923;
	sub.s32 	%r1485, %r47, %r923;
	sub.s32 	%r536, %r1481, %r1484;
	sub.s32 	%r1486, %r1474, %r1477;
	shl.b32 	%r1487, %r1486, 1;
	add.s32 	%r1488, %r1487, %r924;
	mad.lo.s32 	%r1489, %r1483, %r47, %r1488;
	mad.lo.s32 	%r1490, %r1483, %r1485, %r1482;
	div.s32 	%r1491, %r1489, %r924;
	mul.lo.s32 	%r1492, %r1491, %r924;
	sub.s32 	%r1495, %r951, %r924;
	sub.s32 	%r537, %r1489, %r1492;
	mad.lo.s32 	%r538, %r1491, %r1495, %r1490;
	setp.lt.s32 	%p231, %r40, 1;
	mov.u32 	%r2614, %r1402;
	mov.u32 	%r2615, %r1402;
	mov.u32 	%r2620, %r1402;
	mov.u32 	%r2621, %r1402;
	mov.u32 	%r2622, %r1402;
	mov.u32 	%r2623, %r1402;
	mov.u32 	%r2624, %r1402;
	mov.u32 	%r2625, %r1402;
	mov.u32 	%r2632, %r1402;
	mov.u32 	%r2633, %r1402;
	@%p231 bra 	$L__BB0_325;

	mul.lo.s32 	%r1496, %r919, 320;
	add.s32 	%r1497, %r40, -1;
	mul.lo.s32 	%r1498, %r41, 320;
	mad.lo.s32 	%r1499, %r1496, %r1497, %r1498;
	add.s32 	%r1502, %r996, -64;
	mad.lo.s32 	%r1507, %r1502, %r1390, %r1387;
	add.s32 	%r1508, %r1499, %r1507;
	shl.b32 	%r1509, %r1508, 2;
	mov.u32 	%r1510, _ZN6kernel5shmemE;
	add.s32 	%r1511, %r1510, %r1509;
	shl.b32 	%r1512, %r45, 4;
	add.s32 	%r1513, %r1511, %r1512;
	ld.shared.v4.u32 	{%r2625, %r2623, %r2615, %r2614}, [%r1513];
	shl.b32 	%r1518, %r45, 3;
	add.s32 	%r1519, %r1511, %r1518;
	ld.shared.v2.u32 	{%r2624, %r2622}, [%r1519+512];
	ld.shared.v4.u32 	{%r2633, %r2632, %r2621, %r2620}, [%r1513+768];

$L__BB0_325:
	setp.lt.s32 	%p232, %r41, 1;
	mov.u32 	%r2616, %r1402;
	mov.u32 	%r2617, %r1402;
	mov.u32 	%r2618, %r1402;
	mov.u32 	%r2619, %r1402;
	mov.u32 	%r2626, %r1402;
	mov.u32 	%r2627, %r1402;
	mov.u32 	%r2628, %r1402;
	mov.u32 	%r2629, %r1402;
	mov.u32 	%r2630, %r1402;
	mov.u32 	%r2631, %r1402;
	mov.u32 	%r2634, %r1402;
	mov.u32 	%r2635, %r1402;
	@%p232 bra 	$L__BB0_328;

	mad.lo.s32 	%r1531, %r1473, 384, %r1393;
	add.s32 	%r1534, %r41, -1;
	mad.lo.s32 	%r1535, %r1388, %r1534, %r1531;
	add.s32 	%r1541, %r1535, %r1391;
	shl.b32 	%r1542, %r1541, 2;
	mov.u32 	%r1543, _ZN6kernel5shmemE;
	add.s32 	%r1544, %r1543, %r1542;
	shl.b32 	%r1545, %r45, 4;
	add.s32 	%r1546, %r1544, %r1545;
	ld.shared.v4.u32 	{%r2635, %r2634, %r2630, %r2628}, [%r1546];
	shl.b32 	%r1551, %r45, 3;
	add.s32 	%r1552, %r1544, %r1551;
	ld.shared.v2.u32 	{%r2631, %r2629}, [%r1552+512];
	ld.shared.v4.u32 	{%r2627, %r2626, %r2618, %r2616}, [%r1546+768];
	mov.u32 	%r2617, %r1402;
	mov.u32 	%r2619, %r1402;
	@%p231 bra 	$L__BB0_328;

	add.s32 	%r2288, %r1552, 512;
	ld.shared.v2.u32 	{%r2619, %r2617}, [%r2288+768];

$L__BB0_328:
	setp.eq.s32 	%p234, %r40, 0;
	@%p234 bra 	$L__BB0_333;

	setp.eq.s32 	%p235, %r41, %r1390;
	@%p235 bra 	$L__BB0_331;

	sub.s32 	%r1562, %r918, %r40;
	mul.lo.s32 	%r1564, %r66, %r41;
	mad.lo.s32 	%r1565, %r1562, 384, %r1564;
	mad.lo.s32 	%r1568, %r1388, %r1390, %r1565;
	mad.lo.s32 	%r1571, %r1386, %r1385, %r1568;
	shl.b32 	%r1572, %r1571, 2;
	mov.u32 	%r1573, _ZN6kernel5shmemE;
	add.s32 	%r1574, %r1573, %r1572;
	shl.b32 	%r1575, %r45, 4;
	add.s32 	%r1576, %r1574, %r1575;
	ld.shared.v4.u32 	{%r2551, %r2549, %r2559, %r2558}, [%r1576];

$L__BB0_331:
	shl.b32 	%r1581, %r41, 8;
	shl.b32 	%r1585, %r919, 8;
	or.b32  	%r1586, %r1585, 128;
	add.s32 	%r1587, %r40, -1;
	mad.lo.s32 	%r1588, %r1586, %r1587, %r1393;
	add.s32 	%r1589, %r1588, %r1581;
	shl.b32 	%r1590, %r1589, 2;
	mov.u32 	%r1591, _ZN6kernel5shmemE;
	add.s32 	%r1592, %r1591, %r1590;
	setp.ne.s32 	%p236, %r41, %r1390;
	shl.b32 	%r1594, %r45, 4;
	add.s32 	%r592, %r1592, %r1594;
	ld.shared.v4.u32 	{%r2555, %r2557, %r2554, %r2556}, [%r592];
	ld.shared.v4.u32 	{%r2553, %r2552, %r2550, %r2548}, [%r592+512];
	@%p236 bra 	$L__BB0_333;

	ld.shared.v4.u32 	{%r2551, %r2549, %r2559, %r2558}, [%r592+1024];

$L__BB0_333:
	setp.eq.s32 	%p237, %r41, 0;
	@%p237 bra 	$L__BB0_336;

	mul.lo.s32 	%r1608, %r66, %r41;
	sub.s32 	%r1609, %r1608, %r66;
	mad.lo.s32 	%r1612, %r1473, 384, %r1609;
	mad.lo.s32 	%r1615, %r1388, %r1390, %r1612;
	mad.lo.s32 	%r1618, %r1386, %r1385, %r1615;
	shl.b32 	%r1619, %r1618, 2;
	mov.u32 	%r1620, _ZN6kernel5shmemE;
	add.s32 	%r1621, %r1620, %r1619;
	shl.b32 	%r1622, %r45, 4;
	add.s32 	%r1623, %r1621, %r1622;
	ld.shared.v4.u32 	{%r2569, %r2567, %r2562, %r2561}, [%r1623+512];
	ld.shared.v4.u32 	{%r2568, %r2566, %r2560, %r2564}, [%r1623+1024];
	@%p234 bra 	$L__BB0_336;

	add.s32 	%r2289, %r1623, 512;
	ld.shared.v4.u32 	{%r2570, %r2571, %r2428, %r2423}, [%r2289+1024];

$L__BB0_336:
	ld.param.u64 	%rd295, [%rd1+104];
	cvta.to.global.u64 	%rd29, %rd295;
	setp.ne.s32 	%p239, %r40, 0;
	mov.u32 	%r2574, %r2474;
	mov.u32 	%r2636, %r2402;
	mov.u32 	%r2576, %r2467;
	mov.u32 	%r2637, %r2406;
	mov.u32 	%r2638, %r425;
	mov.u32 	%r2639, %r2484;
	mov.u32 	%r2640, %r433;
	mov.u32 	%r2641, %r2490;
	mov.u32 	%r2642, %r2460;
	mov.u32 	%r2643, %r2456;
	mov.u32 	%r2644, %r2448;
	mov.u32 	%r2645, %r2452;
	@%p239 bra 	$L__BB0_341;

	mad.lo.s32 	%r1637, %r534, %r921, %r43;
	mul.lo.s32 	%r1638, %r919, %r1637;
	mul.lo.s32 	%r1639, %r1638, 768;
	mad.lo.s32 	%r1640, %r41, 384, %r1639;
	add.s32 	%r1641, %r1640, -64;
	mul.wide.s32 	%rd296, %r1641, 4;
	add.s64 	%rd297, %rd29, %rd296;
	add.s64 	%rd299, %rd297, %rd298;
	ld.global.v4.u32 	{%r2641, %r2639, %r2642, %r2643}, [%rd299+256];
	ld.global.v4.u32 	{%r2645, %r2644, %r2637, %r2636}, [%rd299+1024];
	add.s64 	%rd30, %rd297, %rd300;
	mov.u32 	%r2574, %r2474;
	mov.u32 	%r2576, %r2467;
	@%p237 bra 	$L__BB0_339;

	ld.global.v2.u32 	{%r2574, %r2576}, [%rd30];

$L__BB0_339:
	setp.ne.s32 	%p241, %r41, %r1390;
	ld.global.v2.u32 	{%r2640, %r2638}, [%rd30+768];
	@%p241 bra 	$L__BB0_341;

	ld.global.v2.u32 	{%r2586, %r2584}, [%rd30+1536];

$L__BB0_341:
	setp.ne.s32 	%p242, %r41, 0;
	mov.u32 	%r2646, %r2473;
	mov.u32 	%r2649, %r2466;
	mov.u32 	%r2650, %r2497;
	mov.u32 	%r2651, %r2504;
	mov.u32 	%r2652, %r2436;
	mov.u32 	%r2653, %r449;
	mov.u32 	%r2654, %r2443;
	mov.u32 	%r2655, %r456;
	mov.u32 	%r2656, %r2476;
	mov.u32 	%r2657, %r2478;
	@%p242 bra 	$L__BB0_343;

	ld.param.u64 	%rd573, [%rd1+104];
	cvta.to.global.u64 	%rd572, %rd573;
	mad.lo.s32 	%r1658, %r535, %r920, %r42;
	mul.lo.s32 	%r1662, %r1658, %r997;
	mad.lo.s32 	%r1665, %r1473, 384, %r1662;
	add.s32 	%r1666, %r1665, -64;
	mad.lo.s32 	%r1669, %r999, %r65, %r1666;
	mul.wide.s32 	%rd301, %r1669, 4;
	add.s64 	%rd302, %rd572, %rd301;
	add.s64 	%rd304, %rd302, %rd298;
	ld.global.v4.u32 	{%r2657, %r2656, %r2654, %r2652}, [%rd304+256];
	ld.global.v4.u32 	{%r2651, %r2650, %r2646, %r2649}, [%rd304+1024];
	add.s64 	%rd306, %rd302, %rd300;
	ld.global.v2.u32 	{%r2655, %r2653}, [%rd306+768];
	ld.global.v2.u32 	{%r2574, %r2576}, [%rd306+1536];

$L__BB0_343:
	add.s32 	%r1682, %r923, -1;
	setp.ge.s32 	%p243, %r536, %r1682;
	setp.lt.s32 	%p244, %r536, 2;
	or.pred  	%p245, %p244, %p243;
	setp.lt.s32 	%p246, %r537, 2;
	or.pred  	%p247, %p246, %p245;
	add.s32 	%r1683, %r924, -2;
	setp.ge.s32 	%p248, %r537, %r1683;
	or.pred  	%p249, %p248, %p247;
	@%p249 bra 	$L__BB0_354;

	ld.param.u64 	%rd575, [%rd1+112];
	cvta.to.global.u64 	%rd574, %rd575;
	mad.lo.s32 	%r704, %r537, %r923, %r536;
	shl.b32 	%r1684, %r704, 6;
	mul.wide.s32 	%rd309, %r1684, 4;
	add.s64 	%rd32, %rd574, %rd309;
	and.pred  	%p252, %p239, %p242;
	@%p252 bra 	$L__BB0_346;

	add.s64 	%rd311, %rd32, %rd300;
	ld.global.v2.u32 	{%r2619, %r2617}, [%rd311+256];

$L__BB0_346:
	@%p239 bra 	$L__BB0_348;

	shl.b32 	%r1687, %r923, 5;
	cvt.s64.s32 	%rd312, %r1687;
	cvt.s64.s32 	%rd313, %r45;
	add.s64 	%rd314, %rd312, %rd313;
	shl.b64 	%rd315, %rd314, 3;
	add.s64 	%rd316, %rd32, %rd315;
	ld.global.v2.u32 	{%r2624, %r2622}, [%rd316];

$L__BB0_348:
	@%p242 bra 	$L__BB0_350;

	shl.b32 	%r1690, %r923, 5;
	neg.s32 	%r1691, %r1690;
	cvt.s64.s32 	%rd317, %r1691;
	cvt.s64.s32 	%rd318, %r45;
	add.s64 	%rd319, %rd317, %rd318;
	shl.b64 	%rd320, %rd319, 3;
	add.s64 	%rd321, %rd32, %rd320;
	ld.global.v2.u32 	{%r2631, %r2629}, [%rd321];

$L__BB0_350:
	mad.lo.s32 	%r2308, %r537, %r923, %r536;
	ld.param.u64 	%rd567, [%rd1+112];
	cvta.to.global.u64 	%rd566, %rd567;
	shl.b32 	%r1694, %r924, 6;
	shl.b32 	%r1695, %r2308, 7;
	mad.lo.s32 	%r1696, %r1694, %r923, %r1695;
	mul.wide.s32 	%rd322, %r1696, 4;
	add.s64 	%rd33, %rd566, %rd322;
	@%p239 bra 	$L__BB0_352;

	shl.b32 	%r1697, %r923, 5;
	cvt.s64.s32 	%rd323, %r1697;
	cvt.s64.s32 	%rd324, %r45;
	add.s64 	%rd325, %rd323, %rd324;
	shl.b64 	%rd326, %rd325, 4;
	add.s64 	%rd327, %rd33, %rd326;
	ld.global.v4.u32 	{%r2625, %r2623, %r2615, %r2614}, [%rd327];
	shl.b32 	%r1702, %r923, 6;
	add.s32 	%r1703, %r1702, -32;
	cvt.s64.s32 	%rd328, %r1703;
	add.s64 	%rd329, %rd328, %rd324;
	shl.b64 	%rd330, %rd329, 4;
	add.s64 	%rd331, %rd33, %rd330;
	ld.global.v4.u32 	{%r2633, %r2632, %r2621, %r2620}, [%rd331];

$L__BB0_352:
	@%p242 bra 	$L__BB0_354;

	shl.b32 	%r1708, %r923, 5;
	xor.b32  	%r1709, %r1708, -32;
	cvt.s64.s32 	%rd332, %r1709;
	cvt.s64.s32 	%rd333, %r45;
	add.s64 	%rd334, %rd332, %rd333;
	shl.b64 	%rd335, %rd334, 4;
	add.s64 	%rd336, %rd33, %rd335;
	ld.global.v4.u32 	{%r2635, %r2634, %r2630, %r2628}, [%rd336];
	add.s64 	%rd338, %rd33, %rd298;
	ld.global.v4.u32 	{%r2627, %r2626, %r2618, %r2616}, [%rd338];

$L__BB0_354:
	bar.sync 	0;
	ld.param.u64 	%rd340, [%rd1+184];
	cvta.to.global.u64 	%rd34, %rd340;
	add.s32 	%r1718, %r932, -2;
	setp.lt.s32 	%p257, %r536, %r1718;
	add.s32 	%r1719, %r933, 3;
	setp.ge.s32 	%p258, %r536, %r1719;
	or.pred  	%p259, %p257, %p258;
	add.s32 	%r1720, %r934, -2;
	setp.lt.s32 	%p260, %r537, %r1720;
	or.pred  	%p261, %p259, %p260;
	add.s32 	%r1721, %r935, 2;
	setp.ge.s32 	%p262, %r537, %r1721;
	or.pred  	%p263, %p262, %p261;
	setp.lt.s32 	%p264, %r538, %r929;
	or.pred  	%p265, %p264, %p263;
	mad.lo.s32 	%r1722, %r931, %r930, %r929;
	setp.ge.s32 	%p266, %r538, %r1722;
	or.pred  	%p267, %p265, %p266;
	@%p267 bra 	$L__BB0_596;

	sub.s32 	%r763, %r538, %r929;
	rem.s32 	%r1723, %r763, %r930;
	setp.ne.s32 	%p268, %r1723, 0;
	@%p268 bra 	$L__BB0_596;

	div.s32 	%r1724, %r763, %r930;
	mov.u32 	%r1725, 8;
	sub.s32 	%r1726, %r1725, %r932;
	add.s32 	%r1727, %r1726, %r933;
	mul.lo.s32 	%r1728, %r1724, %r1727;
	mov.u32 	%r1729, 4;
	sub.s32 	%r1730, %r1729, %r932;
	add.s32 	%r764, %r1730, %r536;
	sub.s32 	%r1731, %r1729, %r934;
	add.s32 	%r765, %r1731, %r537;
	mul.lo.s32 	%r766, %r1728, 3;
	add.s32 	%r1732, %r764, %r766;
	add.s32 	%r1733, %r1732, -2;
	sub.s32 	%r1734, %r1725, %r934;
	add.s32 	%r1735, %r1734, %r935;
	mul.lo.s32 	%r767, %r1733, %r1735;
	add.s32 	%r1736, %r765, %r767;
	mul.lo.s32 	%r1737, %r1736, %r54;
	sub.s32 	%r768, %r1737, %r936;
	@%p28 bra 	$L__BB0_361;

	not.pred 	%p270, %p24;
	@%p270 bra 	$L__BB0_359;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2520;
  cvt.f32.f16 %f403, low;}

	// end inline asm
	add.s32 	%r1739, %r768, %r397;
	mul.wide.s32 	%rd341, %r1739, 4;
	add.s64 	%rd342, %rd34, %rd341;
	st.global.f32 	[%rd342], %f403;

$L__BB0_359:
	not.pred 	%p271, %p26;
	@%p271 bra 	$L__BB0_361;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2520;
  cvt.f32.f16 %f404, high;}

	// end inline asm
	add.s32 	%r1741, %r768, %r398;
	mul.wide.s32 	%rd343, %r1741, 4;
	add.s64 	%rd344, %rd34, %rd343;
	st.global.f32 	[%rd344], %f404;

$L__BB0_361:
	@%p28 bra 	$L__BB0_366;

	not.pred 	%p273, %p25;
	@%p273 bra 	$L__BB0_364;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2516;
  cvt.f32.f16 %f405, low;}

	// end inline asm
	add.s32 	%r1743, %r768, %r399;
	mul.wide.s32 	%rd345, %r1743, 4;
	add.s64 	%rd346, %rd34, %rd345;
	st.global.f32 	[%rd346], %f405;

$L__BB0_364:
	not.pred 	%p274, %p27;
	@%p274 bra 	$L__BB0_366;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2516;
  cvt.f32.f16 %f406, high;}

	// end inline asm
	add.s32 	%r1745, %r768, %r400;
	mul.wide.s32 	%rd347, %r1745, 4;
	add.s64 	%rd348, %rd34, %rd347;
	st.global.f32 	[%rd348], %f406;

$L__BB0_366:
	mov.u32 	%r1746, 8;
	sub.s32 	%r1747, %r1746, %r932;
	add.s32 	%r1748, %r1747, %r933;
	add.s32 	%r769, %r766, %r1748;
	add.s32 	%r1749, %r764, %r769;
	add.s32 	%r1750, %r1749, -2;
	sub.s32 	%r1751, %r1746, %r934;
	add.s32 	%r1752, %r1751, %r935;
	mad.lo.s32 	%r1753, %r1750, %r1752, %r765;
	mul.lo.s32 	%r1754, %r1753, %r54;
	sub.s32 	%r770, %r1754, %r936;
	@%p28 bra 	$L__BB0_371;

	not.pred 	%p276, %p24;
	@%p276 bra 	$L__BB0_369;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2519;
  cvt.f32.f16 %f407, low;}

	// end inline asm
	add.s32 	%r1756, %r770, %r397;
	mul.wide.s32 	%rd349, %r1756, 4;
	add.s64 	%rd350, %rd34, %rd349;
	st.global.f32 	[%rd350], %f407;

$L__BB0_369:
	not.pred 	%p277, %p26;
	@%p277 bra 	$L__BB0_371;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2519;
  cvt.f32.f16 %f408, high;}

	// end inline asm
	add.s32 	%r1758, %r770, %r398;
	mul.wide.s32 	%rd351, %r1758, 4;
	add.s64 	%rd352, %rd34, %rd351;
	st.global.f32 	[%rd352], %f408;

$L__BB0_371:
	@%p28 bra 	$L__BB0_376;

	not.pred 	%p279, %p25;
	@%p279 bra 	$L__BB0_374;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2515;
  cvt.f32.f16 %f409, low;}

	// end inline asm
	add.s32 	%r1760, %r770, %r399;
	mul.wide.s32 	%rd353, %r1760, 4;
	add.s64 	%rd354, %rd34, %rd353;
	st.global.f32 	[%rd354], %f409;

$L__BB0_374:
	not.pred 	%p280, %p27;
	@%p280 bra 	$L__BB0_376;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2515;
  cvt.f32.f16 %f410, high;}

	// end inline asm
	add.s32 	%r1762, %r770, %r400;
	mul.wide.s32 	%rd355, %r1762, 4;
	add.s64 	%rd356, %rd34, %rd355;
	st.global.f32 	[%rd356], %f410;

$L__BB0_376:
	add.s32 	%r771, %r765, 1;
	add.s32 	%r1763, %r771, %r767;
	mul.lo.s32 	%r1764, %r1763, %r54;
	sub.s32 	%r772, %r1764, %r936;
	@%p28 bra 	$L__BB0_381;

	not.pred 	%p282, %p24;
	@%p282 bra 	$L__BB0_379;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2512;
  cvt.f32.f16 %f411, low;}

	// end inline asm
	add.s32 	%r1766, %r772, %r397;
	mul.wide.s32 	%rd357, %r1766, 4;
	add.s64 	%rd358, %rd34, %rd357;
	st.global.f32 	[%rd358], %f411;

$L__BB0_379:
	not.pred 	%p283, %p26;
	@%p283 bra 	$L__BB0_381;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2512;
  cvt.f32.f16 %f412, high;}

	// end inline asm
	add.s32 	%r1768, %r772, %r398;
	mul.wide.s32 	%rd359, %r1768, 4;
	add.s64 	%rd360, %rd34, %rd359;
	st.global.f32 	[%rd360], %f412;

$L__BB0_381:
	@%p28 bra 	$L__BB0_386;

	not.pred 	%p285, %p25;
	@%p285 bra 	$L__BB0_384;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2510;
  cvt.f32.f16 %f413, low;}

	// end inline asm
	add.s32 	%r1770, %r772, %r399;
	mul.wide.s32 	%rd361, %r1770, 4;
	add.s64 	%rd362, %rd34, %rd361;
	st.global.f32 	[%rd362], %f413;

$L__BB0_384:
	not.pred 	%p286, %p27;
	@%p286 bra 	$L__BB0_386;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2510;
  cvt.f32.f16 %f414, high;}

	// end inline asm
	add.s32 	%r1772, %r772, %r400;
	mul.wide.s32 	%rd363, %r1772, 4;
	add.s64 	%rd364, %rd34, %rd363;
	st.global.f32 	[%rd364], %f414;

$L__BB0_386:
	add.s32 	%r773, %r764, -1;
	add.s32 	%r1773, %r773, %r766;
	mov.u32 	%r1774, 8;
	sub.s32 	%r1775, %r1774, %r934;
	add.s32 	%r1776, %r1775, %r935;
	mul.lo.s32 	%r774, %r1773, %r1776;
	add.s32 	%r1777, %r765, %r774;
	add.s32 	%r1778, %r1777, -1;
	mul.lo.s32 	%r1779, %r1778, %r54;
	sub.s32 	%r775, %r1779, %r936;
	@%p28 bra 	$L__BB0_391;

	not.pred 	%p288, %p24;
	@%p288 bra 	$L__BB0_389;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2478;
  cvt.f32.f16 %f415, low;}

	// end inline asm
	add.s32 	%r1781, %r775, %r397;
	mul.wide.s32 	%rd365, %r1781, 4;
	add.s64 	%rd366, %rd34, %rd365;
	st.global.f32 	[%rd366], %f415;

$L__BB0_389:
	not.pred 	%p289, %p26;
	@%p289 bra 	$L__BB0_391;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2478;
  cvt.f32.f16 %f416, high;}

	// end inline asm
	add.s32 	%r1783, %r775, %r398;
	mul.wide.s32 	%rd367, %r1783, 4;
	add.s64 	%rd368, %rd34, %rd367;
	st.global.f32 	[%rd368], %f416;

$L__BB0_391:
	@%p28 bra 	$L__BB0_396;

	not.pred 	%p291, %p25;
	@%p291 bra 	$L__BB0_394;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2476;
  cvt.f32.f16 %f417, low;}

	// end inline asm
	add.s32 	%r1785, %r775, %r399;
	mul.wide.s32 	%rd369, %r1785, 4;
	add.s64 	%rd370, %rd34, %rd369;
	st.global.f32 	[%rd370], %f417;

$L__BB0_394:
	not.pred 	%p292, %p27;
	@%p292 bra 	$L__BB0_396;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2476;
  cvt.f32.f16 %f418, high;}

	// end inline asm
	add.s32 	%r1787, %r775, %r400;
	mul.wide.s32 	%rd371, %r1787, 4;
	add.s64 	%rd372, %rd34, %rd371;
	st.global.f32 	[%rd372], %f418;

$L__BB0_396:
	add.s32 	%r2309, %r764, -1;
	mov.u32 	%r1788, 8;
	sub.s32 	%r1789, %r1788, %r934;
	add.s32 	%r1790, %r1789, %r935;
	add.s32 	%r1791, %r2309, %r769;
	mul.lo.s32 	%r776, %r1791, %r1790;
	add.s32 	%r1792, %r765, %r776;
	add.s32 	%r1793, %r1792, -1;
	mul.lo.s32 	%r1794, %r1793, %r54;
	sub.s32 	%r777, %r1794, %r936;
	@%p28 bra 	$L__BB0_401;

	not.pred 	%p294, %p24;
	@%p294 bra 	$L__BB0_399;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2508;
  cvt.f32.f16 %f419, low;}

	// end inline asm
	add.s32 	%r1796, %r777, %r397;
	mul.wide.s32 	%rd373, %r1796, 4;
	add.s64 	%rd374, %rd34, %rd373;
	st.global.f32 	[%rd374], %f419;

$L__BB0_399:
	not.pred 	%p295, %p26;
	@%p295 bra 	$L__BB0_401;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2508;
  cvt.f32.f16 %f420, high;}

	// end inline asm
	add.s32 	%r1798, %r777, %r398;
	mul.wide.s32 	%rd375, %r1798, 4;
	add.s64 	%rd376, %rd34, %rd375;
	st.global.f32 	[%rd376], %f420;

$L__BB0_401:
	@%p28 bra 	$L__BB0_406;

	not.pred 	%p297, %p25;
	@%p297 bra 	$L__BB0_404;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2506;
  cvt.f32.f16 %f421, low;}

	// end inline asm
	add.s32 	%r1800, %r777, %r399;
	mul.wide.s32 	%rd377, %r1800, 4;
	add.s64 	%rd378, %rd34, %rd377;
	st.global.f32 	[%rd378], %f421;

$L__BB0_404:
	not.pred 	%p298, %p27;
	@%p298 bra 	$L__BB0_406;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2506;
  cvt.f32.f16 %f422, high;}

	// end inline asm
	add.s32 	%r1802, %r777, %r400;
	mul.wide.s32 	%rd379, %r1802, 4;
	add.s64 	%rd380, %rd34, %rd379;
	st.global.f32 	[%rd380], %f422;

$L__BB0_406:
	mul.lo.s32 	%r1804, %r1777, %r54;
	sub.s32 	%r778, %r1804, %r936;
	@%p28 bra 	$L__BB0_411;

	not.pred 	%p300, %p24;
	@%p300 bra 	$L__BB0_409;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r516;
  cvt.f32.f16 %f423, low;}

	// end inline asm
	add.s32 	%r1806, %r778, %r397;
	mul.wide.s32 	%rd381, %r1806, 4;
	add.s64 	%rd382, %rd34, %rd381;
	st.global.f32 	[%rd382], %f423;

$L__BB0_409:
	not.pred 	%p301, %p26;
	@%p301 bra 	$L__BB0_411;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r516;
  cvt.f32.f16 %f424, high;}

	// end inline asm
	add.s32 	%r1808, %r778, %r398;
	mul.wide.s32 	%rd383, %r1808, 4;
	add.s64 	%rd384, %rd34, %rd383;
	st.global.f32 	[%rd384], %f424;

$L__BB0_411:
	@%p28 bra 	$L__BB0_416;

	not.pred 	%p303, %p25;
	@%p303 bra 	$L__BB0_414;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r509;
  cvt.f32.f16 %f425, low;}

	// end inline asm
	add.s32 	%r1810, %r778, %r399;
	mul.wide.s32 	%rd385, %r1810, 4;
	add.s64 	%rd386, %rd34, %rd385;
	st.global.f32 	[%rd386], %f425;

$L__BB0_414:
	not.pred 	%p304, %p27;
	@%p304 bra 	$L__BB0_416;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r509;
  cvt.f32.f16 %f426, high;}

	// end inline asm
	add.s32 	%r1812, %r778, %r400;
	mul.wide.s32 	%rd387, %r1812, 4;
	add.s64 	%rd388, %rd34, %rd387;
	st.global.f32 	[%rd388], %f426;

$L__BB0_416:
	mul.lo.s32 	%r1814, %r1792, %r54;
	sub.s32 	%r779, %r1814, %r936;
	@%p28 bra 	$L__BB0_421;

	not.pred 	%p306, %p24;
	@%p306 bra 	$L__BB0_419;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r515;
  cvt.f32.f16 %f427, low;}

	// end inline asm
	add.s32 	%r1816, %r779, %r397;
	mul.wide.s32 	%rd389, %r1816, 4;
	add.s64 	%rd390, %rd34, %rd389;
	st.global.f32 	[%rd390], %f427;

$L__BB0_419:
	not.pred 	%p307, %p26;
	@%p307 bra 	$L__BB0_421;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r515;
  cvt.f32.f16 %f428, high;}

	// end inline asm
	add.s32 	%r1818, %r779, %r398;
	mul.wide.s32 	%rd391, %r1818, 4;
	add.s64 	%rd392, %rd34, %rd391;
	st.global.f32 	[%rd392], %f428;

$L__BB0_421:
	@%p28 bra 	$L__BB0_426;

	not.pred 	%p309, %p25;
	@%p309 bra 	$L__BB0_424;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r508;
  cvt.f32.f16 %f429, low;}

	// end inline asm
	add.s32 	%r1820, %r779, %r399;
	mul.wide.s32 	%rd393, %r1820, 4;
	add.s64 	%rd394, %rd34, %rd393;
	st.global.f32 	[%rd394], %f429;

$L__BB0_424:
	not.pred 	%p310, %p27;
	@%p310 bra 	$L__BB0_426;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r508;
  cvt.f32.f16 %f430, high;}

	// end inline asm
	add.s32 	%r1822, %r779, %r400;
	mul.wide.s32 	%rd395, %r1822, 4;
	add.s64 	%rd396, %rd34, %rd395;
	st.global.f32 	[%rd396], %f430;

$L__BB0_426:
	add.s32 	%r2310, %r764, -1;
	mov.u32 	%r1823, 8;
	sub.s32 	%r1824, %r1823, %r932;
	add.s32 	%r1825, %r1824, %r933;
	add.s32 	%r780, %r769, %r1825;
	add.s32 	%r1826, %r2310, %r780;
	sub.s32 	%r1827, %r1823, %r934;
	add.s32 	%r1828, %r1827, %r935;
	mul.lo.s32 	%r781, %r1826, %r1828;
	add.s32 	%r1829, %r765, %r781;
	mul.lo.s32 	%r1830, %r1829, %r54;
	sub.s32 	%r782, %r1830, %r936;
	@%p28 bra 	$L__BB0_431;

	not.pred 	%p312, %p24;
	@%p312 bra 	$L__BB0_429;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2502;
  cvt.f32.f16 %f431, low;}

	// end inline asm
	add.s32 	%r1832, %r782, %r397;
	mul.wide.s32 	%rd397, %r1832, 4;
	add.s64 	%rd398, %rd34, %rd397;
	st.global.f32 	[%rd398], %f431;

$L__BB0_429:
	not.pred 	%p313, %p26;
	@%p313 bra 	$L__BB0_431;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2502;
  cvt.f32.f16 %f432, high;}

	// end inline asm
	add.s32 	%r1834, %r782, %r398;
	mul.wide.s32 	%rd399, %r1834, 4;
	add.s64 	%rd400, %rd34, %rd399;
	st.global.f32 	[%rd400], %f432;

$L__BB0_431:
	@%p28 bra 	$L__BB0_436;

	not.pred 	%p315, %p25;
	@%p315 bra 	$L__BB0_434;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2495;
  cvt.f32.f16 %f433, low;}

	// end inline asm
	add.s32 	%r1836, %r782, %r399;
	mul.wide.s32 	%rd401, %r1836, 4;
	add.s64 	%rd402, %rd34, %rd401;
	st.global.f32 	[%rd402], %f433;

$L__BB0_434:
	not.pred 	%p316, %p27;
	@%p316 bra 	$L__BB0_436;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2495;
  cvt.f32.f16 %f434, high;}

	// end inline asm
	add.s32 	%r1838, %r782, %r400;
	mul.wide.s32 	%rd403, %r1838, 4;
	add.s64 	%rd404, %rd34, %rd403;
	st.global.f32 	[%rd404], %f434;

$L__BB0_436:
	add.s32 	%r2293, %r765, 1;
	add.s32 	%r1839, %r2293, %r774;
	mul.lo.s32 	%r1840, %r1839, %r54;
	sub.s32 	%r783, %r1840, %r936;
	@%p28 bra 	$L__BB0_441;

	not.pred 	%p318, %p24;
	@%p318 bra 	$L__BB0_439;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r502;
  cvt.f32.f16 %f435, low;}

	// end inline asm
	add.s32 	%r1842, %r783, %r397;
	mul.wide.s32 	%rd405, %r1842, 4;
	add.s64 	%rd406, %rd34, %rd405;
	st.global.f32 	[%rd406], %f435;

$L__BB0_439:
	not.pred 	%p319, %p26;
	@%p319 bra 	$L__BB0_441;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r502;
  cvt.f32.f16 %f436, high;}

	// end inline asm
	add.s32 	%r1844, %r783, %r398;
	mul.wide.s32 	%rd407, %r1844, 4;
	add.s64 	%rd408, %rd34, %rd407;
	st.global.f32 	[%rd408], %f436;

$L__BB0_441:
	@%p28 bra 	$L__BB0_446;

	not.pred 	%p321, %p25;
	@%p321 bra 	$L__BB0_444;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r496;
  cvt.f32.f16 %f437, low;}

	// end inline asm
	add.s32 	%r1846, %r783, %r399;
	mul.wide.s32 	%rd409, %r1846, 4;
	add.s64 	%rd410, %rd34, %rd409;
	st.global.f32 	[%rd410], %f437;

$L__BB0_444:
	not.pred 	%p322, %p27;
	@%p322 bra 	$L__BB0_446;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r496;
  cvt.f32.f16 %f438, high;}

	// end inline asm
	add.s32 	%r1848, %r783, %r400;
	mul.wide.s32 	%rd411, %r1848, 4;
	add.s64 	%rd412, %rd34, %rd411;
	st.global.f32 	[%rd412], %f438;

$L__BB0_446:
	add.s32 	%r2294, %r765, 1;
	add.s32 	%r1849, %r2294, %r776;
	mul.lo.s32 	%r1850, %r1849, %r54;
	sub.s32 	%r784, %r1850, %r936;
	@%p28 bra 	$L__BB0_451;

	not.pred 	%p324, %p24;
	@%p324 bra 	$L__BB0_449;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2489;
  cvt.f32.f16 %f439, low;}

	// end inline asm
	add.s32 	%r1852, %r784, %r397;
	mul.wide.s32 	%rd413, %r1852, 4;
	add.s64 	%rd414, %rd34, %rd413;
	st.global.f32 	[%rd414], %f439;

$L__BB0_449:
	not.pred 	%p325, %p26;
	@%p325 bra 	$L__BB0_451;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2489;
  cvt.f32.f16 %f440, high;}

	// end inline asm
	add.s32 	%r1854, %r784, %r398;
	mul.wide.s32 	%rd415, %r1854, 4;
	add.s64 	%rd416, %rd34, %rd415;
	st.global.f32 	[%rd416], %f440;

$L__BB0_451:
	@%p28 bra 	$L__BB0_456;

	not.pred 	%p327, %p25;
	@%p327 bra 	$L__BB0_454;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2483;
  cvt.f32.f16 %f441, low;}

	// end inline asm
	add.s32 	%r1856, %r784, %r399;
	mul.wide.s32 	%rd417, %r1856, 4;
	add.s64 	%rd418, %rd34, %rd417;
	st.global.f32 	[%rd418], %f441;

$L__BB0_454:
	not.pred 	%p328, %p27;
	@%p328 bra 	$L__BB0_456;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2483;
  cvt.f32.f16 %f442, high;}

	// end inline asm
	add.s32 	%r1858, %r784, %r400;
	mul.wide.s32 	%rd419, %r1858, 4;
	add.s64 	%rd420, %rd34, %rd419;
	st.global.f32 	[%rd420], %f442;

$L__BB0_456:
	add.s32 	%r2295, %r765, 1;
	add.s32 	%r1859, %r2295, %r781;
	mul.lo.s32 	%r1860, %r1859, %r54;
	sub.s32 	%r785, %r1860, %r936;
	@%p28 bra 	$L__BB0_461;

	not.pred 	%p330, %p24;
	@%p330 bra 	$L__BB0_459;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2488;
  cvt.f32.f16 %f443, low;}

	// end inline asm
	add.s32 	%r1862, %r785, %r397;
	mul.wide.s32 	%rd421, %r1862, 4;
	add.s64 	%rd422, %rd34, %rd421;
	st.global.f32 	[%rd422], %f443;

$L__BB0_459:
	not.pred 	%p331, %p26;
	@%p331 bra 	$L__BB0_461;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2488;
  cvt.f32.f16 %f444, high;}

	// end inline asm
	add.s32 	%r1864, %r785, %r398;
	mul.wide.s32 	%rd423, %r1864, 4;
	add.s64 	%rd424, %rd34, %rd423;
	st.global.f32 	[%rd424], %f444;

$L__BB0_461:
	@%p28 bra 	$L__BB0_466;

	not.pred 	%p333, %p25;
	@%p333 bra 	$L__BB0_464;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2482;
  cvt.f32.f16 %f445, low;}

	// end inline asm
	add.s32 	%r1866, %r785, %r399;
	mul.wide.s32 	%rd425, %r1866, 4;
	add.s64 	%rd426, %rd34, %rd425;
	st.global.f32 	[%rd426], %f445;

$L__BB0_464:
	not.pred 	%p334, %p27;
	@%p334 bra 	$L__BB0_466;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2482;
  cvt.f32.f16 %f446, high;}

	// end inline asm
	add.s32 	%r1868, %r785, %r400;
	mul.wide.s32 	%rd427, %r1868, 4;
	add.s64 	%rd428, %rd34, %rd427;
	st.global.f32 	[%rd428], %f446;

$L__BB0_466:
	add.s32 	%r786, %r765, 2;
	add.s32 	%r1869, %r786, %r774;
	mul.lo.s32 	%r1870, %r1869, %r54;
	sub.s32 	%r787, %r1870, %r936;
	@%p28 bra 	$L__BB0_471;

	not.pred 	%p336, %p24;
	@%p336 bra 	$L__BB0_469;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2452;
  cvt.f32.f16 %f447, low;}

	// end inline asm
	add.s32 	%r1872, %r787, %r397;
	mul.wide.s32 	%rd429, %r1872, 4;
	add.s64 	%rd430, %rd34, %rd429;
	st.global.f32 	[%rd430], %f447;

$L__BB0_469:
	not.pred 	%p337, %p26;
	@%p337 bra 	$L__BB0_471;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2452;
  cvt.f32.f16 %f448, high;}

	// end inline asm
	add.s32 	%r1874, %r787, %r398;
	mul.wide.s32 	%rd431, %r1874, 4;
	add.s64 	%rd432, %rd34, %rd431;
	st.global.f32 	[%rd432], %f448;

$L__BB0_471:
	@%p28 bra 	$L__BB0_476;

	not.pred 	%p339, %p25;
	@%p339 bra 	$L__BB0_474;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2448;
  cvt.f32.f16 %f449, low;}

	// end inline asm
	add.s32 	%r1876, %r787, %r399;
	mul.wide.s32 	%rd433, %r1876, 4;
	add.s64 	%rd434, %rd34, %rd433;
	st.global.f32 	[%rd434], %f449;

$L__BB0_474:
	not.pred 	%p340, %p27;
	@%p340 bra 	$L__BB0_476;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2448;
  cvt.f32.f16 %f450, high;}

	// end inline asm
	add.s32 	%r1878, %r787, %r400;
	mul.wide.s32 	%rd435, %r1878, 4;
	add.s64 	%rd436, %rd34, %rd435;
	st.global.f32 	[%rd436], %f450;

$L__BB0_476:
	mov.u32 	%r1879, 8;
	sub.s32 	%r1880, %r1879, %r934;
	add.s32 	%r1881, %r1880, %r935;
	mul.lo.s32 	%r788, %r1749, %r1881;
	add.s32 	%r1883, %r765, %r788;
	add.s32 	%r1884, %r1883, -1;
	mul.lo.s32 	%r1885, %r1884, %r54;
	sub.s32 	%r789, %r1885, %r936;
	@%p28 bra 	$L__BB0_481;

	not.pred 	%p342, %p24;
	@%p342 bra 	$L__BB0_479;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r456;
  cvt.f32.f16 %f451, low;}

	// end inline asm
	add.s32 	%r1887, %r789, %r397;
	mul.wide.s32 	%rd437, %r1887, 4;
	add.s64 	%rd438, %rd34, %rd437;
	st.global.f32 	[%rd438], %f451;

$L__BB0_479:
	not.pred 	%p343, %p26;
	@%p343 bra 	$L__BB0_481;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r456;
  cvt.f32.f16 %f452, high;}

	// end inline asm
	add.s32 	%r1889, %r789, %r398;
	mul.wide.s32 	%rd439, %r1889, 4;
	add.s64 	%rd440, %rd34, %rd439;
	st.global.f32 	[%rd440], %f452;

$L__BB0_481:
	@%p28 bra 	$L__BB0_486;

	not.pred 	%p345, %p25;
	@%p345 bra 	$L__BB0_484;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r449;
  cvt.f32.f16 %f453, low;}

	// end inline asm
	add.s32 	%r1891, %r789, %r399;
	mul.wide.s32 	%rd441, %r1891, 4;
	add.s64 	%rd442, %rd34, %rd441;
	st.global.f32 	[%rd442], %f453;

$L__BB0_484:
	not.pred 	%p346, %p27;
	@%p346 bra 	$L__BB0_486;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r449;
  cvt.f32.f16 %f454, high;}

	// end inline asm
	add.s32 	%r1893, %r789, %r400;
	mul.wide.s32 	%rd443, %r1893, 4;
	add.s64 	%rd444, %rd34, %rd443;
	st.global.f32 	[%rd444], %f454;

$L__BB0_486:
	mov.u32 	%r2299, 8;
	sub.s32 	%r2298, %r2299, %r932;
	add.s32 	%r2297, %r2298, %r933;
	add.s32 	%r2296, %r769, %r2297;
	mov.u32 	%r1894, 8;
	sub.s32 	%r1895, %r1894, %r934;
	add.s32 	%r1896, %r1895, %r935;
	add.s32 	%r1897, %r764, %r2296;
	mul.lo.s32 	%r790, %r1897, %r1896;
	add.s32 	%r1898, %r765, %r790;
	add.s32 	%r1899, %r1898, -1;
	mul.lo.s32 	%r1900, %r1899, %r54;
	sub.s32 	%r791, %r1900, %r936;
	@%p28 bra 	$L__BB0_491;

	not.pred 	%p348, %p24;
	@%p348 bra 	$L__BB0_489;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2443;
  cvt.f32.f16 %f455, low;}

	// end inline asm
	add.s32 	%r1902, %r791, %r397;
	mul.wide.s32 	%rd445, %r1902, 4;
	add.s64 	%rd446, %rd34, %rd445;
	st.global.f32 	[%rd446], %f455;

$L__BB0_489:
	not.pred 	%p349, %p26;
	@%p349 bra 	$L__BB0_491;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2443;
  cvt.f32.f16 %f456, high;}

	// end inline asm
	add.s32 	%r1904, %r791, %r398;
	mul.wide.s32 	%rd447, %r1904, 4;
	add.s64 	%rd448, %rd34, %rd447;
	st.global.f32 	[%rd448], %f456;

$L__BB0_491:
	@%p28 bra 	$L__BB0_496;

	not.pred 	%p351, %p25;
	@%p351 bra 	$L__BB0_494;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2436;
  cvt.f32.f16 %f457, low;}

	// end inline asm
	add.s32 	%r1906, %r791, %r399;
	mul.wide.s32 	%rd449, %r1906, 4;
	add.s64 	%rd450, %rd34, %rd449;
	st.global.f32 	[%rd450], %f457;

$L__BB0_494:
	not.pred 	%p352, %p27;
	@%p352 bra 	$L__BB0_496;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2436;
  cvt.f32.f16 %f458, high;}

	// end inline asm
	add.s32 	%r1908, %r791, %r400;
	mul.wide.s32 	%rd451, %r1908, 4;
	add.s64 	%rd452, %rd34, %rd451;
	st.global.f32 	[%rd452], %f458;

$L__BB0_496:
	mov.u32 	%r1909, 8;
	sub.s32 	%r1910, %r1909, %r934;
	add.s32 	%r1911, %r1910, %r935;
	mul.lo.s32 	%r792, %r1732, %r1911;
	add.s32 	%r1913, %r765, %r792;
	mul.lo.s32 	%r1914, %r1913, %r54;
	sub.s32 	%r793, %r1914, %r936;
	@%p28 bra 	$L__BB0_501;

	not.pred 	%p354, %p24;
	@%p354 bra 	$L__BB0_499;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2504;
  cvt.f32.f16 %f459, low;}

	// end inline asm
	add.s32 	%r1916, %r793, %r397;
	mul.wide.s32 	%rd453, %r1916, 4;
	add.s64 	%rd454, %rd34, %rd453;
	st.global.f32 	[%rd454], %f459;

$L__BB0_499:
	not.pred 	%p355, %p26;
	@%p355 bra 	$L__BB0_501;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2504;
  cvt.f32.f16 %f460, high;}

	// end inline asm
	add.s32 	%r1918, %r793, %r398;
	mul.wide.s32 	%rd455, %r1918, 4;
	add.s64 	%rd456, %rd34, %rd455;
	st.global.f32 	[%rd456], %f460;

$L__BB0_501:
	@%p28 bra 	$L__BB0_506;

	not.pred 	%p357, %p25;
	@%p357 bra 	$L__BB0_504;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2497;
  cvt.f32.f16 %f461, low;}

	// end inline asm
	add.s32 	%r1920, %r793, %r399;
	mul.wide.s32 	%rd457, %r1920, 4;
	add.s64 	%rd458, %rd34, %rd457;
	st.global.f32 	[%rd458], %f461;

$L__BB0_504:
	not.pred 	%p358, %p27;
	@%p358 bra 	$L__BB0_506;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2497;
  cvt.f32.f16 %f462, high;}

	// end inline asm
	add.s32 	%r1922, %r793, %r400;
	mul.wide.s32 	%rd459, %r1922, 4;
	add.s64 	%rd460, %rd34, %rd459;
	st.global.f32 	[%rd460], %f462;

$L__BB0_506:
	mul.lo.s32 	%r1924, %r1883, %r54;
	sub.s32 	%r794, %r1924, %r936;
	@%p28 bra 	$L__BB0_511;

	not.pred 	%p360, %p24;
	@%p360 bra 	$L__BB0_509;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2503;
  cvt.f32.f16 %f463, low;}

	// end inline asm
	add.s32 	%r1926, %r794, %r397;
	mul.wide.s32 	%rd461, %r1926, 4;
	add.s64 	%rd462, %rd34, %rd461;
	st.global.f32 	[%rd462], %f463;

$L__BB0_509:
	not.pred 	%p361, %p26;
	@%p361 bra 	$L__BB0_511;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2503;
  cvt.f32.f16 %f464, high;}

	// end inline asm
	add.s32 	%r1928, %r794, %r398;
	mul.wide.s32 	%rd463, %r1928, 4;
	add.s64 	%rd464, %rd34, %rd463;
	st.global.f32 	[%rd464], %f464;

$L__BB0_511:
	@%p28 bra 	$L__BB0_516;

	not.pred 	%p363, %p25;
	@%p363 bra 	$L__BB0_514;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2496;
  cvt.f32.f16 %f465, low;}

	// end inline asm
	add.s32 	%r1930, %r794, %r399;
	mul.wide.s32 	%rd465, %r1930, 4;
	add.s64 	%rd466, %rd34, %rd465;
	st.global.f32 	[%rd466], %f465;

$L__BB0_514:
	not.pred 	%p364, %p27;
	@%p364 bra 	$L__BB0_516;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2496;
  cvt.f32.f16 %f466, high;}

	// end inline asm
	add.s32 	%r1932, %r794, %r400;
	mul.wide.s32 	%rd467, %r1932, 4;
	add.s64 	%rd468, %rd34, %rd467;
	st.global.f32 	[%rd468], %f466;

$L__BB0_516:
	mul.lo.s32 	%r1934, %r1898, %r54;
	sub.s32 	%r795, %r1934, %r936;
	@%p28 bra 	$L__BB0_521;

	not.pred 	%p366, %p24;
	@%p366 bra 	$L__BB0_519;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r485;
  cvt.f32.f16 %f467, low;}

	// end inline asm
	add.s32 	%r1936, %r795, %r397;
	mul.wide.s32 	%rd469, %r1936, 4;
	add.s64 	%rd470, %rd34, %rd469;
	st.global.f32 	[%rd470], %f467;

$L__BB0_519:
	not.pred 	%p367, %p26;
	@%p367 bra 	$L__BB0_521;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r485;
  cvt.f32.f16 %f468, high;}

	// end inline asm
	add.s32 	%r1938, %r795, %r398;
	mul.wide.s32 	%rd471, %r1938, 4;
	add.s64 	%rd472, %rd34, %rd471;
	st.global.f32 	[%rd472], %f468;

$L__BB0_521:
	@%p28 bra 	$L__BB0_526;

	not.pred 	%p369, %p25;
	@%p369 bra 	$L__BB0_524;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r478;
  cvt.f32.f16 %f469, low;}

	// end inline asm
	add.s32 	%r1940, %r795, %r399;
	mul.wide.s32 	%rd473, %r1940, 4;
	add.s64 	%rd474, %rd34, %rd473;
	st.global.f32 	[%rd474], %f469;

$L__BB0_524:
	not.pred 	%p370, %p27;
	@%p370 bra 	$L__BB0_526;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r478;
  cvt.f32.f16 %f470, high;}

	// end inline asm
	add.s32 	%r1942, %r795, %r400;
	mul.wide.s32 	%rd475, %r1942, 4;
	add.s64 	%rd476, %rd34, %rd475;
	st.global.f32 	[%rd476], %f470;

$L__BB0_526:
	add.s32 	%r2300, %r765, 1;
	add.s32 	%r1943, %r2300, %r792;
	mul.lo.s32 	%r1944, %r1943, %r54;
	sub.s32 	%r796, %r1944, %r936;
	@%p28 bra 	$L__BB0_531;

	not.pred 	%p372, %p24;
	@%p372 bra 	$L__BB0_529;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2490;
  cvt.f32.f16 %f471, low;}

	// end inline asm
	add.s32 	%r1946, %r796, %r397;
	mul.wide.s32 	%rd477, %r1946, 4;
	add.s64 	%rd478, %rd34, %rd477;
	st.global.f32 	[%rd478], %f471;

$L__BB0_529:
	not.pred 	%p373, %p26;
	@%p373 bra 	$L__BB0_531;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2490;
  cvt.f32.f16 %f472, high;}

	// end inline asm
	add.s32 	%r1948, %r796, %r398;
	mul.wide.s32 	%rd479, %r1948, 4;
	add.s64 	%rd480, %rd34, %rd479;
	st.global.f32 	[%rd480], %f472;

$L__BB0_531:
	@%p28 bra 	$L__BB0_536;

	not.pred 	%p375, %p25;
	@%p375 bra 	$L__BB0_534;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2484;
  cvt.f32.f16 %f473, low;}

	// end inline asm
	add.s32 	%r1950, %r796, %r399;
	mul.wide.s32 	%rd481, %r1950, 4;
	add.s64 	%rd482, %rd34, %rd481;
	st.global.f32 	[%rd482], %f473;

$L__BB0_534:
	not.pred 	%p376, %p27;
	@%p376 bra 	$L__BB0_536;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2484;
  cvt.f32.f16 %f474, high;}

	// end inline asm
	add.s32 	%r1952, %r796, %r400;
	mul.wide.s32 	%rd483, %r1952, 4;
	add.s64 	%rd484, %rd34, %rd483;
	st.global.f32 	[%rd484], %f474;

$L__BB0_536:
	add.s32 	%r2301, %r765, 1;
	add.s32 	%r1953, %r2301, %r788;
	mul.lo.s32 	%r1954, %r1953, %r54;
	sub.s32 	%r797, %r1954, %r936;
	@%p28 bra 	$L__BB0_541;

	not.pred 	%p378, %p24;
	@%p378 bra 	$L__BB0_539;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r433;
  cvt.f32.f16 %f475, low;}

	// end inline asm
	add.s32 	%r1956, %r797, %r397;
	mul.wide.s32 	%rd485, %r1956, 4;
	add.s64 	%rd486, %rd34, %rd485;
	st.global.f32 	[%rd486], %f475;

$L__BB0_539:
	not.pred 	%p379, %p26;
	@%p379 bra 	$L__BB0_541;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r433;
  cvt.f32.f16 %f476, high;}

	// end inline asm
	add.s32 	%r1958, %r797, %r398;
	mul.wide.s32 	%rd487, %r1958, 4;
	add.s64 	%rd488, %rd34, %rd487;
	st.global.f32 	[%rd488], %f476;

$L__BB0_541:
	@%p28 bra 	$L__BB0_546;

	not.pred 	%p381, %p25;
	@%p381 bra 	$L__BB0_544;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r425;
  cvt.f32.f16 %f477, low;}

	// end inline asm
	add.s32 	%r1960, %r797, %r399;
	mul.wide.s32 	%rd489, %r1960, 4;
	add.s64 	%rd490, %rd34, %rd489;
	st.global.f32 	[%rd490], %f477;

$L__BB0_544:
	not.pred 	%p382, %p27;
	@%p382 bra 	$L__BB0_546;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r425;
  cvt.f32.f16 %f478, high;}

	// end inline asm
	add.s32 	%r1962, %r797, %r400;
	mul.wide.s32 	%rd491, %r1962, 4;
	add.s64 	%rd492, %rd34, %rd491;
	st.global.f32 	[%rd492], %f478;

$L__BB0_546:
	add.s32 	%r2302, %r765, 1;
	add.s32 	%r1963, %r2302, %r790;
	mul.lo.s32 	%r1964, %r1963, %r54;
	sub.s32 	%r798, %r1964, %r936;
	@%p28 bra 	$L__BB0_551;

	not.pred 	%p384, %p24;
	@%p384 bra 	$L__BB0_549;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r472;
  cvt.f32.f16 %f479, low;}

	// end inline asm
	add.s32 	%r1966, %r798, %r397;
	mul.wide.s32 	%rd493, %r1966, 4;
	add.s64 	%rd494, %rd34, %rd493;
	st.global.f32 	[%rd494], %f479;

$L__BB0_549:
	not.pred 	%p385, %p26;
	@%p385 bra 	$L__BB0_551;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r472;
  cvt.f32.f16 %f480, high;}

	// end inline asm
	add.s32 	%r1968, %r798, %r398;
	mul.wide.s32 	%rd495, %r1968, 4;
	add.s64 	%rd496, %rd34, %rd495;
	st.global.f32 	[%rd496], %f480;

$L__BB0_551:
	@%p28 bra 	$L__BB0_556;

	not.pred 	%p387, %p25;
	@%p387 bra 	$L__BB0_554;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r468;
  cvt.f32.f16 %f481, low;}

	// end inline asm
	add.s32 	%r1970, %r798, %r399;
	mul.wide.s32 	%rd497, %r1970, 4;
	add.s64 	%rd498, %rd34, %rd497;
	st.global.f32 	[%rd498], %f481;

$L__BB0_554:
	not.pred 	%p388, %p27;
	@%p388 bra 	$L__BB0_556;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r468;
  cvt.f32.f16 %f482, high;}

	// end inline asm
	add.s32 	%r1972, %r798, %r400;
	mul.wide.s32 	%rd499, %r1972, 4;
	add.s64 	%rd500, %rd34, %rd499;
	st.global.f32 	[%rd500], %f482;

$L__BB0_556:
	add.s32 	%r2311, %r765, 2;
	add.s32 	%r1973, %r2311, %r790;
	mul.lo.s32 	%r1974, %r1973, %r54;
	sub.s32 	%r799, %r1974, %r936;
	@%p28 bra 	$L__BB0_561;

	not.pred 	%p390, %p24;
	@%p390 bra 	$L__BB0_559;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2406;
  cvt.f32.f16 %f483, low;}

	// end inline asm
	add.s32 	%r1976, %r799, %r397;
	mul.wide.s32 	%rd501, %r1976, 4;
	add.s64 	%rd502, %rd34, %rd501;
	st.global.f32 	[%rd502], %f483;

$L__BB0_559:
	not.pred 	%p391, %p26;
	@%p391 bra 	$L__BB0_561;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2406;
  cvt.f32.f16 %f484, high;}

	// end inline asm
	add.s32 	%r1978, %r799, %r398;
	mul.wide.s32 	%rd503, %r1978, 4;
	add.s64 	%rd504, %rd34, %rd503;
	st.global.f32 	[%rd504], %f484;

$L__BB0_561:
	@%p28 bra 	$L__BB0_566;

	not.pred 	%p393, %p25;
	@%p393 bra 	$L__BB0_564;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2402;
  cvt.f32.f16 %f485, low;}

	// end inline asm
	add.s32 	%r1980, %r799, %r399;
	mul.wide.s32 	%rd505, %r1980, 4;
	add.s64 	%rd506, %rd34, %rd505;
	st.global.f32 	[%rd506], %f485;

$L__BB0_564:
	not.pred 	%p394, %p27;
	@%p394 bra 	$L__BB0_566;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2402;
  cvt.f32.f16 %f486, high;}

	// end inline asm
	add.s32 	%r1982, %r799, %r400;
	mul.wide.s32 	%rd507, %r1982, 4;
	add.s64 	%rd508, %rd34, %rd507;
	st.global.f32 	[%rd508], %f486;

$L__BB0_566:
	add.s32 	%r800, %r764, 1;
	add.s32 	%r1983, %r800, %r769;
	mov.u32 	%r1984, 8;
	sub.s32 	%r1985, %r1984, %r934;
	add.s32 	%r1986, %r1985, %r935;
	mad.lo.s32 	%r1987, %r1983, %r1986, %r765;
	mul.lo.s32 	%r1988, %r1987, %r54;
	sub.s32 	%r801, %r1988, %r936;
	@%p28 bra 	$L__BB0_571;

	not.pred 	%p396, %p24;
	@%p396 bra 	$L__BB0_569;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2474;
  cvt.f32.f16 %f487, low;}

	// end inline asm
	add.s32 	%r1990, %r801, %r397;
	mul.wide.s32 	%rd509, %r1990, 4;
	add.s64 	%rd510, %rd34, %rd509;
	st.global.f32 	[%rd510], %f487;

$L__BB0_569:
	not.pred 	%p397, %p26;
	@%p397 bra 	$L__BB0_571;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2474;
  cvt.f32.f16 %f488, high;}

	// end inline asm
	add.s32 	%r1992, %r801, %r398;
	mul.wide.s32 	%rd511, %r1992, 4;
	add.s64 	%rd512, %rd34, %rd511;
	st.global.f32 	[%rd512], %f488;

$L__BB0_571:
	@%p28 bra 	$L__BB0_576;

	not.pred 	%p399, %p25;
	@%p399 bra 	$L__BB0_574;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2467;
  cvt.f32.f16 %f489, low;}

	// end inline asm
	add.s32 	%r1994, %r801, %r399;
	mul.wide.s32 	%rd513, %r1994, 4;
	add.s64 	%rd514, %rd34, %rd513;
	st.global.f32 	[%rd514], %f489;

$L__BB0_574:
	not.pred 	%p400, %p27;
	@%p400 bra 	$L__BB0_576;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2467;
  cvt.f32.f16 %f490, high;}

	// end inline asm
	add.s32 	%r1996, %r801, %r400;
	mul.wide.s32 	%rd515, %r1996, 4;
	add.s64 	%rd516, %rd34, %rd515;
	st.global.f32 	[%rd516], %f490;

$L__BB0_576:
	mov.u32 	%r2306, 8;
	sub.s32 	%r2305, %r2306, %r932;
	add.s32 	%r2304, %r2305, %r933;
	add.s32 	%r2303, %r769, %r2304;
	mov.u32 	%r1997, 8;
	sub.s32 	%r1998, %r1997, %r934;
	add.s32 	%r1999, %r1998, %r935;
	add.s32 	%r2000, %r800, %r2303;
	mul.lo.s32 	%r802, %r2000, %r1999;
	add.s32 	%r2001, %r765, %r802;
	mul.lo.s32 	%r2002, %r2001, %r54;
	sub.s32 	%r803, %r2002, %r936;
	@%p28 bra 	$L__BB0_581;

	not.pred 	%p402, %p24;
	@%p402 bra 	$L__BB0_579;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2473;
  cvt.f32.f16 %f491, low;}

	// end inline asm
	add.s32 	%r2004, %r803, %r397;
	mul.wide.s32 	%rd517, %r2004, 4;
	add.s64 	%rd518, %rd34, %rd517;
	st.global.f32 	[%rd518], %f491;

$L__BB0_579:
	not.pred 	%p403, %p26;
	@%p403 bra 	$L__BB0_581;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2473;
  cvt.f32.f16 %f492, high;}

	// end inline asm
	add.s32 	%r2006, %r803, %r398;
	mul.wide.s32 	%rd519, %r2006, 4;
	add.s64 	%rd520, %rd34, %rd519;
	st.global.f32 	[%rd520], %f492;

$L__BB0_581:
	@%p28 bra 	$L__BB0_586;

	not.pred 	%p405, %p25;
	@%p405 bra 	$L__BB0_584;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2466;
  cvt.f32.f16 %f493, low;}

	// end inline asm
	add.s32 	%r2008, %r803, %r399;
	mul.wide.s32 	%rd521, %r2008, 4;
	add.s64 	%rd522, %rd34, %rd521;
	st.global.f32 	[%rd522], %f493;

$L__BB0_584:
	not.pred 	%p406, %p27;
	@%p406 bra 	$L__BB0_586;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2466;
  cvt.f32.f16 %f494, high;}

	// end inline asm
	add.s32 	%r2010, %r803, %r400;
	mul.wide.s32 	%rd523, %r2010, 4;
	add.s64 	%rd524, %rd34, %rd523;
	st.global.f32 	[%rd524], %f494;

$L__BB0_586:
	add.s32 	%r2307, %r765, 1;
	add.s32 	%r2011, %r2307, %r802;
	mul.lo.s32 	%r2012, %r2011, %r54;
	sub.s32 	%r804, %r2012, %r936;
	@%p28 bra 	$L__BB0_591;

	not.pred 	%p408, %p24;
	@%p408 bra 	$L__BB0_589;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2460;
  cvt.f32.f16 %f495, low;}

	// end inline asm
	add.s32 	%r2014, %r804, %r397;
	mul.wide.s32 	%rd525, %r2014, 4;
	add.s64 	%rd526, %rd34, %rd525;
	st.global.f32 	[%rd526], %f495;

$L__BB0_589:
	not.pred 	%p409, %p26;
	@%p409 bra 	$L__BB0_591;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2460;
  cvt.f32.f16 %f496, high;}

	// end inline asm
	add.s32 	%r2016, %r804, %r398;
	mul.wide.s32 	%rd527, %r2016, 4;
	add.s64 	%rd528, %rd34, %rd527;
	st.global.f32 	[%rd528], %f496;

$L__BB0_591:
	@%p28 bra 	$L__BB0_596;

	not.pred 	%p411, %p25;
	@%p411 bra 	$L__BB0_594;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2456;
  cvt.f32.f16 %f497, low;}

	// end inline asm
	add.s32 	%r2018, %r804, %r399;
	mul.wide.s32 	%rd529, %r2018, 4;
	add.s64 	%rd530, %rd34, %rd529;
	st.global.f32 	[%rd530], %f497;

$L__BB0_594:
	not.pred 	%p412, %p27;
	@%p412 bra 	$L__BB0_596;

	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2456;
  cvt.f32.f16 %f498, high;}

	// end inline asm
	add.s32 	%r2020, %r804, %r400;
	mul.wide.s32 	%rd531, %r2020, 4;
	add.s64 	%rd532, %rd34, %rd531;
	st.global.f32 	[%rd532], %f498;

$L__BB0_596:
	setp.eq.s32 	%p413, %r40, %r1385;
	@%p413 bra 	$L__BB0_598;

	mad.lo.s32 	%r2021, %r919, %r40, %r41;
	mov.u32 	%r2022, _ZN6kernel5shmemE;
	mad.lo.s32 	%r2023, %r2021, 1280, %r2022;
	add.s32 	%r2024, %r2023, -256;
	shl.b32 	%r2025, %r45, 4;
	add.s32 	%r2026, %r2024, %r2025;
	st.shared.v4.u32 	[%r2026+256], {%r2478, %r2476, %r2443, %r2436};
	st.shared.v4.u32 	[%r2026+1024], {%r2520, %r2516, %r2502, %r2495};
	shl.b32 	%r2027, %r45, 3;
	add.s32 	%r2028, %r2024, %r2027;
	st.shared.v2.u32 	[%r2028+768], {%r2508, %r2506};

$L__BB0_598:
	setp.eq.s32 	%p414, %r41, %r1390;
	@%p414 bra 	$L__BB0_602;

	mad.lo.s32 	%r2032, %r918, 384, -64;
	mul.lo.s32 	%r2033, %r2032, %r41;
	mad.lo.s32 	%r2035, %r1386, %r1385, %r2033;
	mad.lo.s32 	%r2036, %r1473, 384, %r2035;
	shl.b32 	%r2037, %r2036, 2;
	mov.u32 	%r2038, _ZN6kernel5shmemE;
	add.s32 	%r2039, %r2038, %r2037;
	add.s32 	%r2040, %r2039, -256;
	shl.b32 	%r2041, %r45, 4;
	add.s32 	%r2042, %r2040, %r2041;
	st.shared.v4.u32 	[%r2042+256], {%r2512, %r2510, %r2488, %r2482};
	st.shared.v4.u32 	[%r2042+1024], {%r2452, %r2448, %r2406, %r2402};
	shl.b32 	%r2043, %r45, 3;
	add.s32 	%r807, %r2040, %r2043;
	@%p413 bra 	$L__BB0_601;

	st.shared.v2.u32 	[%r807], {%r2519, %r2515};

$L__BB0_601:
	st.shared.v2.u32 	[%r807+768], {%r2489, %r2483};

$L__BB0_602:
	setp.ne.s32 	%p416, %r40, %r1385;
	@%p416 bra 	$L__BB0_604;

	ld.param.u64 	%rd569, [%rd1+104];
	cvta.to.global.u64 	%rd568, %rd569;
	mad.lo.s32 	%r2045, %r534, %r921, %r43;
	mul.lo.s32 	%r2046, %r919, %r2045;
	mul.lo.s32 	%r2047, %r2046, 768;
	mad.lo.s32 	%r2048, %r41, 384, %r2047;
	add.s32 	%r2049, %r2048, -64;
	mul.wide.s32 	%rd534, %r2049, 4;
	add.s64 	%rd535, %rd568, %rd534;
	add.s64 	%rd537, %rd535, %rd298;
	st.global.v4.u32 	[%rd537+256], {%r2478, %r2476, %r2443, %r2436};
	st.global.v4.u32 	[%rd537+1024], {%r2520, %r2516, %r2502, %r2495};
	add.s64 	%rd539, %rd535, %rd300;
	st.global.v2.u32 	[%rd539+768], {%r2508, %r2506};
	st.global.v2.u32 	[%rd539+1536], {%r2519, %r2515};

$L__BB0_604:
	setp.ne.s32 	%p417, %r41, %r1390;
	@%p417 bra 	$L__BB0_609;

	ld.param.u64 	%rd571, [%rd1+104];
	cvta.to.global.u64 	%rd570, %rd571;
	mad.lo.s32 	%r2052, %r535, %r920, %r42;
	mul.lo.s32 	%r2056, %r2052, %r997;
	mad.lo.s32 	%r2059, %r1473, 384, %r2056;
	add.s32 	%r2060, %r2059, -64;
	mad.lo.s32 	%r2063, %r999, %r65, %r2060;
	mul.wide.s32 	%rd540, %r2063, 4;
	add.s64 	%rd541, %rd570, %rd540;
	add.s64 	%rd543, %rd541, %rd298;
	st.global.v4.u32 	[%rd543+256], {%r2512, %r2510, %r2488, %r2482};
	st.global.v4.u32 	[%rd543+1024], {%r2452, %r2448, %r2406, %r2402};
	add.s64 	%rd37, %rd541, %rd300;
	@%p413 bra 	$L__BB0_607;

	st.global.v2.u32 	[%rd37], {%r2519, %r2515};

$L__BB0_607:
	st.global.v2.u32 	[%rd37+768], {%r2489, %r2483};
	@%p239 bra 	$L__BB0_609;

	st.global.v2.u32 	[%rd37+1536], {%r2586, %r2584};

$L__BB0_609:
	setp.ge.s32 	%p420, %r40, %r1385;
	@%p420 bra 	$L__BB0_611;

	mul.lo.s32 	%r2064, %r919, 320;
	mul.lo.s32 	%r2065, %r41, 320;
	mad.lo.s32 	%r2066, %r2064, %r40, %r2065;
	add.s32 	%r2070, %r996, -64;
	mad.lo.s32 	%r2074, %r2070, %r1390, %r1387;
	add.s32 	%r2075, %r2066, %r2074;
	shl.b32 	%r2076, %r2075, 2;
	mov.u32 	%r2077, _ZN6kernel5shmemE;
	add.s32 	%r2078, %r2077, %r2076;
	shl.b32 	%r2079, %r45, 4;
	add.s32 	%r2080, %r2078, %r2079;
	st.shared.v4.u32 	[%r2080], {%r2635, %r2634, %r2630, %r2628};
	shl.b32 	%r2081, %r45, 3;
	add.s32 	%r2082, %r2078, %r2081;
	st.shared.v2.u32 	[%r2082+512], {%r2507, %r2505};
	st.shared.v4.u32 	[%r2080+768], {%r2518, %r2514, %r2498, %r2491};

$L__BB0_611:
	setp.ge.s32 	%p421, %r41, %r1390;
	@%p421 bra 	$L__BB0_615;

	mad.lo.s32 	%r2088, %r1473, 384, %r1393;
	mad.lo.s32 	%r2091, %r1388, %r41, %r2088;
	add.s32 	%r2097, %r2091, %r1391;
	shl.b32 	%r2098, %r2097, 2;
	mov.u32 	%r2099, _ZN6kernel5shmemE;
	add.s32 	%r2100, %r2099, %r2098;
	shl.b32 	%r2101, %r45, 3;
	add.s32 	%r2102, %r2100, %r2101;
	@%p420 bra 	$L__BB0_614;

	add.s32 	%r2290, %r2102, -256;
	st.shared.v2.u32 	[%r2290], {%r2517, %r2513};

$L__BB0_614:
	shl.b32 	%r2121, %r45, 4;
	add.s32 	%r2122, %r2100, %r2121;
	st.shared.v4.u32 	[%r2122], {%r2511, %r2509, %r2485, %r2479};
	add.s32 	%r2291, %r2102, -256;
	st.shared.v2.u32 	[%r2291+768], {%r2486, %r2480};
	st.shared.v4.u32 	[%r2122+768], {%r2633, %r2632, %r2621, %r2620};

$L__BB0_615:
	bar.sync 	0;
	@%p234 bra 	$L__BB0_617;

	mul.lo.s32 	%r2123, %r919, 320;
	add.s32 	%r2124, %r40, -1;
	mul.lo.s32 	%r2125, %r41, 320;
	mad.lo.s32 	%r2126, %r2123, %r2124, %r2125;
	shl.b32 	%r2127, %r2126, 2;
	mov.u32 	%r2128, _ZN6kernel5shmemE;
	add.s32 	%r2129, %r2128, %r2127;
	add.s32 	%r2130, %r2129, -256;
	shl.b32 	%r2131, %r45, 4;
	add.s32 	%r2132, %r2130, %r2131;
	ld.shared.v4.u32 	{%r2641, %r2639, %r2642, %r2643}, [%r2132+256];
	ld.shared.v4.u32 	{%r2645, %r2644, %r2637, %r2636}, [%r2132+1024];
	shl.b32 	%r2141, %r45, 3;
	add.s32 	%r2142, %r2130, %r2141;
	ld.shared.v2.u32 	{%r2640, %r2638}, [%r2142+768];

$L__BB0_617:
	@%p237 bra 	$L__BB0_620;

	mad.lo.s32 	%r2147, %r918, 384, -64;
	add.s32 	%r2148, %r41, -1;
	mul.lo.s32 	%r2149, %r2147, %r2148;
	mad.lo.s32 	%r2152, %r1386, %r1385, %r2149;
	mad.lo.s32 	%r2153, %r1473, 384, %r2152;
	shl.b32 	%r2154, %r2153, 2;
	mov.u32 	%r2155, _ZN6kernel5shmemE;
	add.s32 	%r2156, %r2155, %r2154;
	add.s32 	%r2157, %r2156, -256;
	shl.b32 	%r2158, %r45, 4;
	add.s32 	%r2159, %r2157, %r2158;
	ld.shared.v4.u32 	{%r2657, %r2656, %r2654, %r2652}, [%r2159+256];
	ld.shared.v4.u32 	{%r2651, %r2650, %r2646, %r2649}, [%r2159+1024];
	shl.b32 	%r2168, %r45, 3;
	add.s32 	%r2169, %r2157, %r2168;
	ld.shared.v2.u32 	{%r2655, %r2653}, [%r2169+768];
	@%p234 bra 	$L__BB0_620;

	add.s32 	%r2292, %r2169, 768;
	ld.shared.v2.u32 	{%r2574, %r2576}, [%r2292+768];

$L__BB0_620:
	ld.param.u64 	%rd545, [%rd1+104];
	cvta.to.global.u64 	%rd38, %rd545;
	mov.u32 	%r2681, %r2428;
	mov.u32 	%r2663, %r2548;
	mov.u32 	%r2665, %r2550;
	mov.u32 	%r2409, %r2552;
	mov.u32 	%r2683, %r2423;
	mov.u32 	%r2417, %r2553;
	mov.u32 	%r2670, %r2554;
	mov.u32 	%r2671, %r2555;
	mov.u32 	%r2672, %r2556;
	mov.u32 	%r2673, %r2557;
	mov.u32 	%r2688, %r2570;
	mov.u32 	%r2689, %r2571;
	@%p239 bra 	$L__BB0_624;

	mad.lo.s32 	%r2175, %r534, %r921, %r43;
	mad.lo.s32 	%r2176, %r2175, 768, 384;
	mul.lo.s32 	%r2177, %r2176, %r919;
	mad.lo.s32 	%r2178, %r41, 384, %r2177;
	add.s32 	%r2179, %r2178, -128;
	mul.wide.s32 	%rd546, %r2179, 4;
	add.s64 	%rd547, %rd38, %rd546;
	add.s64 	%rd549, %rd547, %rd298;
	add.s64 	%rd39, %rd549, 512;
	mov.u32 	%r2681, %r2428;
	mov.u32 	%r2683, %r2423;
	mov.u32 	%r2688, %r2570;
	mov.u32 	%r2689, %r2571;
	@%p237 bra 	$L__BB0_623;

	ld.global.v4.u32 	{%r2688, %r2689, %r2681, %r2683}, [%rd39+-512];

$L__BB0_623:
	ld.global.v4.u32 	{%r2671, %r2673, %r2670, %r2672}, [%rd39];
	ld.global.v4.u32 	{%r2417, %r2409, %r2665, %r2663}, [%rd39+512];
	ld.global.v4.u32 	{%r2551, %r2549, %r2559, %r2558}, [%rd39+1024];

$L__BB0_624:
	mov.u32 	%r2393, %r2560;
	mov.u32 	%r2397, %r2561;
	mov.u32 	%r2398, %r2562;
	mov.u32 	%r2415, %r2564;
	mov.u32 	%r2433, %r2566;
	mov.u32 	%r2685, %r2567;
	mov.u32 	%r2440, %r2568;
	mov.u32 	%r2687, %r2569;
	@%p242 bra 	$L__BB0_626;

	mad.lo.s32 	%r2197, %r535, %r920, %r42;
	mad.lo.s32 	%r2203, %r1473, 384, %r66;
	mad.lo.s32 	%r2204, %r2197, %r997, %r2203;
	mad.lo.s32 	%r2207, %r999, %r65, %r2204;
	mul.wide.s32 	%rd550, %r2207, 4;
	add.s64 	%rd551, %rd38, %rd550;
	add.s64 	%rd553, %rd551, %rd298;
	ld.global.v4.u32 	{%r2687, %r2685, %r2398, %r2397}, [%rd553+512];
	ld.global.v4.u32 	{%r2440, %r2433, %r2393, %r2415}, [%rd553+1024];
	ld.global.v4.u32 	{%r2688, %r2689, %r2681, %r2683}, [%rd553+1536];

$L__BB0_626:
	add.s32 	%r914, %r2521, 1;
	bar.sync 	0;
	@%p413 bra 	$L__BB0_629;

	setp.ne.s32 	%p443, %r41, %r1390;
	shl.b32 	%r2221, %r41, 8;
	shl.b32 	%r2225, %r919, 8;
	or.b32  	%r2226, %r2225, 128;
	mad.lo.s32 	%r2227, %r2226, %r40, %r1393;
	add.s32 	%r2228, %r2227, %r2221;
	shl.b32 	%r2229, %r2228, 2;
	mov.u32 	%r2230, _ZN6kernel5shmemE;
	add.s32 	%r2231, %r2230, %r2229;
	shl.b32 	%r2232, %r45, 4;
	add.s32 	%r915, %r2231, %r2232;
	st.shared.v4.u32 	[%r915], {%r2569, %r2567, %r2442, %r2435};
	st.shared.v4.u32 	[%r915+512], {%r2477, %r2475, %r2471, %r2464};
	@%p443 bra 	$L__BB0_629;

	st.shared.v4.u32 	[%r915+1024], {%r2472, %r2465, %r2501, %r2494};

$L__BB0_629:
	setp.eq.s32 	%p441, %r41, %r1390;
	@%p441 bra 	$L__BB0_631;

	mul.lo.s32 	%r2236, %r1473, 384;
	mad.lo.s32 	%r2237, %r66, %r41, %r2236;
	mad.lo.s32 	%r2240, %r1388, %r1390, %r2237;
	mad.lo.s32 	%r2243, %r1386, %r1385, %r2240;
	shl.b32 	%r2244, %r2243, 2;
	mov.u32 	%r2245, _ZN6kernel5shmemE;
	add.s32 	%r2246, %r2245, %r2244;
	shl.b32 	%r2247, %r45, 4;
	add.s32 	%r2248, %r2246, %r2247;
	st.shared.v4.u32 	[%r2248], {%r2472, %r2465, %r2501, %r2494};
	st.shared.v4.u32 	[%r2248+512], {%r2459, %r2455, %r2419, %r2411};
	st.shared.v4.u32 	[%r2248+1024], {%r2458, %r2454, %r2550, %r2548};

$L__BB0_631:
	setp.ne.s32 	%p442, %r40, %r1385;
	ld.param.u64 	%rd554, [%rd1+104];
	cvta.to.global.u64 	%rd40, %rd554;
	@%p442 bra 	$L__BB0_633;

	mad.lo.s32 	%r2250, %r534, %r921, %r43;
	mad.lo.s32 	%r2251, %r2250, 768, 384;
	mul.lo.s32 	%r2252, %r2251, %r919;
	mad.lo.s32 	%r2253, %r41, 384, %r2252;
	add.s32 	%r2254, %r2253, -128;
	mul.wide.s32 	%rd555, %r2254, 4;
	add.s64 	%rd556, %rd40, %rd555;
	add.s64 	%rd558, %rd556, %rd298;
	st.global.v4.u32 	[%rd558+512], {%r2569, %r2567, %r2442, %r2435};
	st.global.v4.u32 	[%rd558+1024], {%r2477, %r2475, %r2471, %r2464};
	st.global.v4.u32 	[%rd558+1536], {%r2472, %r2465, %r2501, %r2494};

$L__BB0_633:
	setp.ne.s32 	%p444, %r41, %r1390;
	@%p444 bra 	$L__BB0_636;

	mad.lo.s32 	%r2256, %r535, %r920, %r42;
	mad.lo.s32 	%r2262, %r1473, 384, %r66;
	mad.lo.s32 	%r2263, %r2256, %r997, %r2262;
	mad.lo.s32 	%r2266, %r999, %r65, %r2263;
	mul.wide.s32 	%rd559, %r2266, 4;
	add.s64 	%rd560, %rd40, %rd559;
	add.s64 	%rd41, %rd560, %rd298;
	st.global.v4.u32 	[%rd41], {%r2472, %r2465, %r2501, %r2494};
	st.global.v4.u32 	[%rd41+512], {%r2459, %r2455, %r2419, %r2411};
	st.global.v4.u32 	[%rd41+1024], {%r2458, %r2454, %r2550, %r2548};
	@%p239 bra 	$L__BB0_636;

	st.global.v4.u32 	[%rd41+1536], {%r2551, %r2549, %r2559, %r2558};

$L__BB0_636:
	rem.s32 	%r2267, %r2521, %r922;
	setp.eq.s32 	%p435, %r2267, 0;
	@%p435 bra 	$L__BB0_638;

	bar.sync 	0;
	bra.uni 	$L__BB0_645;

$L__BB0_638:
	@%p218 bra 	$L__BB0_640;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_640:
	bar.sync 	0;
	@%p219 bra 	$L__BB0_644;

	membar.gl;
	setp.eq.s32 	%p438, %r402, %r403;
	mov.u32 	%r2282, -2147483647;
	sub.s32 	%r2283, %r2282, %r401;
	selp.b32 	%r2271, %r2283, 1, %p438;
	// begin inline asm
	atom.add.release.gpu.u32 %r2270,[%rd28],%r2271;
	// end inline asm

$L__BB0_642:
	ld.volatile.u32 	%r2284, [%rd28];
	xor.b32  	%r2285, %r2284, %r2270;
	setp.gt.s32 	%p439, %r2285, -1;
	@%p439 bra 	$L__BB0_642;

	// begin inline asm
	ld.acquire.gpu.u32 %r2286,[%rd28];
	// end inline asm

$L__BB0_644:
	bar.sync 	0;

$L__BB0_645:
	setp.lt.s32 	%p440, %r914, %r48;
	mov.u32 	%r2394, %r2570;
	mov.u32 	%r2548, %r2663;
	mov.u32 	%r2402, %r2636;
	mov.u32 	%r2550, %r2665;
	mov.u32 	%r2406, %r2637;
	mov.u32 	%r2408, %r2571;
	mov.u32 	%r2410, %r2557;
	mov.u32 	%r2411, %r2556;
	mov.u32 	%r2418, %r2555;
	mov.u32 	%r2419, %r2554;
	mov.u32 	%r2554, %r2670;
	mov.u32 	%r2555, %r2671;
	mov.u32 	%r2567, %r2685;
	mov.u32 	%r2435, %r2561;
	mov.u32 	%r2436, %r2652;
	mov.u32 	%r2556, %r2672;
	mov.u32 	%r2557, %r2673;
	mov.u32 	%r2569, %r2687;
	mov.u32 	%r2442, %r2562;
	mov.u32 	%r2443, %r2654;
	mov.u32 	%r2570, %r2688;
	mov.u32 	%r2448, %r2644;
	mov.u32 	%r2571, %r2689;
	mov.u32 	%r2452, %r2645;
	mov.u32 	%r2454, %r2552;
	mov.u32 	%r2455, %r422;
	mov.u32 	%r2458, %r2553;
	mov.u32 	%r2459, %r430;
	mov.u32 	%r2464, %r436;
	mov.u32 	%r2465, %r437;
	mov.u32 	%r2471, %r441;
	mov.u32 	%r2472, %r442;
	mov.u32 	%r2475, %r2566;
	mov.u32 	%r2476, %r2656;
	mov.u32 	%r2477, %r2568;
	mov.u32 	%r2478, %r2657;
	mov.u32 	%r2479, %r465;
	mov.u32 	%r2480, %r2622;
	mov.u32 	%r2482, %r468;
	mov.u32 	%r2483, %r425;
	mov.u32 	%r2485, %r469;
	mov.u32 	%r2486, %r2624;
	mov.u32 	%r2488, %r472;
	mov.u32 	%r2489, %r433;
	mov.u32 	%r2491, %r473;
	mov.u32 	%r2494, %r475;
	mov.u32 	%r2495, %r478;
	mov.u32 	%r2498, %r480;
	mov.u32 	%r2501, %r482;
	mov.u32 	%r2502, %r485;
	mov.u32 	%r2505, %r2629;
	mov.u32 	%r2506, %r449;
	mov.u32 	%r2507, %r2631;
	mov.u32 	%r2508, %r456;
	mov.u32 	%r2509, %r493;
	mov.u32 	%r2510, %r496;
	mov.u32 	%r2511, %r499;
	mov.u32 	%r2512, %r502;
	mov.u32 	%r2513, %r504;
	mov.u32 	%r2514, %r505;
	mov.u32 	%r2515, %r508;
	mov.u32 	%r2516, %r509;
	mov.u32 	%r2517, %r511;
	mov.u32 	%r2518, %r512;
	mov.u32 	%r2519, %r515;
	mov.u32 	%r2520, %r516;
	mov.u32 	%r2521, %r914;
	@%p440 bra 	$L__BB0_323;

$L__BB0_646:
	ret;

}

