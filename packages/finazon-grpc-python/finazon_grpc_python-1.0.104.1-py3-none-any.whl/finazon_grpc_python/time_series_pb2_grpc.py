# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from finazon_grpc_python import time_series_pb2 as finazon__grpc__python_dot_time__series__pb2


class TimeSeriesServiceStub(object):
    """*
    TimeSeriesService provide access to time series data
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTimeSeries = channel.unary_unary(
                '/finazon.TimeSeriesService/GetTimeSeries',
                request_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesRequest.SerializeToString,
                response_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesResponse.FromString,
                )
        self.GetTimeSeriesAtr = channel.unary_unary(
                '/finazon.TimeSeriesService/GetTimeSeriesAtr',
                request_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesAtrRequest.SerializeToString,
                response_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesAtrResponse.FromString,
                )
        self.GetTimeSeriesBBands = channel.unary_unary(
                '/finazon.TimeSeriesService/GetTimeSeriesBBands',
                request_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesBBandsRequest.SerializeToString,
                response_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesBBandsResponse.FromString,
                )
        self.GetTimeSeriesIchimoku = channel.unary_unary(
                '/finazon.TimeSeriesService/GetTimeSeriesIchimoku',
                request_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesIchimokuRequest.SerializeToString,
                response_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesIchimokuResponse.FromString,
                )
        self.GetTimeSeriesMa = channel.unary_unary(
                '/finazon.TimeSeriesService/GetTimeSeriesMa',
                request_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesMaRequest.SerializeToString,
                response_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesMaResponse.FromString,
                )
        self.GetTimeSeriesMacd = channel.unary_unary(
                '/finazon.TimeSeriesService/GetTimeSeriesMacd',
                request_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesMacdRequest.SerializeToString,
                response_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesMacdResponse.FromString,
                )
        self.GetTimeSeriesObv = channel.unary_unary(
                '/finazon.TimeSeriesService/GetTimeSeriesObv',
                request_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesObvRequest.SerializeToString,
                response_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesObvResponse.FromString,
                )
        self.GetTimeSeriesRsi = channel.unary_unary(
                '/finazon.TimeSeriesService/GetTimeSeriesRsi',
                request_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesRsiRequest.SerializeToString,
                response_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesRsiResponse.FromString,
                )
        self.GetTimeSeriesSar = channel.unary_unary(
                '/finazon.TimeSeriesService/GetTimeSeriesSar',
                request_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesSarRequest.SerializeToString,
                response_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesSarResponse.FromString,
                )
        self.GetTimeSeriesStoch = channel.unary_unary(
                '/finazon.TimeSeriesService/GetTimeSeriesStoch',
                request_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesStochRequest.SerializeToString,
                response_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesStochResponse.FromString,
                )


class TimeSeriesServiceServicer(object):
    """*
    TimeSeriesService provide access to time series data
    """

    def GetTimeSeries(self, request, context):
        """Get time series data without technical indicators
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSeriesAtr(self, request, context):
        """Get time series data for ATR technical indicator.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSeriesBBands(self, request, context):
        """Get time series data for BBands technical indicator.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSeriesIchimoku(self, request, context):
        """Get time series data for Ichimoku technical indicator.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSeriesMa(self, request, context):
        """Get time series data for Ma technical indicator.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSeriesMacd(self, request, context):
        """Get time series data for Macd technical indicator.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSeriesObv(self, request, context):
        """Get time series data for Obv technical indicator.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSeriesRsi(self, request, context):
        """Get time series data for Rsi technical indicator.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSeriesSar(self, request, context):
        """Get time series data for Sar technical indicator.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSeriesStoch(self, request, context):
        """Get time series data for Stoch technical indicator.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TimeSeriesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTimeSeries': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSeries,
                    request_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesRequest.FromString,
                    response_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesResponse.SerializeToString,
            ),
            'GetTimeSeriesAtr': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSeriesAtr,
                    request_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesAtrRequest.FromString,
                    response_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesAtrResponse.SerializeToString,
            ),
            'GetTimeSeriesBBands': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSeriesBBands,
                    request_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesBBandsRequest.FromString,
                    response_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesBBandsResponse.SerializeToString,
            ),
            'GetTimeSeriesIchimoku': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSeriesIchimoku,
                    request_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesIchimokuRequest.FromString,
                    response_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesIchimokuResponse.SerializeToString,
            ),
            'GetTimeSeriesMa': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSeriesMa,
                    request_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesMaRequest.FromString,
                    response_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesMaResponse.SerializeToString,
            ),
            'GetTimeSeriesMacd': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSeriesMacd,
                    request_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesMacdRequest.FromString,
                    response_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesMacdResponse.SerializeToString,
            ),
            'GetTimeSeriesObv': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSeriesObv,
                    request_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesObvRequest.FromString,
                    response_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesObvResponse.SerializeToString,
            ),
            'GetTimeSeriesRsi': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSeriesRsi,
                    request_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesRsiRequest.FromString,
                    response_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesRsiResponse.SerializeToString,
            ),
            'GetTimeSeriesSar': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSeriesSar,
                    request_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesSarRequest.FromString,
                    response_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesSarResponse.SerializeToString,
            ),
            'GetTimeSeriesStoch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSeriesStoch,
                    request_deserializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesStochRequest.FromString,
                    response_serializer=finazon__grpc__python_dot_time__series__pb2.TimeSeriesStochResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'finazon.TimeSeriesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TimeSeriesService(object):
    """*
    TimeSeriesService provide access to time series data
    """

    @staticmethod
    def GetTimeSeries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/finazon.TimeSeriesService/GetTimeSeries',
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesRequest.SerializeToString,
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeSeriesAtr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/finazon.TimeSeriesService/GetTimeSeriesAtr',
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesAtrRequest.SerializeToString,
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesAtrResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeSeriesBBands(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/finazon.TimeSeriesService/GetTimeSeriesBBands',
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesBBandsRequest.SerializeToString,
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesBBandsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeSeriesIchimoku(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/finazon.TimeSeriesService/GetTimeSeriesIchimoku',
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesIchimokuRequest.SerializeToString,
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesIchimokuResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeSeriesMa(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/finazon.TimeSeriesService/GetTimeSeriesMa',
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesMaRequest.SerializeToString,
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesMaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeSeriesMacd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/finazon.TimeSeriesService/GetTimeSeriesMacd',
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesMacdRequest.SerializeToString,
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesMacdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeSeriesObv(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/finazon.TimeSeriesService/GetTimeSeriesObv',
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesObvRequest.SerializeToString,
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesObvResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeSeriesRsi(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/finazon.TimeSeriesService/GetTimeSeriesRsi',
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesRsiRequest.SerializeToString,
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesRsiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeSeriesSar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/finazon.TimeSeriesService/GetTimeSeriesSar',
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesSarRequest.SerializeToString,
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesSarResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeSeriesStoch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/finazon.TimeSeriesService/GetTimeSeriesStoch',
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesStochRequest.SerializeToString,
            finazon__grpc__python_dot_time__series__pb2.TimeSeriesStochResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
