# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    branches: main
    types: [created, edited]

jobs:
  tests:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.11"]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Run the Tests
        run: |
          tox -e tests
  generate:
    name: Generate JSON-Schemas
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Build JSON Schemas
        run: tox -e generate_json_schemas
        env:
          TARGET_VERSION: ${{ github.ref_name }}
      - name: Push schemas to BO4E-Schemas repo
        uses: cpina/github-action-push-to-another-repository@v1.7.2
        env:
          API_TOKEN_GITHUB: ${{ secrets.BO4E_PYTHON_GENERATE_SCHEMAS }} # this token expires on 2024-10-09
          # token with repo scope
          # https://github.com/Hochfrequenz/BO4E-python/settings/secrets/actions/BO4E_PYTHON_GENERATE_SCHEMAS
        with:
          source-directory: "json_schemas"
          target-directory: "src/bo4e_schemas"
          destination-github-username: "Hochfrequenz"
          destination-repository-name: "BO4E-Schemas"
          user-email: bo4e-schemas@hochfrequenz.de
          target-branch: main
          commit-message: "Update JSON-Schemas - BO4E ${{ github.ref_name }}"
      # This step uses the github API to automatically create a release with the same version tag
      # in the BO4E-Schemas repo. For this we have to retrieve the commits SHA via the API first.
      # For this, we use the lightweight tool jq (https://stedolan.github.io/jq/) to parse the JSON
      # response from the API.
      - name: Tag the new version in BO4E-Schemas
        run: |
          COMMIT_SHA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/Hochfrequenz/BO4E-Schemas/git/refs/heads/main | jq -r '.object.sha')
          step1_response=$(curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/Hochfrequenz/BO4E-Schemas/git/tags \
            -d '{
              "tag": "${{ github.ref_name }}",
              "object": "$COMMIT_SHA",
              "message": "BO4E ${{ github.ref_name }}",
              "type": "commit"
            }')
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/Hochfrequenz/BO4E-Schemas/git/refs \
            -d '{
              "ref": "refs/tags/${{ github.ref_name }}",
              "sha": "$(echo $step1_response | jq -r '.sha')"
            }'
        env:
          GITHUB_TOKEN: ${{ secrets.BO4E_PYTHON_GENERATE_SCHEMAS }} # this token expires on 2024-10-09
  build-n-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ubuntu-latest
    # Specifying a GitHub environment, which is strongly recommended by PyPI: https://docs.pypi.org/trusted-publishers/adding-a-publisher/
    environment: release
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    needs: [tests, generate]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev_requirements/requirements-packaging.txt
      - name: Build wheel and source distributions
        run: python -m build
      - name: Publish distribution üì¶ to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
