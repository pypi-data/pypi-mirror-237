# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../nbs/nbs/utils/06_nums.ipynb.

# %% auto 0
__all__ = ['nextint', 'int2str', 'zeropadint', 'str2int']

# %% ../../../nbs/nbs/utils/06_nums.ipynb 4
from typing import List
from nchr import NIL

# %% ../../../nbs/nbs/utils/06_nums.ipynb 6
def nextint(ints: List[int]) -> int:
    ints = sorted(ints)
    for i, curint in enumerate(ints[:-1]):
        nxtint = ints[i + 1]
        if nxtint - curint > 1:
            return curint + 1
    return max(ints) + 1

# %% ../../../nbs/nbs/utils/06_nums.ipynb 8
def int2str(i: int, n: int = 2) -> str:
    '''Convert integer to string with zero padding.

    Parameters
    ----------
    i : int
        Integer to convert.

    n : int, default: 2
        Minimum number of digits. Default is 2.
        
    Returns
    -------
    str
        Zero-padded string representation of integer.

    See Also
    --------
    zeropadint : Alias for int2str.
    '''
    sall = list('0' * max(n, len(str(i))))
    sall[-len(str(i)):] = str(i)
    return NIL.join(sall)

def zeropadint(i: int, n: int = 2) -> str: return int2str(i, n)
zeropadint.__doc__ = int2str.__doc__.replace('int2str', 'i2s').replace('zeropadint', 'int2str').replace('i2s', 'zeropadint')

# %% ../../../nbs/nbs/utils/06_nums.ipynb 9
def str2int(i: str) -> int:
    '''Convert a string to an integer, ignoring leading zeros.

    Parameters
    ----------
    i : str
        The string to convert.

    Returns
    -------
    int
        The integer representation of the string.
    '''
    return int(i.lstrip('0')) if len(i.lstrip('0')) > 0 else 0
