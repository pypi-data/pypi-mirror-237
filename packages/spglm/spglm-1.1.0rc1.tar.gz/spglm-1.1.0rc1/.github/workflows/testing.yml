name: Continuous Integration
 
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  schedule:
      - cron: '59 23 * * *'
  workflow_dispatch:
    inputs:
      version:
        description: Manual Unittest Run
        default: test
        required: false

jobs:
  unittests:
    env:
      RUN_TEST: pytest spglm --cov spglm -v -n auto -r a --cov-report xml --color yes --cov-append --cov-report term-missing
    name: ${{ matrix.os }}, ${{ matrix.environment-file }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-latest]
        environment-file:
          - ci/39-MIN.yaml
          - ci/310.yaml
          - ci/311.yaml
          - ci/311-DEV.yaml
        include:
          - environment-file: ci/311.yaml
            os: macos-latest
          - environment-file: ci/311.yaml
            os: windows-latest
      fail-fast: false
  
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
       
      - name: setup micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: ${{ matrix.environment-file }}
          micromamba-version: 'latest'
      
      - name: install bleeding edge libpysal & spreg (Ubuntu / latest Python)
        shell: bash -l {0}
        run: |
          pip install git+https://github.com/pysal/libpysal.git@main
          pip install git+https://github.com/pysal/spreg.git@main
        if: matrix.os == 'ubuntu-latest' && contains(matrix.environment-file, 'DEV')
      
      - name: environment info
        shell: bash -l {0}
        run: |
          micromamba info
          micromamba list
      
      - name: run tests
        run: ${{ env.RUN_TEST }}
      
      - name: codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          name: spglm-codecov
