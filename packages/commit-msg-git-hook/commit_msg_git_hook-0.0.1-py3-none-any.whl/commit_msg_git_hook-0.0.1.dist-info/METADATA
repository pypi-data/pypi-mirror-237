Metadata-Version: 2.1
Name: commit_msg_git_hook
Version: 0.0.1
Summary: A set of tools to validate conventional commit messages.
Project-URL: Homepage, https://github.com/pypa/sampleproject
Project-URL: Bug Tracker, https://github.com/pypa/sampleproject/issues
Author-email: Lucio Meira David <lucio.meira@om30.com.br>
License-File: LICENSE
Keywords: ci,commit-msg,git,git hook,git-hook,scan
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Version Control :: Git
Requires-Python: >=3.7
Description-Content-Type: text/markdown

# Commit Message Git Hook

## Installation Instructions

### 1. Using the Local Git Hook `commit-msg`

1. Create a folder called `git-hooks` in your project repository. For example, inside the `.github` directory:

```bash
mkdir -p ./.github/git-hooks
```

2. Create the `commit-msg` git-hook file:

```bash
touch ./.github/git-hooks/commit-msg
```

3. And then paste this content in it:

```bash
#!/usr/bin/env python3

import commit_msg as cm

cm.main()

```

4. Now run the command below in the repository root to set your repository git hooks path:

```bash
git config core.hooksPath .github/git-hooks
```

> **NOTE**: The configuration is local to this repository. Each repo can have its own hooks path.


### 2. Using the Server-Side Scan
