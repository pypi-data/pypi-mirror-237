Metadata-Version: 2.1
Name: cvlayer
Version: 0.16.0
Summary: OpenCV Layer Helper
Home-page: https://github.com/osom8979/cvlayer
Author: zer0
Author-email: osom8979@gmail.com
Maintainer: zer0
Maintainer-email: osom8979@gmail.com
License: MIT License
Project-URL: GitHub: issues, https://github.com/osom8979/cvlayer/issues
Project-URL: GitHub: repo, https://github.com/osom8979/cvlayer
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Software Development
Classifier: Topic :: Utilities
Classifier: License :: OSI Approved :: MIT License
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: pillow
Requires-Dist: shapely
Provides-Extra: headless
Requires-Dist: opencv-python-headless ; extra == 'headless'
Provides-Extra: opencv
Requires-Dist: opencv-python ; extra == 'opencv'

# cvlayer

[![PyPI](https://img.shields.io/pypi/v/cvlayer?style=flat-square)](https://pypi.org/project/cvlayer/)
![PyPI - Python Version](https://img.shields.io/pypi/pyversions/cvlayer?style=flat-square)
[![GitHub](https://img.shields.io/github/license/osom8979/cvlayer?style=flat-square)](https://github.com/osom8979/cvlayer/)

OpenCV Layer Helper

## Install

Install `cvlayer`:
```shell
pip install cvlayer
```

Install `cvlayer` with `opencv-python`:
```shell
pip install cvlayer[opencv]
```

Install `cvlayer` with `opencv-python-headless`:
```shell
pip install cvlayer[headless]
```

## Usage

### CvLayer

Just inherit `cvlayer.CvLayer`.

```python
from cvlayer import CvLayer


class YourApp(CvLayer):
    def func(self, image):
        self.cvl_cvt_color_bgr2hsv(image)
```

### CvWindow

Just inherit `cvlayer.CvWindow`.

```python
from sys import argv

from cvlayer import CvLayer, CvMixin, CvWindow


class YourWindow(CvWindow, CvMixin, CvLayer):
    def __init__(self, source: str):
        super().__init__(source)

    def on_frame(self, image):
        with self.layer("select-roi") as layer:
            self.roi = layer.param("roi").build_select_roi().value
            layer.frame = layer.prev_frame

        with self.layer("hsv") as layer:
            layer.frame = self.cvl_cvt_color_bgr2hsv(layer.prev_frame)

        return self.last_frame


def main(source: str):
    YourWindow(source).run()


if __name__ == "__main__":
    main(argv[1])
```

## License

See the [LICENSE](./LICENSE) file for details. In summary,
**cvlayer** is licensed under the **MIT license**.


