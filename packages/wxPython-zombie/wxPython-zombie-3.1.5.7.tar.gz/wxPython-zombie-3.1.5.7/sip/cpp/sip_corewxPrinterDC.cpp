/*
 * Interface wrapper code.
 *
 * Generated by SIP 6.7.12
 *
 *     
 */

#include "sipAPI_core.h"

        #include <wx/dcprint.h>
    #line 14 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"

        #include <wx/cmndata.h>
    #line 18 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/gdicmn.h>
    #line 21 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
    #include <wx/setup.h>
    #include "wxpy_api.h"
    #line 25 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/gdicmn.h>
    #line 28 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/graphics.h>
    #line 31 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/bitmap.h>
    #line 34 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/palette.h>
    #line 37 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/colour.h>
    #line 40 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/gdicmn.h>
    #line 43 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/dc.h>
    #line 46 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/affinematrix2d.h>
    #line 49 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/pen.h>
    #line 203 "C:\\Users\\stephan\\Desktop\\wxPython-zombie\\sip\\gen\\pen.sip"
        #include "arrayholder.h"
    #line 54 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/brush.h>
    #line 57 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/font.h>
    #line 60 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/dc.h>
    #line 63 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/region.h>
    #line 66 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        
        
    #line 70 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/icon.h>
    #line 73 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/object.h>
    #line 76 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/object.h>
    #line 79 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"
        #include <wx/object.h>
    #line 82 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"


class sipwxPrinterDC : public ::wxPrinterDC
{
public:
    sipwxPrinterDC(const ::wxPrintData&);
    ~sipwxPrinterDC();

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipwxPrinterDC(const sipwxPrinterDC &);
    sipwxPrinterDC &operator = (const sipwxPrinterDC &);
};

sipwxPrinterDC::sipwxPrinterDC(const ::wxPrintData& printData): ::wxPrinterDC(printData), sipPySelf(SIP_NULLPTR)
{
}

sipwxPrinterDC::~sipwxPrinterDC()
{
    sipInstanceDestroyedEx(&sipPySelf);
}


PyDoc_STRVAR(doc_wxPrinterDC_GetPaperRect, "GetPaperRect() -> Rect\n"
"\n"
"Return the rectangle in device coordinates that corresponds to the\n"
"full paper area, including the nonprinting regions of the paper.");

extern "C" {static PyObject *meth_wxPrinterDC_GetPaperRect(PyObject *, PyObject *);}
static PyObject *meth_wxPrinterDC_GetPaperRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const ::wxPrinterDC *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxPrinterDC, &sipCpp))
        {
            ::wxRect*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new ::wxRect(sipCpp->GetPaperRect());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes, sipType_wxRect, SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_PrinterDC, sipName_GetPaperRect, SIP_NULLPTR);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_wxPrinterDC(void *, const sipTypeDef *);}
static void *cast_wxPrinterDC(void *sipCppV, const sipTypeDef *targetType)
{
    ::wxPrinterDC *sipCpp = reinterpret_cast<::wxPrinterDC *>(sipCppV);

    if (targetType == sipType_wxPrinterDC)
        return sipCppV;

    sipCppV = ((const sipClassTypeDef *)sipType_wxDC)->ctd_cast(static_cast<::wxDC *>(sipCpp), targetType);
    if (sipCppV)
        return sipCppV;

    return SIP_NULLPTR;
}


/* Call the instance's destructor. */
extern "C" {static void release_wxPrinterDC(void *, int);}
static void release_wxPrinterDC(void *sipCppV, int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipwxPrinterDC *>(sipCppV);
    else
        delete reinterpret_cast<::wxPrinterDC *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_wxPrinterDC(sipSimpleWrapper *);}
static void dealloc_wxPrinterDC(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipwxPrinterDC *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_wxPrinterDC(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_wxPrinterDC(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_wxPrinterDC(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    sipwxPrinterDC *sipCpp = SIP_NULLPTR;

    {
        const ::wxPrintData* printData;

        static const char *sipKwdList[] = {
            sipName_printData,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J9", sipType_wxPrintData, &printData))
        {

        if (!wxPyCheckForApp()) return NULL;
    #line 207 "C:\\Users\\stephan\\AppData\\Local\\Temp\\tmpa4fufw9u\\build\\_core/sip_corewxPrinterDC.cpp"

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipwxPrinterDC(*printData);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
            {
                delete sipCpp;
                return SIP_NULLPTR;
            }

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_wxPrinterDC[] = {{98, 255, 1}};


static PyMethodDef methods_wxPrinterDC[] = {
    {sipName_GetPaperRect, meth_wxPrinterDC_GetPaperRect, METH_VARARGS, doc_wxPrinterDC_GetPaperRect}
};

sipVariableDef variables_wxPrinterDC[] = {
    {PropertyVariable, sipName_PaperRect, &methods_wxPrinterDC[0], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
};

PyDoc_STRVAR(doc_wxPrinterDC, "PrinterDC(printData)\n"
"\n"
"A printer device context is specific to MSW and Mac, and allows access\n"
"to any printer with a Windows or Macintosh driver.");


sipClassTypeDef sipTypeDef__core_wxPrinterDC = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_wxPrinterDC,
        SIP_NULLPTR,
        SIP_NULLPTR,
    },
    {
        sipNameNr_PrinterDC,
        {0, 0, 1},
        1, methods_wxPrinterDC,
        0, SIP_NULLPTR,
        1, variables_wxPrinterDC,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_wxPrinterDC,
    -1,
    -1,
    supers_wxPrinterDC,
    SIP_NULLPTR,
    init_type_wxPrinterDC,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_wxPrinterDC,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    release_wxPrinterDC,
    cast_wxPrinterDC,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    sizeof (::wxPrinterDC),
};
