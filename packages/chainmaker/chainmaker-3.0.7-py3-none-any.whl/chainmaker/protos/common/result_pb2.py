# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chainmaker/protos/common/result.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n%chainmaker/protos/common/result.proto\x12\x06\x63ommon\"\xb0\x01\n\nTxResponse\x12\"\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x14.common.TxStatusCode\x12\x0f\n\x07message\x18\x02 \x01(\t\x12/\n\x0f\x63ontract_result\x18\x03 \x01(\x0b\x32\x16.common.ContractResult\x12\r\n\x05tx_id\x18\x04 \x01(\t\x12\x14\n\x0ctx_timestamp\x18\x05 \x01(\x03\x12\x17\n\x0ftx_block_height\x18\x06 \x01(\x04\"\x1f\n\x0fSubscribeResult\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\"\x83\x01\n\x06Result\x12\"\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x14.common.TxStatusCode\x12/\n\x0f\x63ontract_result\x18\x02 \x01(\x0b\x32\x16.common.ContractResult\x12\x13\n\x0brw_set_hash\x18\x03 \x01(\x0c\x12\x0f\n\x07message\x18\x04 \x01(\t\"\x80\x01\n\x0e\x43ontractResult\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\x0e\n\x06result\x18\x02 \x01(\x0c\x12\x0f\n\x07message\x18\x03 \x01(\t\x12\x10\n\x08gas_used\x18\x04 \x01(\x04\x12-\n\x0e\x63ontract_event\x18\x05 \x03(\x0b\x32\x15.common.ContractEvent\"O\n\x12PrivateGetContract\x12\x15\n\rcontract_code\x18\x01 \x01(\x0c\x12\x0f\n\x07version\x18\x02 \x01(\t\x12\x11\n\tgas_limit\x18\x03 \x01(\x04\"\x1b\n\x08StrSlice\x12\x0f\n\x07str_arr\x18\x01 \x03(\t\"1\n\tCertInfos\x12$\n\ncert_infos\x18\x01 \x03(\x0b\x32\x10.common.CertInfo\"&\n\x08\x43\x65rtInfo\x12\x0c\n\x04hash\x18\x01 \x01(\t\x12\x0c\n\x04\x63\x65rt\x18\x02 \x01(\x0c\"\x87\x01\n\rContractEvent\x12\r\n\x05topic\x18\x01 \x01(\t\x12\r\n\x05tx_id\x18\x02 \x01(\t\x12\x15\n\rcontract_name\x18\x03 \x01(\t\x12\x18\n\x10\x63ontract_version\x18\x04 \x01(\t\x12\x12\n\nevent_data\x18\x05 \x03(\t\x12\x13\n\x0bindex_count\x18\x06 \x01(\r\"\xc8\x01\n\x11\x43ontractEventInfo\x12\x14\n\x0c\x62lock_height\x18\x01 \x01(\x04\x12\x10\n\x08\x63hain_id\x18\x02 \x01(\t\x12\r\n\x05topic\x18\x03 \x01(\t\x12\r\n\x05tx_id\x18\x04 \x01(\t\x12\x13\n\x0b\x65vent_index\x18\x05 \x01(\r\x12\x15\n\rcontract_name\x18\x06 \x01(\t\x12\x18\n\x10\x63ontract_version\x18\x07 \x01(\t\x12\x12\n\nevent_data\x18\x08 \x03(\t\x12\x13\n\x0bindex_count\x18\t \x01(\r\"K\n\x15\x43ontractEventInfoList\x12\x32\n\x0f\x63ontract_events\x18\x01 \x03(\x0b\x32\x19.common.ContractEventInfo\"m\n\tAliasInfo\x12\r\n\x05\x61lias\x18\x01 \x01(\t\x12\'\n\x08now_cert\x18\x02 \x01(\x0b\x32\x15.common.AliasCertInfo\x12(\n\this_certs\x18\x03 \x03(\x0b\x32\x15.common.AliasCertInfo\"4\n\nAliasInfos\x12&\n\x0b\x61lias_infos\x18\x01 \x03(\x0b\x32\x11.common.AliasInfo\"A\n\rAliasCertInfo\x12\x0c\n\x04hash\x18\x01 \x01(\t\x12\x0c\n\x04\x63\x65rt\x18\x02 \x01(\x0c\x12\x14\n\x0c\x62lock_height\x18\x03 \x01(\x04*\xf6\n\n\x0cTxStatusCode\x12\x0b\n\x07SUCCESS\x10\x00\x12\x0b\n\x07TIMEOUT\x10\x01\x12\x15\n\x11INVALID_PARAMETER\x10\x02\x12\x11\n\rNO_PERMISSION\x10\x03\x12\x11\n\rCONTRACT_FAIL\x10\x04\x12\x12\n\x0eINTERNAL_ERROR\x10\x05\x12%\n!INVALID_CONTRACT_TRANSACTION_TYPE\x10\n\x12,\n(INVALID_CONTRACT_PARAMETER_CONTRACT_NAME\x10\x0b\x12%\n!INVALID_CONTRACT_PARAMETER_METHOD\x10\x0c\x12*\n&INVALID_CONTRACT_PARAMETER_INIT_METHOD\x10\r\x12-\n)INVALID_CONTRACT_PARAMETER_UPGRADE_METHOD\x10\x0e\x12(\n$INVALID_CONTRACT_PARAMETER_BYTE_CODE\x10\x0f\x12+\n\'INVALID_CONTRACT_PARAMETER_RUNTIME_TYPE\x10\x10\x12&\n\"INVALID_CONTRACT_PARAMETER_VERSION\x10\x11\x12\x1e\n\x1aGET_FROM_TX_CONTEXT_FAILED\x10\x14\x12\x1e\n\x1aPUT_INTO_TX_CONTEXT_FAILED\x10\x15\x12!\n\x1d\x43ONTRACT_VERSION_EXIST_FAILED\x10\x16\x12%\n!CONTRACT_VERSION_NOT_EXIST_FAILED\x10\x17\x12\'\n#CONTRACT_BYTE_CODE_NOT_EXIST_FAILED\x10\x18\x12\x19\n\x15MARSHAL_SENDER_FAILED\x10\x19\x12\x1d\n\x19INVOKE_INIT_METHOD_FAILED\x10\x1a\x12 \n\x1cINVOKE_UPGRADE_METHOD_FAILED\x10\x1b\x12\"\n\x1e\x43REATE_RUNTIME_INSTANCE_FAILED\x10\x1c\x12\x1c\n\x18UNMARSHAL_CREATOR_FAILED\x10\x1d\x12\x1b\n\x17UNMARSHAL_SENDER_FAILED\x10\x1e\x12\x18\n\x14GET_SENDER_PK_FAILED\x10\x1f\x12\x19\n\x15GET_CREATOR_PK_FAILED\x10 \x12\x16\n\x12GET_CREATOR_FAILED\x10!\x12\x1b\n\x17GET_CREATOR_CERT_FAILED\x10\"\x12\x1a\n\x16GET_SENDER_CERT_FAILED\x10#\x12\x1a\n\x16\x43ONTRACT_FREEZE_FAILED\x10$\x12\x1c\n\x18\x43ONTRACT_TOO_DEEP_FAILED\x10%\x12\x1a\n\x16\x43ONTRACT_REVOKE_FAILED\x10&\x12!\n\x1d\x43ONTRACT_INVOKE_METHOD_FAILED\x10\'\x12\x0f\n\x0b\x41RCHIVED_TX\x10(\x12\x12\n\x0e\x41RCHIVED_BLOCK\x10)\x12!\n\x1dGAS_BALANCE_NOT_ENOUGH_FAILED\x10*\x12\x15\n\x11GAS_LIMIT_NOT_SET\x10+\x12\x17\n\x13GAS_LIMIT_TOO_SMALL\x10,\x12\x1e\n\x1aGET_ACCOUNT_BALANCE_FAILED\x10-\x12 \n\x1cPARSE_ACCOUNT_BALANCE_FAILED\x10.\x12\x1d\n\x19GET_ACCOUNT_STATUS_FAILED\x10/\x12\x19\n\x15\x41\x43\x43OUNT_STATUS_FROZEN\x10\x30\x12\x1f\n\x1bMAKE_SNAPSHOT_STATUS_FINISH\x10\x31\x12#\n\x1fMAKE_SNAPSHOT_STATUS_UNFINISHED\x10\x32\x42\x45\n\x18org.chainmaker.pb.commonZ)chainmaker.org/chainmaker/pb-go/v3/commonb\x06proto3')

_TXSTATUSCODE = DESCRIPTOR.enum_types_by_name['TxStatusCode']
TxStatusCode = enum_type_wrapper.EnumTypeWrapper(_TXSTATUSCODE)
SUCCESS = 0
TIMEOUT = 1
INVALID_PARAMETER = 2
NO_PERMISSION = 3
CONTRACT_FAIL = 4
INTERNAL_ERROR = 5
INVALID_CONTRACT_TRANSACTION_TYPE = 10
INVALID_CONTRACT_PARAMETER_CONTRACT_NAME = 11
INVALID_CONTRACT_PARAMETER_METHOD = 12
INVALID_CONTRACT_PARAMETER_INIT_METHOD = 13
INVALID_CONTRACT_PARAMETER_UPGRADE_METHOD = 14
INVALID_CONTRACT_PARAMETER_BYTE_CODE = 15
INVALID_CONTRACT_PARAMETER_RUNTIME_TYPE = 16
INVALID_CONTRACT_PARAMETER_VERSION = 17
GET_FROM_TX_CONTEXT_FAILED = 20
PUT_INTO_TX_CONTEXT_FAILED = 21
CONTRACT_VERSION_EXIST_FAILED = 22
CONTRACT_VERSION_NOT_EXIST_FAILED = 23
CONTRACT_BYTE_CODE_NOT_EXIST_FAILED = 24
MARSHAL_SENDER_FAILED = 25
INVOKE_INIT_METHOD_FAILED = 26
INVOKE_UPGRADE_METHOD_FAILED = 27
CREATE_RUNTIME_INSTANCE_FAILED = 28
UNMARSHAL_CREATOR_FAILED = 29
UNMARSHAL_SENDER_FAILED = 30
GET_SENDER_PK_FAILED = 31
GET_CREATOR_PK_FAILED = 32
GET_CREATOR_FAILED = 33
GET_CREATOR_CERT_FAILED = 34
GET_SENDER_CERT_FAILED = 35
CONTRACT_FREEZE_FAILED = 36
CONTRACT_TOO_DEEP_FAILED = 37
CONTRACT_REVOKE_FAILED = 38
CONTRACT_INVOKE_METHOD_FAILED = 39
ARCHIVED_TX = 40
ARCHIVED_BLOCK = 41
GAS_BALANCE_NOT_ENOUGH_FAILED = 42
GAS_LIMIT_NOT_SET = 43
GAS_LIMIT_TOO_SMALL = 44
GET_ACCOUNT_BALANCE_FAILED = 45
PARSE_ACCOUNT_BALANCE_FAILED = 46
GET_ACCOUNT_STATUS_FAILED = 47
ACCOUNT_STATUS_FROZEN = 48
MAKE_SNAPSHOT_STATUS_FINISH = 49
MAKE_SNAPSHOT_STATUS_UNFINISHED = 50


_TXRESPONSE = DESCRIPTOR.message_types_by_name['TxResponse']
_SUBSCRIBERESULT = DESCRIPTOR.message_types_by_name['SubscribeResult']
_RESULT = DESCRIPTOR.message_types_by_name['Result']
_CONTRACTRESULT = DESCRIPTOR.message_types_by_name['ContractResult']
_PRIVATEGETCONTRACT = DESCRIPTOR.message_types_by_name['PrivateGetContract']
_STRSLICE = DESCRIPTOR.message_types_by_name['StrSlice']
_CERTINFOS = DESCRIPTOR.message_types_by_name['CertInfos']
_CERTINFO = DESCRIPTOR.message_types_by_name['CertInfo']
_CONTRACTEVENT = DESCRIPTOR.message_types_by_name['ContractEvent']
_CONTRACTEVENTINFO = DESCRIPTOR.message_types_by_name['ContractEventInfo']
_CONTRACTEVENTINFOLIST = DESCRIPTOR.message_types_by_name['ContractEventInfoList']
_ALIASINFO = DESCRIPTOR.message_types_by_name['AliasInfo']
_ALIASINFOS = DESCRIPTOR.message_types_by_name['AliasInfos']
_ALIASCERTINFO = DESCRIPTOR.message_types_by_name['AliasCertInfo']
TxResponse = _reflection.GeneratedProtocolMessageType('TxResponse', (_message.Message,), {
  'DESCRIPTOR' : _TXRESPONSE,
  '__module__' : 'chainmaker.protos.common.result_pb2'
  # @@protoc_insertion_point(class_scope:common.TxResponse)
  })
_sym_db.RegisterMessage(TxResponse)

SubscribeResult = _reflection.GeneratedProtocolMessageType('SubscribeResult', (_message.Message,), {
  'DESCRIPTOR' : _SUBSCRIBERESULT,
  '__module__' : 'chainmaker.protos.common.result_pb2'
  # @@protoc_insertion_point(class_scope:common.SubscribeResult)
  })
_sym_db.RegisterMessage(SubscribeResult)

Result = _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), {
  'DESCRIPTOR' : _RESULT,
  '__module__' : 'chainmaker.protos.common.result_pb2'
  # @@protoc_insertion_point(class_scope:common.Result)
  })
_sym_db.RegisterMessage(Result)

ContractResult = _reflection.GeneratedProtocolMessageType('ContractResult', (_message.Message,), {
  'DESCRIPTOR' : _CONTRACTRESULT,
  '__module__' : 'chainmaker.protos.common.result_pb2'
  # @@protoc_insertion_point(class_scope:common.ContractResult)
  })
_sym_db.RegisterMessage(ContractResult)

PrivateGetContract = _reflection.GeneratedProtocolMessageType('PrivateGetContract', (_message.Message,), {
  'DESCRIPTOR' : _PRIVATEGETCONTRACT,
  '__module__' : 'chainmaker.protos.common.result_pb2'
  # @@protoc_insertion_point(class_scope:common.PrivateGetContract)
  })
_sym_db.RegisterMessage(PrivateGetContract)

StrSlice = _reflection.GeneratedProtocolMessageType('StrSlice', (_message.Message,), {
  'DESCRIPTOR' : _STRSLICE,
  '__module__' : 'chainmaker.protos.common.result_pb2'
  # @@protoc_insertion_point(class_scope:common.StrSlice)
  })
_sym_db.RegisterMessage(StrSlice)

CertInfos = _reflection.GeneratedProtocolMessageType('CertInfos', (_message.Message,), {
  'DESCRIPTOR' : _CERTINFOS,
  '__module__' : 'chainmaker.protos.common.result_pb2'
  # @@protoc_insertion_point(class_scope:common.CertInfos)
  })
_sym_db.RegisterMessage(CertInfos)

CertInfo = _reflection.GeneratedProtocolMessageType('CertInfo', (_message.Message,), {
  'DESCRIPTOR' : _CERTINFO,
  '__module__' : 'chainmaker.protos.common.result_pb2'
  # @@protoc_insertion_point(class_scope:common.CertInfo)
  })
_sym_db.RegisterMessage(CertInfo)

ContractEvent = _reflection.GeneratedProtocolMessageType('ContractEvent', (_message.Message,), {
  'DESCRIPTOR' : _CONTRACTEVENT,
  '__module__' : 'chainmaker.protos.common.result_pb2'
  # @@protoc_insertion_point(class_scope:common.ContractEvent)
  })
_sym_db.RegisterMessage(ContractEvent)

ContractEventInfo = _reflection.GeneratedProtocolMessageType('ContractEventInfo', (_message.Message,), {
  'DESCRIPTOR' : _CONTRACTEVENTINFO,
  '__module__' : 'chainmaker.protos.common.result_pb2'
  # @@protoc_insertion_point(class_scope:common.ContractEventInfo)
  })
_sym_db.RegisterMessage(ContractEventInfo)

ContractEventInfoList = _reflection.GeneratedProtocolMessageType('ContractEventInfoList', (_message.Message,), {
  'DESCRIPTOR' : _CONTRACTEVENTINFOLIST,
  '__module__' : 'chainmaker.protos.common.result_pb2'
  # @@protoc_insertion_point(class_scope:common.ContractEventInfoList)
  })
_sym_db.RegisterMessage(ContractEventInfoList)

AliasInfo = _reflection.GeneratedProtocolMessageType('AliasInfo', (_message.Message,), {
  'DESCRIPTOR' : _ALIASINFO,
  '__module__' : 'chainmaker.protos.common.result_pb2'
  # @@protoc_insertion_point(class_scope:common.AliasInfo)
  })
_sym_db.RegisterMessage(AliasInfo)

AliasInfos = _reflection.GeneratedProtocolMessageType('AliasInfos', (_message.Message,), {
  'DESCRIPTOR' : _ALIASINFOS,
  '__module__' : 'chainmaker.protos.common.result_pb2'
  # @@protoc_insertion_point(class_scope:common.AliasInfos)
  })
_sym_db.RegisterMessage(AliasInfos)

AliasCertInfo = _reflection.GeneratedProtocolMessageType('AliasCertInfo', (_message.Message,), {
  'DESCRIPTOR' : _ALIASCERTINFO,
  '__module__' : 'chainmaker.protos.common.result_pb2'
  # @@protoc_insertion_point(class_scope:common.AliasCertInfo)
  })
_sym_db.RegisterMessage(AliasCertInfo)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\030org.chainmaker.pb.commonZ)chainmaker.org/chainmaker/pb-go/v3/common'
  _TXSTATUSCODE._serialized_start=1378
  _TXSTATUSCODE._serialized_end=2776
  _TXRESPONSE._serialized_start=50
  _TXRESPONSE._serialized_end=226
  _SUBSCRIBERESULT._serialized_start=228
  _SUBSCRIBERESULT._serialized_end=259
  _RESULT._serialized_start=262
  _RESULT._serialized_end=393
  _CONTRACTRESULT._serialized_start=396
  _CONTRACTRESULT._serialized_end=524
  _PRIVATEGETCONTRACT._serialized_start=526
  _PRIVATEGETCONTRACT._serialized_end=605
  _STRSLICE._serialized_start=607
  _STRSLICE._serialized_end=634
  _CERTINFOS._serialized_start=636
  _CERTINFOS._serialized_end=685
  _CERTINFO._serialized_start=687
  _CERTINFO._serialized_end=725
  _CONTRACTEVENT._serialized_start=728
  _CONTRACTEVENT._serialized_end=863
  _CONTRACTEVENTINFO._serialized_start=866
  _CONTRACTEVENTINFO._serialized_end=1066
  _CONTRACTEVENTINFOLIST._serialized_start=1068
  _CONTRACTEVENTINFOLIST._serialized_end=1143
  _ALIASINFO._serialized_start=1145
  _ALIASINFO._serialized_end=1254
  _ALIASINFOS._serialized_start=1256
  _ALIASINFOS._serialized_end=1308
  _ALIASCERTINFO._serialized_start=1310
  _ALIASCERTINFO._serialized_end=1375
# @@protoc_insertion_point(module_scope)
