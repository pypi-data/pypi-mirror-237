# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chainmaker/protos/common/block.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from chainmaker.protos.accesscontrol import member_pb2 as chainmaker_dot_protos_dot_accesscontrol_dot_member__pb2
from chainmaker.protos.common import rwset_pb2 as chainmaker_dot_protos_dot_common_dot_rwset__pb2
from chainmaker.protos.common import transaction_pb2 as chainmaker_dot_protos_dot_common_dot_transaction__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n$chainmaker/protos/common/block.proto\x12\x06\x63ommon\x1a,chainmaker/protos/accesscontrol/member.proto\x1a$chainmaker/protos/common/rwset.proto\x1a*chainmaker/protos/common/transaction.proto\"\x99\x01\n\x05\x42lock\x12#\n\x06header\x18\x01 \x01(\x0b\x32\x13.common.BlockHeader\x12\x18\n\x03\x64\x61g\x18\x02 \x01(\x0b\x32\x0b.common.DAG\x12 \n\x03txs\x18\x03 \x03(\x0b\x32\x13.common.Transaction\x12/\n\x0f\x61\x64\x64itional_data\x18\x04 \x01(\x0b\x32\x16.common.AdditionalData\"N\n\tBlockInfo\x12\x1c\n\x05\x62lock\x18\x01 \x01(\x0b\x32\r.common.Block\x12#\n\nrwset_list\x18\x02 \x03(\x0b\x32\x0f.common.TxRWSet\"}\n\x0e\x41\x64\x64itionalData\x12\x39\n\nextra_data\x18\x01 \x03(\x0b\x32%.common.AdditionalData.ExtraDataEntry\x1a\x30\n\x0e\x45xtraDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\"/\n\x0bTxBatchInfo\x12\x11\n\tbatch_ids\x18\x01 \x03(\t\x12\r\n\x05index\x18\x02 \x03(\r\"\xef\x02\n\x0b\x42lockHeader\x12\x15\n\rblock_version\x18\x01 \x01(\r\x12%\n\nblock_type\x18\x02 \x01(\x0e\x32\x11.common.BlockType\x12\x10\n\x08\x63hain_id\x18\x03 \x01(\t\x12\x14\n\x0c\x62lock_height\x18\x04 \x01(\x04\x12\x12\n\nblock_hash\x18\x05 \x01(\x0c\x12\x16\n\x0epre_block_hash\x18\x06 \x01(\x0c\x12\x17\n\x0fpre_conf_height\x18\x07 \x01(\x04\x12\x10\n\x08tx_count\x18\x08 \x01(\r\x12\x0f\n\x07tx_root\x18\t \x01(\x0c\x12\x10\n\x08\x64\x61g_hash\x18\n \x01(\x0c\x12\x13\n\x0brw_set_root\x18\x0b \x01(\x0c\x12\x17\n\x0f\x62lock_timestamp\x18\x0c \x01(\x03\x12\x16\n\x0e\x63onsensus_args\x18\r \x01(\x0c\x12\'\n\x08proposer\x18\x0e \x01(\x0b\x32\x15.accesscontrol.Member\x12\x11\n\tsignature\x18\x0f \x01(\x0c\"L\n\x03\x44\x41G\x12&\n\x08vertexes\x18\x02 \x03(\x0b\x32\x14.common.DAG.Neighbor\x1a\x1d\n\x08Neighbor\x12\x11\n\tneighbors\x18\x01 \x03(\r*Y\n\tBlockType\x12\x10\n\x0cNORMAL_BLOCK\x10\x00\x12\x10\n\x0c\x43ONFIG_BLOCK\x10\x01\x12\x16\n\x12\x43ONTRACT_MGR_BLOCK\x10\x02\x12\x10\n\x0cHAS_COINBASE\x10\x04\x42V\n\x18org.chainmaker.pb.commonB\x0f\x43hainmakerBlockZ)chainmaker.org/chainmaker/pb-go/v3/commonb\x06proto3')

_BLOCKTYPE = DESCRIPTOR.enum_types_by_name['BlockType']
BlockType = enum_type_wrapper.EnumTypeWrapper(_BLOCKTYPE)
NORMAL_BLOCK = 0
CONFIG_BLOCK = 1
CONTRACT_MGR_BLOCK = 2
HAS_COINBASE = 4


_BLOCK = DESCRIPTOR.message_types_by_name['Block']
_BLOCKINFO = DESCRIPTOR.message_types_by_name['BlockInfo']
_ADDITIONALDATA = DESCRIPTOR.message_types_by_name['AdditionalData']
_ADDITIONALDATA_EXTRADATAENTRY = _ADDITIONALDATA.nested_types_by_name['ExtraDataEntry']
_TXBATCHINFO = DESCRIPTOR.message_types_by_name['TxBatchInfo']
_BLOCKHEADER = DESCRIPTOR.message_types_by_name['BlockHeader']
_DAG = DESCRIPTOR.message_types_by_name['DAG']
_DAG_NEIGHBOR = _DAG.nested_types_by_name['Neighbor']
Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {
  'DESCRIPTOR' : _BLOCK,
  '__module__' : 'chainmaker.protos.common.block_pb2'
  # @@protoc_insertion_point(class_scope:common.Block)
  })
_sym_db.RegisterMessage(Block)

BlockInfo = _reflection.GeneratedProtocolMessageType('BlockInfo', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKINFO,
  '__module__' : 'chainmaker.protos.common.block_pb2'
  # @@protoc_insertion_point(class_scope:common.BlockInfo)
  })
_sym_db.RegisterMessage(BlockInfo)

AdditionalData = _reflection.GeneratedProtocolMessageType('AdditionalData', (_message.Message,), {

  'ExtraDataEntry' : _reflection.GeneratedProtocolMessageType('ExtraDataEntry', (_message.Message,), {
    'DESCRIPTOR' : _ADDITIONALDATA_EXTRADATAENTRY,
    '__module__' : 'chainmaker.protos.common.block_pb2'
    # @@protoc_insertion_point(class_scope:common.AdditionalData.ExtraDataEntry)
    })
  ,
  'DESCRIPTOR' : _ADDITIONALDATA,
  '__module__' : 'chainmaker.protos.common.block_pb2'
  # @@protoc_insertion_point(class_scope:common.AdditionalData)
  })
_sym_db.RegisterMessage(AdditionalData)
_sym_db.RegisterMessage(AdditionalData.ExtraDataEntry)

TxBatchInfo = _reflection.GeneratedProtocolMessageType('TxBatchInfo', (_message.Message,), {
  'DESCRIPTOR' : _TXBATCHINFO,
  '__module__' : 'chainmaker.protos.common.block_pb2'
  # @@protoc_insertion_point(class_scope:common.TxBatchInfo)
  })
_sym_db.RegisterMessage(TxBatchInfo)

BlockHeader = _reflection.GeneratedProtocolMessageType('BlockHeader', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKHEADER,
  '__module__' : 'chainmaker.protos.common.block_pb2'
  # @@protoc_insertion_point(class_scope:common.BlockHeader)
  })
_sym_db.RegisterMessage(BlockHeader)

DAG = _reflection.GeneratedProtocolMessageType('DAG', (_message.Message,), {

  'Neighbor' : _reflection.GeneratedProtocolMessageType('Neighbor', (_message.Message,), {
    'DESCRIPTOR' : _DAG_NEIGHBOR,
    '__module__' : 'chainmaker.protos.common.block_pb2'
    # @@protoc_insertion_point(class_scope:common.DAG.Neighbor)
    })
  ,
  'DESCRIPTOR' : _DAG,
  '__module__' : 'chainmaker.protos.common.block_pb2'
  # @@protoc_insertion_point(class_scope:common.DAG)
  })
_sym_db.RegisterMessage(DAG)
_sym_db.RegisterMessage(DAG.Neighbor)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\030org.chainmaker.pb.commonB\017ChainmakerBlockZ)chainmaker.org/chainmaker/pb-go/v3/common'
  _ADDITIONALDATA_EXTRADATAENTRY._options = None
  _ADDITIONALDATA_EXTRADATAENTRY._serialized_options = b'8\001'
  _BLOCKTYPE._serialized_start=1036
  _BLOCKTYPE._serialized_end=1125
  _BLOCK._serialized_start=177
  _BLOCK._serialized_end=330
  _BLOCKINFO._serialized_start=332
  _BLOCKINFO._serialized_end=410
  _ADDITIONALDATA._serialized_start=412
  _ADDITIONALDATA._serialized_end=537
  _ADDITIONALDATA_EXTRADATAENTRY._serialized_start=489
  _ADDITIONALDATA_EXTRADATAENTRY._serialized_end=537
  _TXBATCHINFO._serialized_start=539
  _TXBATCHINFO._serialized_end=586
  _BLOCKHEADER._serialized_start=589
  _BLOCKHEADER._serialized_end=956
  _DAG._serialized_start=958
  _DAG._serialized_end=1034
  _DAG_NEIGHBOR._serialized_start=1005
  _DAG_NEIGHBOR._serialized_end=1034
# @@protoc_insertion_point(module_scope)
