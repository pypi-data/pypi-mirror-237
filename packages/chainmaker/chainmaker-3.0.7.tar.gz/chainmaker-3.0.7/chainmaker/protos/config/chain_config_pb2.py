# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chainmaker/protos/config/chain_config.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from chainmaker.protos.consensus import consensus_pb2 as chainmaker_dot_protos_dot_consensus_dot_consensus__pb2
from chainmaker.protos.accesscontrol import policy_pb2 as chainmaker_dot_protos_dot_accesscontrol_dot_policy__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n+chainmaker/protos/config/chain_config.proto\x12\x06\x63onfig\x1a+chainmaker/protos/consensus/consensus.proto\x1a,chainmaker/protos/accesscontrol/policy.proto\",\n\x0e\x43onfigKeyValue\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\xbb\x05\n\x0b\x43hainConfig\x12\x10\n\x08\x63hain_id\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\t\x12\x11\n\tauth_type\x18\x03 \x01(\t\x12\x10\n\x08sequence\x18\x04 \x01(\x04\x12$\n\x06\x63rypto\x18\x05 \x01(\x0b\x32\x14.config.CryptoConfig\x12\"\n\x05\x62lock\x18\x06 \x01(\x0b\x32\x13.config.BlockConfig\x12 \n\x04\x63ore\x18\x07 \x01(\x0b\x32\x12.config.CoreConfig\x12*\n\tconsensus\x18\x08 \x01(\x0b\x32\x17.config.ConsensusConfig\x12,\n\x0btrust_roots\x18\t \x03(\x0b\x32\x17.config.TrustRootConfig\x12\x30\n\rtrust_members\x18\n \x03(\x0b\x32\x19.config.TrustMemberConfig\x12\x31\n\x11resource_policies\x18\x0b \x03(\x0b\x32\x16.config.ResourcePolicy\x12(\n\x08\x63ontract\x18\x0c \x01(\x0b\x32\x16.config.ContractConfig\x12(\n\x08snapshot\x18\r \x01(\x0b\x32\x16.config.SnapshotConfig\x12*\n\tscheduler\x18\x0e \x01(\x0b\x32\x17.config.SchedulerConfig\x12&\n\x07\x63ontext\x18\x0f \x01(\x0b\x32\x15.config.ContextConfig\x12 \n\x18\x64isabled_native_contract\x18\x10 \x03(\t\x12\x30\n\x0e\x61\x63\x63ount_config\x18\x12 \x01(\x0b\x32\x18.config.GasAccountConfig\x12\x16\n\x02vm\x18\x11 \x01(\x0b\x32\n.config.Vm\x12%\n\neth_config\x18\x13 \x01(\x0b\x32\x11.config.EthConfig\"N\n\x0eResourcePolicy\x12\x15\n\rresource_name\x18\x01 \x01(\t\x12%\n\x06policy\x18\x02 \x01(\x0b\x32\x15.accesscontrol.Policy\"\x1c\n\x0c\x43ryptoConfig\x12\x0c\n\x04hash\x18\x01 \x01(\t\"\xd7\x01\n\x0b\x42lockConfig\x12\x1b\n\x13tx_timestamp_verify\x18\x01 \x01(\x08\x12\x12\n\ntx_timeout\x18\x02 \x01(\r\x12\x19\n\x11\x62lock_tx_capacity\x18\x03 \x01(\r\x12\x12\n\nblock_size\x18\x04 \x01(\r\x12\x16\n\x0e\x62lock_interval\x18\x05 \x01(\r\x12\x19\n\x11tx_parameter_size\x18\x06 \x01(\r\x12\x1e\n\x16\x62lock_timestamp_verify\x18\x07 \x01(\x08\x12\x15\n\rblock_timeout\x18\x08 \x01(\r\"*\n\x0fSchedulerConfig\x12\x17\n\x0f\x65nable_evidence\x18\x01 \x01(\x08\"\xb9\x01\n\x10GasAccountConfig\x12\x19\n\x11gas_admin_address\x18\x01 \x01(\t\x12\x11\n\tgas_count\x18\x02 \x01(\r\x12\x12\n\nenable_gas\x18\x03 \x01(\x08\x12\x13\n\x0b\x64\x65\x66\x61ult_gas\x18\x04 \x01(\x04\x12\x19\n\x11\x64\x65\x66\x61ult_gas_price\x18\x05 \x01(\x02\x12\x18\n\x10install_base_gas\x18\x06 \x01(\x04\x12\x19\n\x11install_gas_price\x18\x07 \x01(\x02\")\n\x0eSnapshotConfig\x12\x17\n\x0f\x65nable_evidence\x18\x01 \x01(\x08\"(\n\rContextConfig\x12\x17\n\x0f\x65nable_evidence\x18\x01 \x01(\x08\"c\n\x14\x43onsensusTurboConfig\x12\x1f\n\x17\x63onsensus_message_turbo\x18\x01 \x01(\x08\x12\x12\n\nretry_time\x18\x02 \x01(\x04\x12\x16\n\x0eretry_interval\x18\x03 \x01(\x04\"\xf5\x01\n\nCoreConfig\x12\x1c\n\x14tx_scheduler_timeout\x18\x01 \x01(\x04\x12%\n\x1dtx_scheduler_validate_timeout\x18\x02 \x01(\x04\x12<\n\x16\x63onsensus_turbo_config\x18\x03 \x01(\x0b\x32\x1c.config.ConsensusTurboConfig\x12\x1b\n\x13\x65nable_sender_group\x18\x04 \x01(\x08\x12#\n\x1b\x65nable_conflicts_bit_window\x18\x05 \x01(\x08\x12\"\n\x1a\x65nable_optimize_charge_gas\x18\x06 \x01(\x08\"\xb4\x01\n\x0f\x43onsensusConfig\x12&\n\x04type\x18\x01 \x01(\x0e\x32\x18.consensus.ConsensusType\x12 \n\x05nodes\x18\x02 \x03(\x0b\x32\x11.config.OrgConfig\x12*\n\next_config\x18\x03 \x03(\x0b\x32\x16.config.ConfigKeyValue\x12+\n\x0b\x64pos_config\x18\x04 \x03(\x0b\x32\x16.config.ConfigKeyValue\"=\n\tOrgConfig\x12\x0e\n\x06org_id\x18\x01 \x01(\t\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x03(\t\x12\x0f\n\x07node_id\x18\x03 \x03(\t\"/\n\x0fTrustRootConfig\x12\x0e\n\x06org_id\x18\x01 \x01(\t\x12\x0c\n\x04root\x18\x02 \x03(\t\"p\n\x0e\x43ontractConfig\x12\x1a\n\x12\x65nable_sql_support\x18\x01 \x01(\x08\x12 \n\x18\x64isabled_native_contract\x18\x02 \x03(\t\x12 \n\x18only_creator_can_upgrade\x18\x03 \x01(\x08\"W\n\x11TrustMemberConfig\x12\x13\n\x0bmember_info\x18\x01 \x01(\t\x12\x0e\n\x06org_id\x18\x02 \x01(\t\x12\x0c\n\x04role\x18\x03 \x01(\t\x12\x0f\n\x07node_id\x18\x04 \x01(\t\"a\n\x02Vm\x12\x14\n\x0csupport_list\x18\x01 \x03(\t\x12#\n\taddr_type\x18\x02 \x01(\x0e\x32\x10.config.AddrType\x12 \n\x06native\x18\x03 \x01(\x0b\x32\x10.config.VmNative\"0\n\x08VmNative\x12$\n\tmultisign\x18\x01 \x01(\x0b\x32\x11.config.MultiSign\"&\n\tMultiSign\x12\x19\n\x11\x65nable_manual_run\x18\x01 \x01(\x08\"_\n\tEthConfig\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\x12\x15\n\radmin_address\x18\x02 \x01(\t\x12\x12\n\nenable_gas\x18\x03 \x01(\x08\x12\x17\n\x0f\x65nable_register\x18\x04 \x01(\x08*1\n\x08\x41\x64\x64rType\x12\x0e\n\nCHAINMAKER\x10\x00\x12\x07\n\x03ZXL\x10\x01\x12\x0c\n\x08\x45THEREUM\x10\x02\x42\x45\n\x18org.chainmaker.pb.configZ)chainmaker.org/chainmaker/pb-go/v3/configb\x06proto3')

_ADDRTYPE = DESCRIPTOR.enum_types_by_name['AddrType']
AddrType = enum_type_wrapper.EnumTypeWrapper(_ADDRTYPE)
CHAINMAKER = 0
ZXL = 1
ETHEREUM = 2


_CONFIGKEYVALUE = DESCRIPTOR.message_types_by_name['ConfigKeyValue']
_CHAINCONFIG = DESCRIPTOR.message_types_by_name['ChainConfig']
_RESOURCEPOLICY = DESCRIPTOR.message_types_by_name['ResourcePolicy']
_CRYPTOCONFIG = DESCRIPTOR.message_types_by_name['CryptoConfig']
_BLOCKCONFIG = DESCRIPTOR.message_types_by_name['BlockConfig']
_SCHEDULERCONFIG = DESCRIPTOR.message_types_by_name['SchedulerConfig']
_GASACCOUNTCONFIG = DESCRIPTOR.message_types_by_name['GasAccountConfig']
_SNAPSHOTCONFIG = DESCRIPTOR.message_types_by_name['SnapshotConfig']
_CONTEXTCONFIG = DESCRIPTOR.message_types_by_name['ContextConfig']
_CONSENSUSTURBOCONFIG = DESCRIPTOR.message_types_by_name['ConsensusTurboConfig']
_CORECONFIG = DESCRIPTOR.message_types_by_name['CoreConfig']
_CONSENSUSCONFIG = DESCRIPTOR.message_types_by_name['ConsensusConfig']
_ORGCONFIG = DESCRIPTOR.message_types_by_name['OrgConfig']
_TRUSTROOTCONFIG = DESCRIPTOR.message_types_by_name['TrustRootConfig']
_CONTRACTCONFIG = DESCRIPTOR.message_types_by_name['ContractConfig']
_TRUSTMEMBERCONFIG = DESCRIPTOR.message_types_by_name['TrustMemberConfig']
_VM = DESCRIPTOR.message_types_by_name['Vm']
_VMNATIVE = DESCRIPTOR.message_types_by_name['VmNative']
_MULTISIGN = DESCRIPTOR.message_types_by_name['MultiSign']
_ETHCONFIG = DESCRIPTOR.message_types_by_name['EthConfig']
ConfigKeyValue = _reflection.GeneratedProtocolMessageType('ConfigKeyValue', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGKEYVALUE,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.ConfigKeyValue)
  })
_sym_db.RegisterMessage(ConfigKeyValue)

ChainConfig = _reflection.GeneratedProtocolMessageType('ChainConfig', (_message.Message,), {
  'DESCRIPTOR' : _CHAINCONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.ChainConfig)
  })
_sym_db.RegisterMessage(ChainConfig)

ResourcePolicy = _reflection.GeneratedProtocolMessageType('ResourcePolicy', (_message.Message,), {
  'DESCRIPTOR' : _RESOURCEPOLICY,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.ResourcePolicy)
  })
_sym_db.RegisterMessage(ResourcePolicy)

CryptoConfig = _reflection.GeneratedProtocolMessageType('CryptoConfig', (_message.Message,), {
  'DESCRIPTOR' : _CRYPTOCONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.CryptoConfig)
  })
_sym_db.RegisterMessage(CryptoConfig)

BlockConfig = _reflection.GeneratedProtocolMessageType('BlockConfig', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKCONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.BlockConfig)
  })
_sym_db.RegisterMessage(BlockConfig)

SchedulerConfig = _reflection.GeneratedProtocolMessageType('SchedulerConfig', (_message.Message,), {
  'DESCRIPTOR' : _SCHEDULERCONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.SchedulerConfig)
  })
_sym_db.RegisterMessage(SchedulerConfig)

GasAccountConfig = _reflection.GeneratedProtocolMessageType('GasAccountConfig', (_message.Message,), {
  'DESCRIPTOR' : _GASACCOUNTCONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.GasAccountConfig)
  })
_sym_db.RegisterMessage(GasAccountConfig)

SnapshotConfig = _reflection.GeneratedProtocolMessageType('SnapshotConfig', (_message.Message,), {
  'DESCRIPTOR' : _SNAPSHOTCONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.SnapshotConfig)
  })
_sym_db.RegisterMessage(SnapshotConfig)

ContextConfig = _reflection.GeneratedProtocolMessageType('ContextConfig', (_message.Message,), {
  'DESCRIPTOR' : _CONTEXTCONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.ContextConfig)
  })
_sym_db.RegisterMessage(ContextConfig)

ConsensusTurboConfig = _reflection.GeneratedProtocolMessageType('ConsensusTurboConfig', (_message.Message,), {
  'DESCRIPTOR' : _CONSENSUSTURBOCONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.ConsensusTurboConfig)
  })
_sym_db.RegisterMessage(ConsensusTurboConfig)

CoreConfig = _reflection.GeneratedProtocolMessageType('CoreConfig', (_message.Message,), {
  'DESCRIPTOR' : _CORECONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.CoreConfig)
  })
_sym_db.RegisterMessage(CoreConfig)

ConsensusConfig = _reflection.GeneratedProtocolMessageType('ConsensusConfig', (_message.Message,), {
  'DESCRIPTOR' : _CONSENSUSCONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.ConsensusConfig)
  })
_sym_db.RegisterMessage(ConsensusConfig)

OrgConfig = _reflection.GeneratedProtocolMessageType('OrgConfig', (_message.Message,), {
  'DESCRIPTOR' : _ORGCONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.OrgConfig)
  })
_sym_db.RegisterMessage(OrgConfig)

TrustRootConfig = _reflection.GeneratedProtocolMessageType('TrustRootConfig', (_message.Message,), {
  'DESCRIPTOR' : _TRUSTROOTCONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.TrustRootConfig)
  })
_sym_db.RegisterMessage(TrustRootConfig)

ContractConfig = _reflection.GeneratedProtocolMessageType('ContractConfig', (_message.Message,), {
  'DESCRIPTOR' : _CONTRACTCONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.ContractConfig)
  })
_sym_db.RegisterMessage(ContractConfig)

TrustMemberConfig = _reflection.GeneratedProtocolMessageType('TrustMemberConfig', (_message.Message,), {
  'DESCRIPTOR' : _TRUSTMEMBERCONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.TrustMemberConfig)
  })
_sym_db.RegisterMessage(TrustMemberConfig)

Vm = _reflection.GeneratedProtocolMessageType('Vm', (_message.Message,), {
  'DESCRIPTOR' : _VM,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.Vm)
  })
_sym_db.RegisterMessage(Vm)

VmNative = _reflection.GeneratedProtocolMessageType('VmNative', (_message.Message,), {
  'DESCRIPTOR' : _VMNATIVE,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.VmNative)
  })
_sym_db.RegisterMessage(VmNative)

MultiSign = _reflection.GeneratedProtocolMessageType('MultiSign', (_message.Message,), {
  'DESCRIPTOR' : _MULTISIGN,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.MultiSign)
  })
_sym_db.RegisterMessage(MultiSign)

EthConfig = _reflection.GeneratedProtocolMessageType('EthConfig', (_message.Message,), {
  'DESCRIPTOR' : _ETHCONFIG,
  '__module__' : 'chainmaker.protos.config.chain_config_pb2'
  # @@protoc_insertion_point(class_scope:config.EthConfig)
  })
_sym_db.RegisterMessage(EthConfig)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\030org.chainmaker.pb.configZ)chainmaker.org/chainmaker/pb-go/v3/config'
  _ADDRTYPE._serialized_start=2672
  _ADDRTYPE._serialized_end=2721
  _CONFIGKEYVALUE._serialized_start=146
  _CONFIGKEYVALUE._serialized_end=190
  _CHAINCONFIG._serialized_start=193
  _CHAINCONFIG._serialized_end=892
  _RESOURCEPOLICY._serialized_start=894
  _RESOURCEPOLICY._serialized_end=972
  _CRYPTOCONFIG._serialized_start=974
  _CRYPTOCONFIG._serialized_end=1002
  _BLOCKCONFIG._serialized_start=1005
  _BLOCKCONFIG._serialized_end=1220
  _SCHEDULERCONFIG._serialized_start=1222
  _SCHEDULERCONFIG._serialized_end=1264
  _GASACCOUNTCONFIG._serialized_start=1267
  _GASACCOUNTCONFIG._serialized_end=1452
  _SNAPSHOTCONFIG._serialized_start=1454
  _SNAPSHOTCONFIG._serialized_end=1495
  _CONTEXTCONFIG._serialized_start=1497
  _CONTEXTCONFIG._serialized_end=1537
  _CONSENSUSTURBOCONFIG._serialized_start=1539
  _CONSENSUSTURBOCONFIG._serialized_end=1638
  _CORECONFIG._serialized_start=1641
  _CORECONFIG._serialized_end=1886
  _CONSENSUSCONFIG._serialized_start=1889
  _CONSENSUSCONFIG._serialized_end=2069
  _ORGCONFIG._serialized_start=2071
  _ORGCONFIG._serialized_end=2132
  _TRUSTROOTCONFIG._serialized_start=2134
  _TRUSTROOTCONFIG._serialized_end=2181
  _CONTRACTCONFIG._serialized_start=2183
  _CONTRACTCONFIG._serialized_end=2295
  _TRUSTMEMBERCONFIG._serialized_start=2297
  _TRUSTMEMBERCONFIG._serialized_end=2384
  _VM._serialized_start=2386
  _VM._serialized_end=2483
  _VMNATIVE._serialized_start=2485
  _VMNATIVE._serialized_end=2533
  _MULTISIGN._serialized_start=2535
  _MULTISIGN._serialized_end=2573
  _ETHCONFIG._serialized_start=2575
  _ETHCONFIG._serialized_end=2670
# @@protoc_insertion_point(module_scope)
