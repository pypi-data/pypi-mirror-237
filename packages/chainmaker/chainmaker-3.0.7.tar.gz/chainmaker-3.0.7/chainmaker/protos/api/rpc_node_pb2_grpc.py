# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from chainmaker.protos.common import request_pb2 as chainmaker_dot_protos_dot_common_dot_request__pb2
from chainmaker.protos.common import result_pb2 as chainmaker_dot_protos_dot_common_dot_result__pb2
from chainmaker.protos.config import chainmaker_server_pb2 as chainmaker_dot_protos_dot_config_dot_chainmaker__server__pb2
from chainmaker.protos.config import local_config_pb2 as chainmaker_dot_protos_dot_config_dot_local__config__pb2
from chainmaker.protos.config import log_config_pb2 as chainmaker_dot_protos_dot_config_dot_log__config__pb2
from chainmaker.protos.consensus import consensus_pb2 as chainmaker_dot_protos_dot_consensus_dot_consensus__pb2
from chainmaker.protos.google.protobuf import wrappers_pb2 as chainmaker_dot_protos_dot_google_dot_protobuf_dot_wrappers__pb2
from chainmaker.protos.txpool import transaction_pool_pb2 as chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2


class RpcNodeStub(object):
    """rpcNnode is the server API for
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendRequest = channel.unary_unary(
                '/api.RpcNode/SendRequest',
                request_serializer=chainmaker_dot_protos_dot_common_dot_request__pb2.TxRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_common_dot_result__pb2.TxResponse.FromString,
                )
        self.SendRequestSync = channel.unary_unary(
                '/api.RpcNode/SendRequestSync',
                request_serializer=chainmaker_dot_protos_dot_common_dot_request__pb2.TxRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_common_dot_result__pb2.TxResponse.FromString,
                )
        self.Subscribe = channel.unary_stream(
                '/api.RpcNode/Subscribe',
                request_serializer=chainmaker_dot_protos_dot_common_dot_request__pb2.TxRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_common_dot_result__pb2.SubscribeResult.FromString,
                )
        self.SubscribeWS = channel.unary_stream(
                '/api.RpcNode/SubscribeWS',
                request_serializer=chainmaker_dot_protos_dot_common_dot_request__pb2.RawTxRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_common_dot_result__pb2.SubscribeResult.FromString,
                )
        self.UpdateDebugConfig = channel.unary_unary(
                '/api.RpcNode/UpdateDebugConfig',
                request_serializer=chainmaker_dot_protos_dot_config_dot_local__config__pb2.DebugConfigRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_config_dot_local__config__pb2.DebugConfigResponse.FromString,
                )
        self.RefreshLogLevelsConfig = channel.unary_unary(
                '/api.RpcNode/RefreshLogLevelsConfig',
                request_serializer=chainmaker_dot_protos_dot_config_dot_log__config__pb2.LogLevelsRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_config_dot_log__config__pb2.LogLevelsResponse.FromString,
                )
        self.GetChainMakerVersion = channel.unary_unary(
                '/api.RpcNode/GetChainMakerVersion',
                request_serializer=chainmaker_dot_protos_dot_config_dot_chainmaker__server__pb2.ChainMakerVersionRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_config_dot_chainmaker__server__pb2.ChainMakerVersionResponse.FromString,
                )
        self.CheckNewBlockChainConfig = channel.unary_unary(
                '/api.RpcNode/CheckNewBlockChainConfig',
                request_serializer=chainmaker_dot_protos_dot_config_dot_local__config__pb2.CheckNewBlockChainConfigRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_config_dot_local__config__pb2.CheckNewBlockChainConfigResponse.FromString,
                )
        self.GetPoolStatus = channel.unary_unary(
                '/api.RpcNode/GetPoolStatus',
                request_serializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetPoolStatusRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.TxPoolStatus.FromString,
                )
        self.GetTxIdsByTypeAndStage = channel.unary_unary(
                '/api.RpcNode/GetTxIdsByTypeAndStage',
                request_serializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxIdsByTypeAndStageRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxIdsByTypeAndStageResponse.FromString,
                )
        self.GetTxsInPoolByTxIds = channel.unary_unary(
                '/api.RpcNode/GetTxsInPoolByTxIds',
                request_serializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxsInPoolByTxIdsRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxsInPoolByTxIdsResponse.FromString,
                )
        self.GetTxStatus = channel.unary_unary(
                '/api.RpcNode/GetTxStatus',
                request_serializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxStatusRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxStatusResponse.FromString,
                )
        self.GetConsensusStateJSON = channel.unary_unary(
                '/api.RpcNode/GetConsensusStateJSON',
                request_serializer=chainmaker_dot_protos_dot_consensus_dot_consensus__pb2.GetConsensusStatusRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )
        self.GetConsensusValidators = channel.unary_unary(
                '/api.RpcNode/GetConsensusValidators',
                request_serializer=chainmaker_dot_protos_dot_consensus_dot_consensus__pb2.GetConsensusStatusRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_consensus_dot_consensus__pb2.Validators.FromString,
                )
        self.GetConsensusHeight = channel.unary_unary(
                '/api.RpcNode/GetConsensusHeight',
                request_serializer=chainmaker_dot_protos_dot_consensus_dot_consensus__pb2.GetConsensusStatusRequest.SerializeToString,
                response_deserializer=chainmaker_dot_protos_dot_google_dot_protobuf_dot_wrappers__pb2.UInt64Value.FromString,
                )


class RpcNodeServicer(object):
    """rpcNnode is the server API for
    """

    def SendRequest(self, request, context):
        """processing transaction message requests
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendRequestSync(self, request, context):
        """processing transaction message requests in sync mode.
        returns tx execution result
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """processing requests for message subscription
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeWS(self, request, context):
        """processing requests for message subscription by websocket
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDebugConfig(self, request, context):
        """update debug status (development debugging)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshLogLevelsConfig(self, request, context):
        """refreshLogLevelsConfig
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChainMakerVersion(self, request, context):
        """get chainmaker version
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckNewBlockChainConfig(self, request, context):
        """check chain configuration and load new chain dynamically
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPoolStatus(self, request, context):
        """GetPoolStatus Returns the max size of config transaction pool and common transaction pool,
        the num of config transaction in queue and pendingCache,
        and the the num of common transaction in queue and pendingCache.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTxIdsByTypeAndStage(self, request, context):
        """GetTxIdsByTypeAndStage Returns config or common txIds in different stage.
        TxType may be TxType_CONFIG_TX, TxType_COMMON_TX, (TxType_CONFIG_TX|TxType_COMMON_TX)
        TxStage may be TxStage_IN_QUEUE, TxStage_IN_PENDING, (TxStage_IN_QUEUE|TxStage_IN_PENDING)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTxsInPoolByTxIds(self, request, context):
        """GetTxsInPoolByTxIds Retrieve the transactions by the txIds from the txPool,
        return transactions in the txPool and txIds not in txPool.
        default query upper limit is 1w transaction, and error is returned if the limit is exceeded.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTxStatus(self, request, context):
        """GetTxStatus Get the transaction status by txId.
        return TxStatus.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConsensusStateJSON(self, request, context):
        """GetConsensusStateJSON query the state of the consensus,
        return the consensus status after JSON serialization, including consensus nodes, heights, and views.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConsensusValidators(self, request, context):
        """GetConsensusValidators Gets the consensus node list
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConsensusHeight(self, request, context):
        """GetConsensusHeight Gets the height of the block that the node is currently agreeing on
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RpcNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.SendRequest,
                    request_deserializer=chainmaker_dot_protos_dot_common_dot_request__pb2.TxRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_common_dot_result__pb2.TxResponse.SerializeToString,
            ),
            'SendRequestSync': grpc.unary_unary_rpc_method_handler(
                    servicer.SendRequestSync,
                    request_deserializer=chainmaker_dot_protos_dot_common_dot_request__pb2.TxRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_common_dot_result__pb2.TxResponse.SerializeToString,
            ),
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=chainmaker_dot_protos_dot_common_dot_request__pb2.TxRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_common_dot_result__pb2.SubscribeResult.SerializeToString,
            ),
            'SubscribeWS': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeWS,
                    request_deserializer=chainmaker_dot_protos_dot_common_dot_request__pb2.RawTxRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_common_dot_result__pb2.SubscribeResult.SerializeToString,
            ),
            'UpdateDebugConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDebugConfig,
                    request_deserializer=chainmaker_dot_protos_dot_config_dot_local__config__pb2.DebugConfigRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_config_dot_local__config__pb2.DebugConfigResponse.SerializeToString,
            ),
            'RefreshLogLevelsConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshLogLevelsConfig,
                    request_deserializer=chainmaker_dot_protos_dot_config_dot_log__config__pb2.LogLevelsRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_config_dot_log__config__pb2.LogLevelsResponse.SerializeToString,
            ),
            'GetChainMakerVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChainMakerVersion,
                    request_deserializer=chainmaker_dot_protos_dot_config_dot_chainmaker__server__pb2.ChainMakerVersionRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_config_dot_chainmaker__server__pb2.ChainMakerVersionResponse.SerializeToString,
            ),
            'CheckNewBlockChainConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckNewBlockChainConfig,
                    request_deserializer=chainmaker_dot_protos_dot_config_dot_local__config__pb2.CheckNewBlockChainConfigRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_config_dot_local__config__pb2.CheckNewBlockChainConfigResponse.SerializeToString,
            ),
            'GetPoolStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPoolStatus,
                    request_deserializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetPoolStatusRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.TxPoolStatus.SerializeToString,
            ),
            'GetTxIdsByTypeAndStage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTxIdsByTypeAndStage,
                    request_deserializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxIdsByTypeAndStageRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxIdsByTypeAndStageResponse.SerializeToString,
            ),
            'GetTxsInPoolByTxIds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTxsInPoolByTxIds,
                    request_deserializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxsInPoolByTxIdsRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxsInPoolByTxIdsResponse.SerializeToString,
            ),
            'GetTxStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTxStatus,
                    request_deserializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxStatusRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxStatusResponse.SerializeToString,
            ),
            'GetConsensusStateJSON': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConsensusStateJSON,
                    request_deserializer=chainmaker_dot_protos_dot_consensus_dot_consensus__pb2.GetConsensusStatusRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
            'GetConsensusValidators': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConsensusValidators,
                    request_deserializer=chainmaker_dot_protos_dot_consensus_dot_consensus__pb2.GetConsensusStatusRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_consensus_dot_consensus__pb2.Validators.SerializeToString,
            ),
            'GetConsensusHeight': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConsensusHeight,
                    request_deserializer=chainmaker_dot_protos_dot_consensus_dot_consensus__pb2.GetConsensusStatusRequest.FromString,
                    response_serializer=chainmaker_dot_protos_dot_google_dot_protobuf_dot_wrappers__pb2.UInt64Value.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.RpcNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RpcNode(object):
    """rpcNnode is the server API for
    """

    @staticmethod
    def SendRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RpcNode/SendRequest',
            chainmaker_dot_protos_dot_common_dot_request__pb2.TxRequest.SerializeToString,
            chainmaker_dot_protos_dot_common_dot_result__pb2.TxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendRequestSync(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RpcNode/SendRequestSync',
            chainmaker_dot_protos_dot_common_dot_request__pb2.TxRequest.SerializeToString,
            chainmaker_dot_protos_dot_common_dot_result__pb2.TxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.RpcNode/Subscribe',
            chainmaker_dot_protos_dot_common_dot_request__pb2.TxRequest.SerializeToString,
            chainmaker_dot_protos_dot_common_dot_result__pb2.SubscribeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeWS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.RpcNode/SubscribeWS',
            chainmaker_dot_protos_dot_common_dot_request__pb2.RawTxRequest.SerializeToString,
            chainmaker_dot_protos_dot_common_dot_result__pb2.SubscribeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDebugConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RpcNode/UpdateDebugConfig',
            chainmaker_dot_protos_dot_config_dot_local__config__pb2.DebugConfigRequest.SerializeToString,
            chainmaker_dot_protos_dot_config_dot_local__config__pb2.DebugConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefreshLogLevelsConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RpcNode/RefreshLogLevelsConfig',
            chainmaker_dot_protos_dot_config_dot_log__config__pb2.LogLevelsRequest.SerializeToString,
            chainmaker_dot_protos_dot_config_dot_log__config__pb2.LogLevelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetChainMakerVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RpcNode/GetChainMakerVersion',
            chainmaker_dot_protos_dot_config_dot_chainmaker__server__pb2.ChainMakerVersionRequest.SerializeToString,
            chainmaker_dot_protos_dot_config_dot_chainmaker__server__pb2.ChainMakerVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckNewBlockChainConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RpcNode/CheckNewBlockChainConfig',
            chainmaker_dot_protos_dot_config_dot_local__config__pb2.CheckNewBlockChainConfigRequest.SerializeToString,
            chainmaker_dot_protos_dot_config_dot_local__config__pb2.CheckNewBlockChainConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPoolStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RpcNode/GetPoolStatus',
            chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetPoolStatusRequest.SerializeToString,
            chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.TxPoolStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTxIdsByTypeAndStage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RpcNode/GetTxIdsByTypeAndStage',
            chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxIdsByTypeAndStageRequest.SerializeToString,
            chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxIdsByTypeAndStageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTxsInPoolByTxIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RpcNode/GetTxsInPoolByTxIds',
            chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxsInPoolByTxIdsRequest.SerializeToString,
            chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxsInPoolByTxIdsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTxStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RpcNode/GetTxStatus',
            chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxStatusRequest.SerializeToString,
            chainmaker_dot_protos_dot_txpool_dot_transaction__pool__pb2.GetTxStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConsensusStateJSON(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RpcNode/GetConsensusStateJSON',
            chainmaker_dot_protos_dot_consensus_dot_consensus__pb2.GetConsensusStatusRequest.SerializeToString,
            chainmaker_dot_protos_dot_google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConsensusValidators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RpcNode/GetConsensusValidators',
            chainmaker_dot_protos_dot_consensus_dot_consensus__pb2.GetConsensusStatusRequest.SerializeToString,
            chainmaker_dot_protos_dot_consensus_dot_consensus__pb2.Validators.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConsensusHeight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RpcNode/GetConsensusHeight',
            chainmaker_dot_protos_dot_consensus_dot_consensus__pb2.GetConsensusStatusRequest.SerializeToString,
            chainmaker_dot_protos_dot_google_dot_protobuf_dot_wrappers__pb2.UInt64Value.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
