# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chainmaker/protos/tee/enclave_server.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from chainmaker.protos.common import request_pb2 as chainmaker_dot_protos_dot_common_dot_request__pb2
from chainmaker.protos.common import result_pb2 as chainmaker_dot_protos_dot_common_dot_result__pb2
from chainmaker.protos.common import rwset_pb2 as chainmaker_dot_protos_dot_common_dot_rwset__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n*chainmaker/protos/tee/enclave_server.proto\x12\x03tee\x1a&chainmaker/protos/common/request.proto\x1a%chainmaker/protos/common/result.proto\x1a$chainmaker/protos/common/rwset.proto\"H\n\x12InitEnclaveRequest\x12\x19\n\x11tee_cert_sign_alg\x18\x01 \x01(\t\x12\x17\n\x0ftee_encrypt_alg\x18\x02 \x01(\t\"N\n\x13InitEnclaveResponse\x12\x12\n\ntee_report\x18\x01 \x01(\x0c\x12\x12\n\ntee_pubkey\x18\x02 \x01(\x0c\x12\x0f\n\x07tee_csr\x18\x03 \x01(\x0c\"c\n\x0f\x45nclaveResponse\x12=\n\x18\x65nclave_response_payload\x18\x01 \x01(\x0b\x32\x1b.tee.EnclaveResponsePayload\x12\x11\n\tsignature\x18\x02 \x01(\x0c\"\xf0\x01\n\x16\x45nclaveResponsePayload\x12/\n\x0f\x63ontract_result\x18\x01 \x01(\x0b\x32\x16.common.ContractResult\x12!\n\x08tx_rwset\x18\x02 \x01(\x0b\x32\x0f.common.TxRWSet\x12%\n\ntx_request\x18\x03 \x01(\x0b\x32\x11.common.TxRequest\x12\x15\n\rcontract_name\x18\x04 \x01(\t\x12\x18\n\x10\x63ontract_version\x18\x05 \x01(\t\x12\x15\n\rcontract_hash\x18\x06 \x01(\t\x12\x13\n\x0breport_hash\x18\x07 \x01(\t\"-\n\x18RemoteAttestationRequest\x12\x11\n\tchallenge\x18\x01 \x01(\t\"q\n\x19RemoteAttestationResponse\x12\x41\n\x1aremote_attestation_payload\x18\x01 \x01(\x0b\x32\x1d.tee.RemoteAttestationPayload\x12\x11\n\tsignature\x18\x02 \x01(\x0c\"O\n\x18RemoteAttestationPayload\x12\x11\n\tchallenge\x18\x01 \x01(\t\x12\x0e\n\x06report\x18\x02 \x01(\x0c\x12\x10\n\x08tee_cert\x18\x03 \x01(\x0c\x32\xa8\x02\n\rEnclaveServer\x12\x42\n\x0bInitEnclave\x12\x17.tee.InitEnclaveRequest\x1a\x18.tee.InitEnclaveResponse\"\x00\x12;\n\x0e\x44\x65ployContract\x12\x11.common.TxRequest\x1a\x14.tee.EnclaveResponse\"\x00\x12;\n\x0eInvokeContract\x12\x11.common.TxRequest\x1a\x14.tee.EnclaveResponse\"\x00\x12Y\n\x16RemoteAttestationProve\x12\x1d.tee.RemoteAttestationRequest\x1a\x1e.tee.RemoteAttestationResponse\"\x00\x42<\n\x15org.chainmaker.pb.teeZ#chainmaker.org/chainmaker/pb-go/teeb\x06proto3')



_INITENCLAVEREQUEST = DESCRIPTOR.message_types_by_name['InitEnclaveRequest']
_INITENCLAVERESPONSE = DESCRIPTOR.message_types_by_name['InitEnclaveResponse']
_ENCLAVERESPONSE = DESCRIPTOR.message_types_by_name['EnclaveResponse']
_ENCLAVERESPONSEPAYLOAD = DESCRIPTOR.message_types_by_name['EnclaveResponsePayload']
_REMOTEATTESTATIONREQUEST = DESCRIPTOR.message_types_by_name['RemoteAttestationRequest']
_REMOTEATTESTATIONRESPONSE = DESCRIPTOR.message_types_by_name['RemoteAttestationResponse']
_REMOTEATTESTATIONPAYLOAD = DESCRIPTOR.message_types_by_name['RemoteAttestationPayload']
InitEnclaveRequest = _reflection.GeneratedProtocolMessageType('InitEnclaveRequest', (_message.Message,), {
  'DESCRIPTOR' : _INITENCLAVEREQUEST,
  '__module__' : 'chainmaker.protos.tee.enclave_server_pb2'
  # @@protoc_insertion_point(class_scope:tee.InitEnclaveRequest)
  })
_sym_db.RegisterMessage(InitEnclaveRequest)

InitEnclaveResponse = _reflection.GeneratedProtocolMessageType('InitEnclaveResponse', (_message.Message,), {
  'DESCRIPTOR' : _INITENCLAVERESPONSE,
  '__module__' : 'chainmaker.protos.tee.enclave_server_pb2'
  # @@protoc_insertion_point(class_scope:tee.InitEnclaveResponse)
  })
_sym_db.RegisterMessage(InitEnclaveResponse)

EnclaveResponse = _reflection.GeneratedProtocolMessageType('EnclaveResponse', (_message.Message,), {
  'DESCRIPTOR' : _ENCLAVERESPONSE,
  '__module__' : 'chainmaker.protos.tee.enclave_server_pb2'
  # @@protoc_insertion_point(class_scope:tee.EnclaveResponse)
  })
_sym_db.RegisterMessage(EnclaveResponse)

EnclaveResponsePayload = _reflection.GeneratedProtocolMessageType('EnclaveResponsePayload', (_message.Message,), {
  'DESCRIPTOR' : _ENCLAVERESPONSEPAYLOAD,
  '__module__' : 'chainmaker.protos.tee.enclave_server_pb2'
  # @@protoc_insertion_point(class_scope:tee.EnclaveResponsePayload)
  })
_sym_db.RegisterMessage(EnclaveResponsePayload)

RemoteAttestationRequest = _reflection.GeneratedProtocolMessageType('RemoteAttestationRequest', (_message.Message,), {
  'DESCRIPTOR' : _REMOTEATTESTATIONREQUEST,
  '__module__' : 'chainmaker.protos.tee.enclave_server_pb2'
  # @@protoc_insertion_point(class_scope:tee.RemoteAttestationRequest)
  })
_sym_db.RegisterMessage(RemoteAttestationRequest)

RemoteAttestationResponse = _reflection.GeneratedProtocolMessageType('RemoteAttestationResponse', (_message.Message,), {
  'DESCRIPTOR' : _REMOTEATTESTATIONRESPONSE,
  '__module__' : 'chainmaker.protos.tee.enclave_server_pb2'
  # @@protoc_insertion_point(class_scope:tee.RemoteAttestationResponse)
  })
_sym_db.RegisterMessage(RemoteAttestationResponse)

RemoteAttestationPayload = _reflection.GeneratedProtocolMessageType('RemoteAttestationPayload', (_message.Message,), {
  'DESCRIPTOR' : _REMOTEATTESTATIONPAYLOAD,
  '__module__' : 'chainmaker.protos.tee.enclave_server_pb2'
  # @@protoc_insertion_point(class_scope:tee.RemoteAttestationPayload)
  })
_sym_db.RegisterMessage(RemoteAttestationPayload)

_ENCLAVESERVER = DESCRIPTOR.services_by_name['EnclaveServer']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\025org.chainmaker.pb.teeZ#chainmaker.org/chainmaker/pb-go/tee'
  _INITENCLAVEREQUEST._serialized_start=168
  _INITENCLAVEREQUEST._serialized_end=240
  _INITENCLAVERESPONSE._serialized_start=242
  _INITENCLAVERESPONSE._serialized_end=320
  _ENCLAVERESPONSE._serialized_start=322
  _ENCLAVERESPONSE._serialized_end=421
  _ENCLAVERESPONSEPAYLOAD._serialized_start=424
  _ENCLAVERESPONSEPAYLOAD._serialized_end=664
  _REMOTEATTESTATIONREQUEST._serialized_start=666
  _REMOTEATTESTATIONREQUEST._serialized_end=711
  _REMOTEATTESTATIONRESPONSE._serialized_start=713
  _REMOTEATTESTATIONRESPONSE._serialized_end=826
  _REMOTEATTESTATIONPAYLOAD._serialized_start=828
  _REMOTEATTESTATIONPAYLOAD._serialized_end=907
  _ENCLAVESERVER._serialized_start=910
  _ENCLAVESERVER._serialized_end=1206
# @@protoc_insertion_point(module_scope)
