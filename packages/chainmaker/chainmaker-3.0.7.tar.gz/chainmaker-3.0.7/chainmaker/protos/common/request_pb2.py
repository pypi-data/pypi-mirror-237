# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chainmaker/protos/common/request.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from chainmaker.protos.accesscontrol import member_pb2 as chainmaker_dot_protos_dot_accesscontrol_dot_member__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n&chainmaker/protos/common/request.proto\x12\x06\x63ommon\x1a,chainmaker/protos/accesscontrol/member.proto\"\xad\x01\n\tTxRequest\x12 \n\x07payload\x18\x01 \x01(\x0b\x32\x0f.common.Payload\x12(\n\x06sender\x18\x02 \x01(\x0b\x32\x18.common.EndorsementEntry\x12+\n\tendorsers\x18\x03 \x03(\x0b\x32\x18.common.EndorsementEntry\x12\'\n\x05payer\x18\x04 \x01(\x0b\x32\x18.common.EndorsementEntry\"\x1d\n\x0cRawTxRequest\x12\r\n\x05rawTx\x18\x01 \x01(\x0c\"\xf8\x01\n\x07Payload\x12\x10\n\x08\x63hain_id\x18\x01 \x01(\t\x12\x1f\n\x07tx_type\x18\x02 \x01(\x0e\x32\x0e.common.TxType\x12\r\n\x05tx_id\x18\x03 \x01(\t\x12\x11\n\ttimestamp\x18\x04 \x01(\x03\x12\x17\n\x0f\x65xpiration_time\x18\x05 \x01(\x03\x12\x15\n\rcontract_name\x18\x06 \x01(\t\x12\x0e\n\x06method\x18\x07 \x01(\t\x12(\n\nparameters\x18\x08 \x03(\x0b\x32\x14.common.KeyValuePair\x12\x10\n\x08sequence\x18\t \x01(\x04\x12\x1c\n\x05limit\x18\n \x01(\x0b\x32\r.common.Limit\"L\n\x10\x45ndorsementEntry\x12%\n\x06signer\x18\x01 \x01(\x0b\x32\x15.accesscontrol.Member\x12\x11\n\tsignature\x18\x02 \x01(\x0c\"*\n\x0cKeyValuePair\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c\"-\n\x05Limit\x12\x11\n\tgas_limit\x18\x01 \x01(\x04\x12\x11\n\tgas_price\x18\x02 \x01(\x04*\x85\x01\n\x06TxType\x12\x13\n\x0fINVOKE_CONTRACT\x10\x00\x12\x12\n\x0eQUERY_CONTRACT\x10\x01\x12\r\n\tSUBSCRIBE\x10\x02\x12\x0b\n\x07\x41RCHIVE\x10\x03\x12\n\n\x06\x45TH_TX\x10\x10\x12\x1c\n\x18HOT_COLD_DATA_SEPARATION\x10\x04\x12\x0c\n\x08SNAPSHOT\x10\x05*l\n\x11\x45thTxParameterKey\x12\x08\n\x04\x46ROM\x10\x00\x12\x06\n\x02TO\x10\x01\x12\x07\n\x03GAS\x10\x02\x12\r\n\tGAS_PRICE\x10\x03\x12\t\n\x05VALUE\x10\x04\x12\x08\n\x04\x44\x41TA\x10\x05\x12\x0b\n\x07TX_TYPE\x10\x06\x12\x0b\n\x07GAS_TIP\x10\x07\x42\x45\n\x18org.chainmaker.pb.commonZ)chainmaker.org/chainmaker/pb-go/v3/commonb\x06proto3')

_TXTYPE = DESCRIPTOR.enum_types_by_name['TxType']
TxType = enum_type_wrapper.EnumTypeWrapper(_TXTYPE)
_ETHTXPARAMETERKEY = DESCRIPTOR.enum_types_by_name['EthTxParameterKey']
EthTxParameterKey = enum_type_wrapper.EnumTypeWrapper(_ETHTXPARAMETERKEY)
INVOKE_CONTRACT = 0
QUERY_CONTRACT = 1
SUBSCRIBE = 2
ARCHIVE = 3
ETH_TX = 16
HOT_COLD_DATA_SEPARATION = 4
SNAPSHOT = 5
FROM = 0
TO = 1
GAS = 2
GAS_PRICE = 3
VALUE = 4
DATA = 5
TX_TYPE = 6
GAS_TIP = 7


_TXREQUEST = DESCRIPTOR.message_types_by_name['TxRequest']
_RAWTXREQUEST = DESCRIPTOR.message_types_by_name['RawTxRequest']
_PAYLOAD = DESCRIPTOR.message_types_by_name['Payload']
_ENDORSEMENTENTRY = DESCRIPTOR.message_types_by_name['EndorsementEntry']
_KEYVALUEPAIR = DESCRIPTOR.message_types_by_name['KeyValuePair']
_LIMIT = DESCRIPTOR.message_types_by_name['Limit']
TxRequest = _reflection.GeneratedProtocolMessageType('TxRequest', (_message.Message,), {
  'DESCRIPTOR' : _TXREQUEST,
  '__module__' : 'chainmaker.protos.common.request_pb2'
  # @@protoc_insertion_point(class_scope:common.TxRequest)
  })
_sym_db.RegisterMessage(TxRequest)

RawTxRequest = _reflection.GeneratedProtocolMessageType('RawTxRequest', (_message.Message,), {
  'DESCRIPTOR' : _RAWTXREQUEST,
  '__module__' : 'chainmaker.protos.common.request_pb2'
  # @@protoc_insertion_point(class_scope:common.RawTxRequest)
  })
_sym_db.RegisterMessage(RawTxRequest)

Payload = _reflection.GeneratedProtocolMessageType('Payload', (_message.Message,), {
  'DESCRIPTOR' : _PAYLOAD,
  '__module__' : 'chainmaker.protos.common.request_pb2'
  # @@protoc_insertion_point(class_scope:common.Payload)
  })
_sym_db.RegisterMessage(Payload)

EndorsementEntry = _reflection.GeneratedProtocolMessageType('EndorsementEntry', (_message.Message,), {
  'DESCRIPTOR' : _ENDORSEMENTENTRY,
  '__module__' : 'chainmaker.protos.common.request_pb2'
  # @@protoc_insertion_point(class_scope:common.EndorsementEntry)
  })
_sym_db.RegisterMessage(EndorsementEntry)

KeyValuePair = _reflection.GeneratedProtocolMessageType('KeyValuePair', (_message.Message,), {
  'DESCRIPTOR' : _KEYVALUEPAIR,
  '__module__' : 'chainmaker.protos.common.request_pb2'
  # @@protoc_insertion_point(class_scope:common.KeyValuePair)
  })
_sym_db.RegisterMessage(KeyValuePair)

Limit = _reflection.GeneratedProtocolMessageType('Limit', (_message.Message,), {
  'DESCRIPTOR' : _LIMIT,
  '__module__' : 'chainmaker.protos.common.request_pb2'
  # @@protoc_insertion_point(class_scope:common.Limit)
  })
_sym_db.RegisterMessage(Limit)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\030org.chainmaker.pb.commonZ)chainmaker.org/chainmaker/pb-go/v3/common'
  _TXTYPE._serialized_start=724
  _TXTYPE._serialized_end=857
  _ETHTXPARAMETERKEY._serialized_start=859
  _ETHTXPARAMETERKEY._serialized_end=967
  _TXREQUEST._serialized_start=97
  _TXREQUEST._serialized_end=270
  _RAWTXREQUEST._serialized_start=272
  _RAWTXREQUEST._serialized_end=301
  _PAYLOAD._serialized_start=304
  _PAYLOAD._serialized_end=552
  _ENDORSEMENTENTRY._serialized_start=554
  _ENDORSEMENTENTRY._serialized_end=630
  _KEYVALUEPAIR._serialized_start=632
  _KEYVALUEPAIR._serialized_end=674
  _LIMIT._serialized_start=676
  _LIMIT._serialized_end=721
# @@protoc_insertion_point(module_scope)
