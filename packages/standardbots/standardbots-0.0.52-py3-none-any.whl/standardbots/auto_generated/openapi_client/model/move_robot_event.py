# coding: utf-8

"""
    Standard Bots RO1 Robotics API

    Standard Bots RO1 Robotics API.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@standardbots.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from standardbots.auto_generated.openapi_client import schemas  # noqa: F401


class MoveRobotEvent(
    schemas.AnyTypeSchema,
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Event emitted by the move robot API
    """


    class MetaOapg:
        
        class properties:
            
            
            class kind(
                schemas.AnyTypeSchema,
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "success": "SUCCESS",
                        "failure": "FAILURE",
                        "canceled": "CANCELED",
                        "position": "POSITION",
                        "planning": "PLANNING",
                    }
                
                @schemas.classproperty
                def SUCCESS(cls):
                    return cls("success")
                
                @schemas.classproperty
                def FAILURE(cls):
                    return cls("failure")
                
                @schemas.classproperty
                def CANCELED(cls):
                    return cls("canceled")
                
                @schemas.classproperty
                def POSITION(cls):
                    return cls("position")
                
                @schemas.classproperty
                def PLANNING(cls):
                    return cls("planning")
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                    **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
                ) -> 'kind':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                        **kwargs,
                    )
        
            @staticmethod
            def failure() -> typing.Type['MoveRobotFailureEvent']:
                return MoveRobotFailureEvent
        
            @staticmethod
            def canceled() -> typing.Type['MoveRobotCanceledEvent']:
                return MoveRobotCanceledEvent
        
            @staticmethod
            def position() -> typing.Type['CombinedArmPosition']:
                return CombinedArmPosition
            __annotations__ = {
                "kind": kind,
                "failure": failure,
                "canceled": canceled,
                "position": position,
            }

    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["kind"]) -> MetaOapg.properties.kind: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["failure"]) -> 'MoveRobotFailureEvent': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["canceled"]) -> 'MoveRobotCanceledEvent': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["position"]) -> 'CombinedArmPosition': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["kind", "failure", "canceled", "position", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["kind"]) -> typing.Union[MetaOapg.properties.kind, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["failure"]) -> typing.Union['MoveRobotFailureEvent', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["canceled"]) -> typing.Union['MoveRobotCanceledEvent', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["position"]) -> typing.Union['CombinedArmPosition', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["kind", "failure", "canceled", "position", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        kind: typing.Union[MetaOapg.properties.kind, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        failure: typing.Union['MoveRobotFailureEvent', schemas.Unset] = schemas.unset,
        canceled: typing.Union['MoveRobotCanceledEvent', schemas.Unset] = schemas.unset,
        position: typing.Union['CombinedArmPosition', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'MoveRobotEvent':
        return super().__new__(
            cls,
            *_args,
            kind=kind,
            failure=failure,
            canceled=canceled,
            position=position,
            _configuration=_configuration,
            **kwargs,
        )

from standardbots.auto_generated.openapi_client.model.combined_arm_position import CombinedArmPosition
from standardbots.auto_generated.openapi_client.model.move_robot_canceled_event import MoveRobotCanceledEvent
from standardbots.auto_generated.openapi_client.model.move_robot_failure_event import MoveRobotFailureEvent
